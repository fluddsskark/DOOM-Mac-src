/* I_IBM.C */ticcmd_t *I_BaseTiccmd(void);fixed_t FixedDiv(fixed_t d1, fixed_t d2);int I_GetTime(void);void I_SetPalette(byte *palette);void PPCBlit320(void *srcPtr, void *dstPtr, int rowBytes, int height);void PPCBlit320Small(void *srcPtr, void *dstPtr, int rowBytes, int height);void PPCBlit320Width(void *src, void *dst, long rowBytes, long rows, long width, long sourceSkip);void PPCBlit320WidthMed(void *src, void *dst, long rowBytes, long rows, long width, long sourceSkip);void PPCBlit640Skip(void *srcPtr, void *dstPtr, int rowBytes, int height);void PPCBlit640(void *srcPtr, void *dstPtr, int rowBytes, int height);void PPCBlit640Width(void *srcPtr, void *dstPtr, long rowBytes, long rows, long width, long sourceSkip);void PPCBlit640SkipWidth(void *src, void *dst, long rowBytes, long rows, long width, long sourceSkip);void I_FinishUpdate(void);void I_InitGraphics(void);void I_ShutdownGraphics(void);void HandleMenu(short menuId, short menuItem);void SetToMenuRect(RgnHandle rgn);void HideMenuBar(void);void ShowMenuBar(void);void CheckCursor(Point mouseLocation);void I_StartTic(void);short NumToolboxTraps(void);TrapType GetTrapType(short theTrap);Boolean TrapAvailable(short trapNum);void I_StartupMouse(void);void I_ReadMouse(Point *currMLoc);void I_Init(void);void I_Shutdown(void);void I_Error(char *error, ...);void I_Quit(void);long GetHeapSize(void);byte *I_ZoneBase(int *size);void I_InitDiskFlash(void);void I_BeginRead(void);void I_EndRead(void);byte *I_AllocLow(int length);void I_InitNetwork(void);