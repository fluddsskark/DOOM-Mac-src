/* AM_MAP.C */void AM_getIslope(mline_t *ml, islope_t *is);void AM_activateNewScale(void);void AM_saveScaleAndLoc(void);void AM_restoreScaleAndLoc(void);void AM_addMark(void);void AM_findMinMaxBoundaries(void);void AM_changeWindowLoc(void);void AM_initVariables(void);void AM_loadPics(void);void AM_unloadPics(void);void AM_clearMarks(void);void AM_LevelInit(void);void AM_Stop(void);void AM_Start(void);void AM_minOutWindowScale(void);void AM_maxOutWindowScale(void);boolean AM_Responder(event_t *ev);void AM_changeWindowScale(void);void AM_doFollowPlayer(void);void AM_updateLightLev(void);void AM_Ticker(void);void AM_clearFB(int color);boolean AM_clipMline(mline_t *ml, fline_t *fl);void AM_drawFline(fline_t *fl, int color);void AM_drawMline(mline_t *ml, int color);void AM_drawGrid(int color);void AM_drawWalls(void);void AM_rotate(fixed_t *x, fixed_t *y, angle_t a);void AM_drawLineCharacter(mline_t *lineguy, int lineguylines, fixed_t scale, angle_t angle, int color, fixed_t x, fixed_t y);void AM_drawPlayers(void);void AM_drawThings(int colors, int colorrange);void AM_drawMarks(void);void AM_drawCrosshair(int color);void AM_Drawer(void);