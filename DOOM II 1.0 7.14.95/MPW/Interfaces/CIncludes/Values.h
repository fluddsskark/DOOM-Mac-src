/*	File:		Values.h	Copyright:	© 1984-1993 by Apple Computer, Inc., all rights reserved.	WARNING	This file was auto generated by the interfacer tool. Modifications	must be made to the master file.*/#ifndef __VALUES__#define __VALUES__/* 		Values.h is going away completely in the future. Please use the macros 	defined in the ANSI C headers float.h and limits.h. If you previously	used the macros in Values.h , similar macros defined in float.h and 	limits.h will provide equivalent functionality in most cases.	Old Value.h name			ANSI C name	----------------			-----------	BITSPERBYTE 		->		CHAR_BIT	MAXSHORT 			->		SHRT_MAX	MAXINT 				->		INT_MAX	MAXLONG				->		LONG_MAX	MAXEXTENDED 		->		LDBL_MAX	MAXDOUBLE 			->		DBL_MAX	MAXFLOAT 			->		FLT_MAX	MINEXTENDED 		->		LDBL_MIN	MINDOUBLE 			->		DBL_MIN	MINFLOAT 			->		FLT_MIN	_EXPBASE			->		FLT_RADIX	XMAXEXP				->		LDBL_MAX_EXP	DMAXEXP				->		DBL_MAX_EXP	FMAXEXP				->		FLT_MAX_EXP	XMINEXP 			->		LDBL_MIN_EXP	DMINEXP				->		DBL_MIN_EXP	FMINEXP 			->		FLT_MIN_EXP	XSIGNIF				->		LDBL_MANT_DIG	DSIGNIF				->		DBL_MANT_DIG	FSIGNIF				->		FLT_MANT_DIG*//*	For compatibility with previous releases, the following symbols may be	defined for 68K builds.  For future compatibility, Apple recommends that	you do not use these.		You may supress definition of these symbols by defining the pre-processor	symbol __NO_DEFINITIONS_IN_VALUES__*/#if ! defined (powerc) && ! defined (__powerc) && ! defined (__NO_DEFINITIONS_IN_VALUES__)#ifndef __SANE__#include <SANE.h>#endif#ifndef __LIMITS__#include <limits.h>#endif#ifndef __FLOAT__#include <float.h>#endif#define BITS(type) (CHAR_BIT * (int)sizeof(type))#define HIBITS ((short)(1<<BITS(short)-1))#define HIBITI (1<<BITS(int)-1)#define HIBITL (1L<<BITS(long)-1)#define _IEEE 1#define _XEXPLEN 15#define _DEXPLEN 11#define _FEXPLEN 8#define _HIDDENBIT 1#define _XHIDDENBIT 0#define _LENBASE 1#define XMAXPOWTWO scalb(LDBL_MANT_DIG-1,1.0)#define DMAXPOWTWO scalb(DBL_MANT_DIG-1,1.0)#define FMAXPOWTWO scalb(FLT_MANT_DIG-1,1.0)#define LN_MAXDOUBLE log(DBL_MAX)#define LN_MINDOUBLE log(DBL_MIN)#define MAXCOMP (scalb(63,1.0)-1.0)#endif#endif	/* __VALUES__ */