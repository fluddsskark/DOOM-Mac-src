/* 	File:		TSMTE.h  	Copyright:	© 1984-1994 by Apple Computer, Inc. 				All rights reserved.  	Version:	Universal Interfaces 2.0a3  ETO #16, MPW prerelease.  Friday, November 11, 1994.   	Bugs?:		If you find a problem with this file, send the file and version 				information (from above) and the problem description to:  					Internet:	apple.bugs@applelink.apple.com 					AppleLink:	APPLE.BUGS */#ifndef __TSMTE__#define __TSMTE__#ifndef __TEXTEDIT__#include <TextEdit.h>#endif/*	#include <Quickdraw.h>										*//*		#include <Types.h>										*//*			#include <ConditionalMacros.h>						*//*		#include <MixedMode.h>									*//*		#include <QuickdrawText.h>								*/#ifndef __DIALOGS__#include <Dialogs.h>#endif/*	#include <Errors.h>											*//*	#include <Memory.h>											*//*	#include <Windows.h>										*//*		#include <Events.h>										*//*			#include <OSUtils.h>								*//*		#include <Controls.h>									*//*			#include <Menus.h>									*/#ifndef __APPLEEVENTS__#include <AppleEvents.h>#endif/*	#include <EPPC.h>											*//*		#include <PPCToolbox.h>									*//*			#include <AppleTalk.h>								*//*		#include <Processes.h>									*//*			#include <Files.h>									*//*	#include <Notification.h>									*/#ifndef __TEXTSERVICES__#include <TextServices.h>#endif/*	#include <Components.h>										*/#ifdef __cplusplusextern "C" {#endif#if GENERATINGPOWERPC#pragma options align=mac68k#endif#ifdef __CFM68K__#pragma lib_export on#endifenum {	kTSMTESignature				= 'tmTE',	kTSMTEInterfaceType			= kTSMTESignature,	kTSMTEDialog				= 'tmDI'};/* Gestalt*/enum {	gestaltTSMTEAttr			= kTSMTESignature,	gestaltTSMTEPresent			= 0,	gestaltTSMTE				= 0								/* gestaltTSMTE is old name for gestaltTSMTEPresent */};enum {	gestaltTSMTEVersion			= 'tmTV',	gestaltTSMTE1				= 0x100};/* update flag for TSMTERec*/enum {	kTSMTEAutoScroll			= 1};/* callback procedure definitions*/typedef pascal void (*TSMTEPreUpdateProcPtr)(TEHandle textH, long refCon);typedef pascal void (*TSMTEPostUpdateProcPtr)(TEHandle textH, long fixLen, long inputAreaStart, long inputAreaEnd, long pinStart, long pinEnd, long refCon);#if GENERATINGCFMtypedef UniversalProcPtr TSMTEPreUpdateUPP;typedef UniversalProcPtr TSMTEPostUpdateUPP;#elsetypedef TSMTEPreUpdateProcPtr TSMTEPreUpdateUPP;typedef TSMTEPostUpdateProcPtr TSMTEPostUpdateUPP;#endifstruct TSMTERec {	TEHandle						textH;	TSMTEPreUpdateUPP				preUpdateProc;	TSMTEPostUpdateUPP				postUpdateProc;	long							updateFlag;	long							refCon;};typedef struct TSMTERec TSMTERec, *TSMTERecPtr, **TSMTERecHandle;struct TSMDialogRecord {	DialogRecord					fDialog;	TSMDocumentID					fDocID;	TSMTERecHandle					fTSMTERecH;	long							fTSMTERsvd[3];				/* reserved*/};typedef struct TSMDialogRecord TSMDialogRecord, *TSMDialogPeek;#if GENERATINGCFM#else#endifenum {	uppTSMTEPreUpdateProcInfo = kPascalStackBased		 | STACK_ROUTINE_PARAMETER(1, SIZE_CODE(sizeof(TEHandle)))		 | STACK_ROUTINE_PARAMETER(2, SIZE_CODE(sizeof(long))),	uppTSMTEPostUpdateProcInfo = kPascalStackBased		 | STACK_ROUTINE_PARAMETER(1, SIZE_CODE(sizeof(TEHandle)))		 | STACK_ROUTINE_PARAMETER(2, SIZE_CODE(sizeof(long)))		 | STACK_ROUTINE_PARAMETER(3, SIZE_CODE(sizeof(long)))		 | STACK_ROUTINE_PARAMETER(4, SIZE_CODE(sizeof(long)))		 | STACK_ROUTINE_PARAMETER(5, SIZE_CODE(sizeof(long)))		 | STACK_ROUTINE_PARAMETER(6, SIZE_CODE(sizeof(long)))		 | STACK_ROUTINE_PARAMETER(7, SIZE_CODE(sizeof(long)))};#if GENERATINGCFM#define NewTSMTEPreUpdateProc(userRoutine)		\		(TSMTEPreUpdateUPP) NewRoutineDescriptor((ProcPtr)(userRoutine), uppTSMTEPreUpdateProcInfo, GetCurrentArchitecture())#define NewTSMTEPostUpdateProc(userRoutine)		\		(TSMTEPostUpdateUPP) NewRoutineDescriptor((ProcPtr)(userRoutine), uppTSMTEPostUpdateProcInfo, GetCurrentArchitecture())#else#define NewTSMTEPreUpdateProc(userRoutine)		\		((TSMTEPreUpdateUPP) (userRoutine))#define NewTSMTEPostUpdateProc(userRoutine)		\		((TSMTEPostUpdateUPP) (userRoutine))#endif#if GENERATINGCFM#define CallTSMTEPreUpdateProc(userRoutine, textH, refCon)		\		CallUniversalProc((UniversalProcPtr)(userRoutine), uppTSMTEPreUpdateProcInfo, (textH), (refCon))#define CallTSMTEPostUpdateProc(userRoutine, textH, fixLen, inputAreaStart, inputAreaEnd, pinStart, pinEnd, refCon)		\		CallUniversalProc((UniversalProcPtr)(userRoutine), uppTSMTEPostUpdateProcInfo, (textH), (fixLen), (inputAreaStart), (inputAreaEnd), (pinStart), (pinEnd), (refCon))#else#define CallTSMTEPreUpdateProc(userRoutine, textH, refCon)		\		(*(userRoutine))((textH), (refCon))#define CallTSMTEPostUpdateProc(userRoutine, textH, fixLen, inputAreaStart, inputAreaEnd, pinStart, pinEnd, refCon)		\		(*(userRoutine))((textH), (fixLen), (inputAreaStart), (inputAreaEnd), (pinStart), (pinEnd), (refCon))#endif#ifdef __CFM68K__#pragma lib_export off#endif#if GENERATINGPOWERPC#pragma options align=reset#endif#ifdef __cplusplus}#endif#endif /* __TSMTE__ */