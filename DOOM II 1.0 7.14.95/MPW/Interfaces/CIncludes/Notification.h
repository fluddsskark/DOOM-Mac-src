/* 	File:		Notification.h  	Copyright:	© 1984-1994 by Apple Computer, Inc. 				All rights reserved.  	Version:	Universal Interfaces 2.0a3  ETO #16, MPW prerelease.  Friday, November 11, 1994.   	Bugs?:		If you find a problem with this file, send the file and version 				information (from above) and the problem description to:  					Internet:	apple.bugs@applelink.apple.com 					AppleLink:	APPLE.BUGS */#ifndef __NOTIFICATION__#define __NOTIFICATION__#ifndef __TYPES__#include <Types.h>#endif/*	#include <ConditionalMacros.h>								*/#ifndef __OSUTILS__#include <OSUtils.h>#endif/*	#include <MixedMode.h>										*//*	#include <Memory.h>											*/#ifdef __cplusplusextern "C" {#endif#if GENERATINGPOWERPC#pragma options align=mac68k#endif#ifdef __CFM68K__#pragma lib_export on#endifstruct NMRec {	QElemPtr						qLink;						/*next queue entry*/	short							qType;						/*queue type -- ORD(nmType) = 8*/	short							nmFlags;					/*reserved*/	long							nmPrivate;					/*reserved*/	short							nmReserved;					/*reserved*/	short							nmMark;						/*item to mark in Apple menu*/	Handle							nmIcon;						/*handle to small icon*/	Handle							nmSound;					/*handle to sound record*/	StringPtr						nmStr;						/*string to appear in alert*/	UniversalProcPtr				nmResp;						/*pointer to response routine*/	long							nmRefCon;					/*for application use*/};typedef struct NMRec NMRec, *NMRecPtr;typedef pascal void (*NMProcPtr)(NMRecPtr nmReqPtr);#if GENERATINGCFMtypedef UniversalProcPtr NMUPP;#elsetypedef NMProcPtr NMUPP;#endifenum {	uppNMProcInfo = kPascalStackBased		 | STACK_ROUTINE_PARAMETER(1, SIZE_CODE(sizeof(NMRecPtr)))};#if GENERATINGCFM#define NewNMProc(userRoutine)		\		(NMUPP) NewRoutineDescriptor((ProcPtr)(userRoutine), uppNMProcInfo, GetCurrentArchitecture())#else#define NewNMProc(userRoutine)		\		((NMUPP) (userRoutine))#endif#if GENERATINGCFM#define CallNMProc(userRoutine, nmReqPtr)		\		CallUniversalProc((UniversalProcPtr)(userRoutine), uppNMProcInfo, (nmReqPtr))#else#define CallNMProc(userRoutine, nmReqPtr)		\		(*(userRoutine))((nmReqPtr))#endif/* ------------------ */#if !GENERATINGCFM#pragma parameter __D0 NMInstall(__A0)#endifextern pascal OSErr NMInstall(NMRecPtr nmReqPtr) ONEWORDINLINE(0xA05E);#if !GENERATINGCFM#pragma parameter __D0 NMRemove(__A0)#endifextern pascal OSErr NMRemove(NMRecPtr nmReqPtr) ONEWORDINLINE(0xA05F);#ifdef __CFM68K__#pragma lib_export off#endif#if GENERATINGPOWERPC#pragma options align=reset#endif#ifdef __cplusplus}#endif#endif /* __NOTIFICATION__ */