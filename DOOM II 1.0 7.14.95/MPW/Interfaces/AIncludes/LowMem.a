;;	File:		LowMem.a;;	Copyright:	© 1984-1994 by Apple Computer, Inc.;				All rights reserved.;;	Version:	Universal Interfaces 2.0a3  ETO #16, MPW prerelease.  Friday, November 11, 1994. ;;	Bugs?:		If you find a problem with this file, send the file and version;				information (from above) and the problem description to:;;					Internet:	apple.bugs@applelink.apple.com;					AppleLink:	APPLE.BUGS;;	IF &TYPE('__LOWMEM__') = 'UNDEFINED' THEN__LOWMEM__ SET 1	IF &TYPE('__TYPES__') = 'UNDEFINED' THEN	include 'Types.a'	ENDIF;		include 'ConditionalMacros.a'								;	IF &TYPE('__CONTROLS__') = 'UNDEFINED' THEN	include 'Controls.a'	ENDIF;		include 'Quickdraw.a'										;;			include 'MixedMode.a'									;;			include 'QuickdrawText.a'								;;		include 'Menus.a'											;;			include 'Memory.a'										;;			include 'Events.a'										;;				include 'OSUtils.a'								;	IF &TYPE('__FILES__') = 'UNDEFINED' THEN	include 'Files.a'	ENDIF	IF &TYPE('__FONTS__') = 'UNDEFINED' THEN	include 'Fonts.a'	ENDIF	IF &TYPE('__RESOURCES__') = 'UNDEFINED' THEN	include 'Resources.a'	ENDIF	IF &TYPE('__WINDOWS__') = 'UNDEFINED' THEN	include 'Windows.a'	ENDIF	IF GENERATING68K THEN		Macro		LMGetScrVRes			move.W $0102,(sp)		EndM	ELSE		IMPORT	LMGetScrVRes	ENDIF	IF GENERATING68K THEN		Macro		LMSetScrVRes			move.W (sp)+,$0102		EndM	ELSE		IMPORT	LMSetScrVRes	ENDIF	IF GENERATING68K THEN		Macro		LMGetScrHRes			move.W $0104,(sp)		EndM	ELSE		IMPORT	LMGetScrHRes	ENDIF	IF GENERATING68K THEN		Macro		LMSetScrHRes			move.W (sp)+,$0104		EndM	ELSE		IMPORT	LMSetScrHRes	ENDIF	IF GENERATING68K THEN		Macro		LMGetMemTop			move.L $0108,(sp)		EndM	ELSE		IMPORT	LMGetMemTop	ENDIF	IF GENERATING68K THEN		Macro		LMSetMemTop			move.L (sp)+,$0108		EndM	ELSE		IMPORT	LMSetMemTop	ENDIF	IF GENERATING68K THEN		Macro		LMGetBufPtr			move.L $010C,(sp)		EndM	ELSE		IMPORT	LMGetBufPtr	ENDIF	IF GENERATING68K THEN		Macro		LMSetBufPtr			move.L (sp)+,$010C		EndM	ELSE		IMPORT	LMSetBufPtr	ENDIF	IF GENERATING68K THEN		Macro		LMGetStackLowPoint			move.L $0110,(sp)		EndM	ELSE		IMPORT	LMGetStackLowPoint	ENDIF	IF GENERATING68K THEN		Macro		LMSetStackLowPoint			move.L (sp)+,$0110		EndM	ELSE		IMPORT	LMSetStackLowPoint	ENDIF	IF GENERATING68K THEN		Macro		LMGetHeapEnd			move.L $0114,(sp)		EndM	ELSE		IMPORT	LMGetHeapEnd	ENDIF	IF GENERATING68K THEN		Macro		LMSetHeapEnd			move.L (sp)+,$0114		EndM	ELSE		IMPORT	LMSetHeapEnd	ENDIF	IF GENERATING68K THEN		Macro		LMGetTheZone			move.L $0118,(sp)		EndM	ELSE		IMPORT	LMGetTheZone	ENDIF	IF GENERATING68K THEN		Macro		LMSetTheZone			move.L (sp)+,$0118		EndM	ELSE		IMPORT	LMSetTheZone	ENDIF	IF GENERATING68K THEN		Macro		LMGetUTableBase			move.L $011C,(sp)		EndM	ELSE		IMPORT	LMGetUTableBase	ENDIF	IF GENERATING68K THEN		Macro		LMSetUTableBase			move.L (sp)+,$011C		EndM	ELSE		IMPORT	LMSetUTableBase	ENDIF	IF GENERATING68K THEN		Macro		LMGetCPUFlag			move.B $012F,(sp)		EndM	ELSE		IMPORT	LMGetCPUFlag	ENDIF	IF GENERATING68K THEN		Macro		LMSetCPUFlag			move.B (sp)+,$012F		EndM	ELSE		IMPORT	LMSetCPUFlag	ENDIF	IF GENERATING68K THEN		Macro		LMGetApplLimit			move.L $0130,(sp)		EndM	ELSE		IMPORT	LMGetApplLimit	ENDIF	IF GENERATING68K THEN		Macro		LMSetApplLimit			move.L (sp)+,$0130		EndM	ELSE		IMPORT	LMSetApplLimit	ENDIF	IF GENERATING68K THEN		Macro		LMGetSysEvtMask			move.W $0144,(sp)		EndM	ELSE		IMPORT	LMGetSysEvtMask	ENDIF	IF GENERATING68K THEN		Macro		LMSetSysEvtMask			move.W (sp)+,$0144		EndM	ELSE		IMPORT	LMSetSysEvtMask	ENDIF	IF GENERATING68K THEN		Macro		LMGetRndSeed			move.L $0156,(sp)		EndM	ELSE		IMPORT	LMGetRndSeed	ENDIF	IF GENERATING68K THEN		Macro		LMSetRndSeed			move.L (sp)+,$0156		EndM	ELSE		IMPORT	LMSetRndSeed	ENDIF	IF GENERATING68K THEN		Macro		LMGetSEvtEnb			move.B $015C,(sp)		EndM	ELSE		IMPORT	LMGetSEvtEnb	ENDIF	IF GENERATING68K THEN		Macro		LMSetSEvtEnb			move.B (sp)+,$015C		EndM	ELSE		IMPORT	LMSetSEvtEnb	ENDIF	IF GENERATING68K THEN		Macro		LMGetTicks			move.L $016A,(sp)		EndM	ELSE		IMPORT	LMGetTicks	ENDIF	IF GENERATING68K THEN		Macro		LMSetTicks			move.L (sp)+,$016A		EndM	ELSE		IMPORT	LMSetTicks	ENDIF	IF GENERATING68K THEN		Macro		LMGetKeyThresh			move.W $018E,(sp)		EndM	ELSE		IMPORT	LMGetKeyThresh	ENDIF	IF GENERATING68K THEN		Macro		LMSetKeyThresh			move.W (sp)+,$018E		EndM	ELSE		IMPORT	LMSetKeyThresh	ENDIF	IF GENERATING68K THEN		Macro		LMGetKeyRepThresh			move.W $0190,(sp)		EndM	ELSE		IMPORT	LMGetKeyRepThresh	ENDIF	IF GENERATING68K THEN		Macro		LMSetKeyRepThresh			move.W (sp)+,$0190		EndM	ELSE		IMPORT	LMSetKeyRepThresh	ENDIF	IF GENERATING68K THEN		Macro		LMGetUnitTableEntryCount			move.W $01D2,(sp)		EndM	ELSE		IMPORT	LMGetUnitTableEntryCount	ENDIF	IF GENERATING68K THEN		Macro		LMSetUnitTableEntryCount			move.W (sp)+,$01D2		EndM	ELSE		IMPORT	LMSetUnitTableEntryCount	ENDIF	IF GENERATING68K THEN		Macro		LMGetVIA			move.L $01D4,(sp)		EndM	ELSE		IMPORT	LMGetVIA	ENDIF	IF GENERATING68K THEN		Macro		LMSetVIA			move.L (sp)+,$01D4		EndM	ELSE		IMPORT	LMSetVIA	ENDIF	IF GENERATING68K THEN		Macro		LMGetSCCRd			move.L $01D8,(sp)		EndM	ELSE		IMPORT	LMGetSCCRd	ENDIF	IF GENERATING68K THEN		Macro		LMSetSCCRd			move.L (sp)+,$01D8		EndM	ELSE		IMPORT	LMSetSCCRd	ENDIF	IF GENERATING68K THEN		Macro		LMGetSCCWr			move.L $01DC,(sp)		EndM	ELSE		IMPORT	LMGetSCCWr	ENDIF	IF GENERATING68K THEN		Macro		LMSetSCCWr			move.L (sp)+,$01DC		EndM	ELSE		IMPORT	LMSetSCCWr	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPValid			move.B $01F8,(sp)		EndM	ELSE		IMPORT	LMGetSPValid	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPValid			move.B (sp)+,$01F8		EndM	ELSE		IMPORT	LMSetSPValid	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPATalkA			move.B $01F9,(sp)		EndM	ELSE		IMPORT	LMGetSPATalkA	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPATalkA			move.B (sp)+,$01F9		EndM	ELSE		IMPORT	LMSetSPATalkA	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPATalkB			move.B $01FA,(sp)		EndM	ELSE		IMPORT	LMGetSPATalkB	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPATalkB			move.B (sp)+,$01FA		EndM	ELSE		IMPORT	LMSetSPATalkB	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPConfig			move.B $01FB,(sp)		EndM	ELSE		IMPORT	LMGetSPConfig	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPConfig			move.B (sp)+,$01FB		EndM	ELSE		IMPORT	LMSetSPConfig	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPPortA			move.W $01FC,(sp)		EndM	ELSE		IMPORT	LMGetSPPortA	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPPortA			move.W (sp)+,$01FC		EndM	ELSE		IMPORT	LMSetSPPortA	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPPortB			move.W $01FE,(sp)		EndM	ELSE		IMPORT	LMGetSPPortB	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPPortB			move.W (sp)+,$01FE		EndM	ELSE		IMPORT	LMSetSPPortB	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPAlarm			move.L $0200,(sp)		EndM	ELSE		IMPORT	LMGetSPAlarm	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPAlarm			move.L (sp)+,$0200		EndM	ELSE		IMPORT	LMSetSPAlarm	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPFont			move.W $0204,(sp)		EndM	ELSE		IMPORT	LMGetSPFont	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPFont			move.W (sp)+,$0204		EndM	ELSE		IMPORT	LMSetSPFont	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPKbd			move.B $0206,(sp)		EndM	ELSE		IMPORT	LMGetSPKbd	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPKbd			move.B (sp)+,$0206		EndM	ELSE		IMPORT	LMSetSPKbd	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPPrint			move.B $0207,(sp)		EndM	ELSE		IMPORT	LMGetSPPrint	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPPrint			move.B (sp)+,$0207		EndM	ELSE		IMPORT	LMSetSPPrint	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPVolCtl			move.B $0208,(sp)		EndM	ELSE		IMPORT	LMGetSPVolCtl	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPVolCtl			move.B (sp)+,$0208		EndM	ELSE		IMPORT	LMSetSPVolCtl	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPClikCaret			move.B $0209,(sp)		EndM	ELSE		IMPORT	LMGetSPClikCaret	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPClikCaret			move.B (sp)+,$0209		EndM	ELSE		IMPORT	LMSetSPClikCaret	ENDIF	IF GENERATING68K THEN		Macro		LMGetSPMisc2			move.B $020B,(sp)		EndM	ELSE		IMPORT	LMGetSPMisc2	ENDIF	IF GENERATING68K THEN		Macro		LMSetSPMisc2			move.B (sp)+,$020B		EndM	ELSE		IMPORT	LMSetSPMisc2	ENDIF	IF GENERATING68K THEN		Macro		LMGetTime			move.L $020C,(sp)		EndM	ELSE		IMPORT	LMGetTime	ENDIF	IF GENERATING68K THEN		Macro		LMSetTime			move.L (sp)+,$020C		EndM	ELSE		IMPORT	LMSetTime	ENDIF	IF GENERATING68K THEN		Macro		LMGetBootDrive			move.W $0210,(sp)		EndM	ELSE		IMPORT	LMGetBootDrive	ENDIF	IF GENERATING68K THEN		Macro		LMSetBootDrive			move.W (sp)+,$0210		EndM	ELSE		IMPORT	LMSetBootDrive	ENDIF	IF GENERATING68K THEN		Macro		LMGetSFSaveDisk			move.W $0214,(sp)		EndM	ELSE		IMPORT	LMGetSFSaveDisk	ENDIF	IF GENERATING68K THEN		Macro		LMSetSFSaveDisk			move.W (sp)+,$0214		EndM	ELSE		IMPORT	LMSetSFSaveDisk	ENDIF	IF GENERATING68K THEN		Macro		LMGetKbdLast			move.B $0218,(sp)		EndM	ELSE		IMPORT	LMGetKbdLast	ENDIF	IF GENERATING68K THEN		Macro		LMSetKbdLast			move.B (sp)+,$0218		EndM	ELSE		IMPORT	LMSetKbdLast	ENDIF	IF GENERATING68K THEN		Macro		LMGetKbdType			move.B $021E,(sp)		EndM	ELSE		IMPORT	LMGetKbdType	ENDIF	IF GENERATING68K THEN		Macro		LMSetKbdType			move.B (sp)+,$021E		EndM	ELSE		IMPORT	LMSetKbdType	ENDIF	IF GENERATING68K THEN		Macro		LMGetMemErr			move.W $0220,(sp)		EndM	ELSE		IMPORT	LMGetMemErr	ENDIF	IF GENERATING68K THEN		Macro		LMSetMemErr			move.W (sp)+,$0220		EndM	ELSE		IMPORT	LMSetMemErr	ENDIF	IF GENERATING68K THEN		Macro		LMGetSdVolume			move.B $0260,(sp)		EndM	ELSE		IMPORT	LMGetSdVolume	ENDIF	IF GENERATING68K THEN		Macro		LMSetSdVolume			move.B (sp)+,$0260		EndM	ELSE		IMPORT	LMSetSdVolume	ENDIF	IF GENERATING68K THEN		Macro		LMGetSoundPtr			move.L $0262,(sp)		EndM	ELSE		IMPORT	LMGetSoundPtr	ENDIF	IF GENERATING68K THEN		Macro		LMSetSoundPtr			move.L (sp)+,$0262		EndM	ELSE		IMPORT	LMSetSoundPtr	ENDIF	IF GENERATING68K THEN		Macro		LMGetSoundBase			move.L $0266,(sp)		EndM	ELSE		IMPORT	LMGetSoundBase	ENDIF	IF GENERATING68K THEN		Macro		LMSetSoundBase			move.L (sp)+,$0266		EndM	ELSE		IMPORT	LMSetSoundBase	ENDIF	IF GENERATING68K THEN		Macro		LMGetSoundLevel			move.B $027F,(sp)		EndM	ELSE		IMPORT	LMGetSoundLevel	ENDIF	IF GENERATING68K THEN		Macro		LMSetSoundLevel			move.B (sp)+,$027F		EndM	ELSE		IMPORT	LMSetSoundLevel	ENDIF	IF GENERATING68K THEN		Macro		LMGetCurPitch			move.W $0280,(sp)		EndM	ELSE		IMPORT	LMGetCurPitch	ENDIF	IF GENERATING68K THEN		Macro		LMSetCurPitch			move.W (sp)+,$0280		EndM	ELSE		IMPORT	LMSetCurPitch	ENDIF	IF GENERATING68K THEN		Macro		LMGetROM85			move.W $028E,(sp)		EndM	ELSE		IMPORT	LMGetROM85	ENDIF	IF GENERATING68K THEN		Macro		LMSetROM85			move.W (sp)+,$028E		EndM	ELSE		IMPORT	LMSetROM85	ENDIF	IF GENERATING68K THEN		Macro		LMGetPortBUse			move.B $0291,(sp)		EndM	ELSE		IMPORT	LMGetPortBUse	ENDIF	IF GENERATING68K THEN		Macro		LMSetPortBUse			move.B (sp)+,$0291		EndM	ELSE		IMPORT	LMSetPortBUse	ENDIF	IF GENERATING68K THEN		Macro		LMGetGNEFilter			move.L $029A,(sp)		EndM	ELSE		IMPORT	LMGetGNEFilter	ENDIF	IF GENERATING68K THEN		Macro		LMSetGNEFilter			move.L (sp)+,$029A		EndM	ELSE		IMPORT	LMSetGNEFilter	ENDIF	IF GENERATING68K THEN		Macro		LMGetSysZone			move.L $02A6,(sp)		EndM	ELSE		IMPORT	LMGetSysZone	ENDIF	IF GENERATING68K THEN		Macro		LMSetSysZone			move.L (sp)+,$02A6		EndM	ELSE		IMPORT	LMSetSysZone	ENDIF	IF GENERATING68K THEN		Macro		LMGetApplZone			move.L $02AA,(sp)		EndM	ELSE		IMPORT	LMGetApplZone	ENDIF	IF GENERATING68K THEN		Macro		LMSetApplZone			move.L (sp)+,$02AA		EndM	ELSE		IMPORT	LMSetApplZone	ENDIF	IF GENERATING68K THEN		Macro		LMGetROMBase			move.L $02AE,(sp)		EndM	ELSE		IMPORT	LMGetROMBase	ENDIF	IF GENERATING68K THEN		Macro		LMSetROMBase			move.L (sp)+,$02AE		EndM	ELSE		IMPORT	LMSetROMBase	ENDIF	IF GENERATING68K THEN		Macro		LMGetRAMBase			move.L $02B2,(sp)		EndM	ELSE		IMPORT	LMGetRAMBase	ENDIF	IF GENERATING68K THEN		Macro		LMSetRAMBase			move.L (sp)+,$02B2		EndM	ELSE		IMPORT	LMSetRAMBase	ENDIF	IF GENERATING68K THEN		Macro		LMGetDSAlertTab			move.L $02BA,(sp)		EndM	ELSE		IMPORT	LMGetDSAlertTab	ENDIF	IF GENERATING68K THEN		Macro		LMSetDSAlertTab			move.L (sp)+,$02BA		EndM	ELSE		IMPORT	LMSetDSAlertTab	ENDIF	IF GENERATING68K THEN		Macro		LMGetDoubleTime			move.L $02F0,(sp)		EndM	ELSE		IMPORT	LMGetDoubleTime	ENDIF	IF GENERATING68K THEN		Macro		LMSetDoubleTime			move.L (sp)+,$02F0		EndM	ELSE		IMPORT	LMSetDoubleTime	ENDIF	IF GENERATING68K THEN		Macro		LMGetCaretTime			move.L $02F4,(sp)		EndM	ELSE		IMPORT	LMGetCaretTime	ENDIF	IF GENERATING68K THEN		Macro		LMSetCaretTime			move.L (sp)+,$02F4		EndM	ELSE		IMPORT	LMSetCaretTime	ENDIF	IF GENERATING68K THEN		Macro		LMGetScrDmpEnb			move.B $02F8,(sp)		EndM	ELSE		IMPORT	LMGetScrDmpEnb	ENDIF	IF GENERATING68K THEN		Macro		LMSetScrDmpEnb			move.B (sp)+,$02F8		EndM	ELSE		IMPORT	LMSetScrDmpEnb	ENDIF	IF GENERATING68K THEN		Macro		LMGetBufTgFNum			move.L $02FC,(sp)		EndM	ELSE		IMPORT	LMGetBufTgFNum	ENDIF	IF GENERATING68K THEN		Macro		LMSetBufTgFNum			move.L (sp)+,$02FC		EndM	ELSE		IMPORT	LMSetBufTgFNum	ENDIF	IF GENERATING68K THEN		Macro		LMGetBufTgFFlg			move.W $0300,(sp)		EndM	ELSE		IMPORT	LMGetBufTgFFlg	ENDIF	IF GENERATING68K THEN		Macro		LMSetBufTgFFlg			move.W (sp)+,$0300		EndM	ELSE		IMPORT	LMSetBufTgFFlg	ENDIF	IF GENERATING68K THEN		Macro		LMGetBufTgFBkNum			move.W $0302,(sp)		EndM	ELSE		IMPORT	LMGetBufTgFBkNum	ENDIF	IF GENERATING68K THEN		Macro		LMSetBufTgFBkNum			move.W (sp)+,$0302		EndM	ELSE		IMPORT	LMSetBufTgFBkNum	ENDIF	IF GENERATING68K THEN		Macro		LMGetBufTgDate			move.L $0304,(sp)		EndM	ELSE		IMPORT	LMGetBufTgDate	ENDIF	IF GENERATING68K THEN		Macro		LMSetBufTgDate			move.L (sp)+,$0304		EndM	ELSE		IMPORT	LMSetBufTgDate	ENDIF	IF GENERATING68K THEN		Macro		LMGetLo3Bytes			move.L $031A,(sp)		EndM	ELSE		IMPORT	LMGetLo3Bytes	ENDIF	IF GENERATING68K THEN		Macro		LMSetLo3Bytes			move.L (sp)+,$031A		EndM	ELSE		IMPORT	LMSetLo3Bytes	ENDIF	IF GENERATING68K THEN		Macro		LMGetMinStack			move.L $031E,(sp)		EndM	ELSE		IMPORT	LMGetMinStack	ENDIF	IF GENERATING68K THEN		Macro		LMSetMinStack			move.L (sp)+,$031E		EndM	ELSE		IMPORT	LMSetMinStack	ENDIF	IF GENERATING68K THEN		Macro		LMGetDefltStack			move.L $0322,(sp)		EndM	ELSE		IMPORT	LMGetDefltStack	ENDIF	IF GENERATING68K THEN		Macro		LMSetDefltStack			move.L (sp)+,$0322		EndM	ELSE		IMPORT	LMSetDefltStack	ENDIF	IF GENERATING68K THEN		Macro		LMGetGZRootHnd			move.L $0328,(sp)		EndM	ELSE		IMPORT	LMGetGZRootHnd	ENDIF	IF GENERATING68K THEN		Macro		LMSetGZRootHnd			move.L (sp)+,$0328		EndM	ELSE		IMPORT	LMSetGZRootHnd	ENDIF	IF GENERATING68K THEN		Macro		LMGetGZMoveHnd			move.L $0330,(sp)		EndM	ELSE		IMPORT	LMGetGZMoveHnd	ENDIF	IF GENERATING68K THEN		Macro		LMSetGZMoveHnd			move.L (sp)+,$0330		EndM	ELSE		IMPORT	LMSetGZMoveHnd	ENDIF	IF GENERATING68K THEN		Macro		LMGetFCBSPtr			move.L $034E,(sp)		EndM	ELSE		IMPORT	LMGetFCBSPtr	ENDIF	IF GENERATING68K THEN		Macro		LMSetFCBSPtr			move.L (sp)+,$034E		EndM	ELSE		IMPORT	LMSetFCBSPtr	ENDIF	IF GENERATING68K THEN		Macro		LMGetDefVCBPtr			move.L $0352,(sp)		EndM	ELSE		IMPORT	LMGetDefVCBPtr	ENDIF	IF GENERATING68K THEN		Macro		LMSetDefVCBPtr			move.L (sp)+,$0352		EndM	ELSE		IMPORT	LMSetDefVCBPtr	ENDIF	IF GENERATING68K THEN		Macro		LMGetCurDirStore			move.L $0398,(sp)		EndM	ELSE		IMPORT	LMGetCurDirStore	ENDIF	IF GENERATING68K THEN		Macro		LMSetCurDirStore			move.L (sp)+,$0398		EndM	ELSE		IMPORT	LMSetCurDirStore	ENDIF	IF GENERATING68K THEN		Macro		LMGetToExtFS			move.L $03F2,(sp)		EndM	ELSE		IMPORT	LMGetToExtFS	ENDIF	IF GENERATING68K THEN		Macro		LMSetToExtFS			move.L (sp)+,$03F2		EndM	ELSE		IMPORT	LMSetToExtFS	ENDIF	IF GENERATING68K THEN		Macro		LMGetFSFCBLen			move.W $03F6,(sp)		EndM	ELSE		IMPORT	LMGetFSFCBLen	ENDIF	IF GENERATING68K THEN		Macro		LMSetFSFCBLen			move.W (sp)+,$03F6		EndM	ELSE		IMPORT	LMSetFSFCBLen	ENDIF	IF GENERATING68K THEN		Macro		LMGetScrnBase			move.L $0824,(sp)		EndM	ELSE		IMPORT	LMGetScrnBase	ENDIF	IF GENERATING68K THEN		Macro		LMSetScrnBase			move.L (sp)+,$0824		EndM	ELSE		IMPORT	LMSetScrnBase	ENDIF	IF GENERATING68K THEN		Macro		LMGetMainDevice			move.L $08A4,(sp)		EndM	ELSE		IMPORT	LMGetMainDevice	ENDIF	IF GENERATING68K THEN		Macro		LMSetMainDevice			move.L (sp)+,$08A4		EndM	ELSE		IMPORT	LMSetMainDevice	ENDIF	IF GENERATING68K THEN		Macro		LMGetDeviceList			move.L $08A8,(sp)		EndM	ELSE		IMPORT	LMGetDeviceList	ENDIF	IF GENERATING68K THEN		Macro		LMSetDeviceList			move.L (sp)+,$08A8		EndM	ELSE		IMPORT	LMSetDeviceList	ENDIF	IF GENERATING68K THEN		Macro		LMGetQDColors			move.L $08B0,(sp)		EndM	ELSE		IMPORT	LMGetQDColors	ENDIF	IF GENERATING68K THEN		Macro		LMSetQDColors			move.L (sp)+,$08B0		EndM	ELSE		IMPORT	LMSetQDColors	ENDIF	IF GENERATING68K THEN		Macro		LMGetCrsrBusy			move.B $08CD,(sp)		EndM	ELSE		IMPORT	LMGetCrsrBusy	ENDIF	IF GENERATING68K THEN		Macro		LMSetCrsrBusy			move.B (sp)+,$08CD		EndM	ELSE		IMPORT	LMSetCrsrBusy	ENDIF	IF GENERATING68K THEN		Macro		LMGetWidthListHand			move.L $08E4,(sp)		EndM	ELSE		IMPORT	LMGetWidthListHand	ENDIF	IF GENERATING68K THEN		Macro		LMSetWidthListHand			move.L (sp)+,$08E4		EndM	ELSE		IMPORT	LMSetWidthListHand	ENDIF	IF GENERATING68K THEN		Macro		LMGetJournalRef			move.W $08E8,(sp)		EndM	ELSE		IMPORT	LMGetJournalRef	ENDIF	IF GENERATING68K THEN		Macro		LMSetJournalRef			move.W (sp)+,$08E8		EndM	ELSE		IMPORT	LMSetJournalRef	ENDIF	IF GENERATING68K THEN		Macro		LMGetCrsrThresh			move.W $08EC,(sp)		EndM	ELSE		IMPORT	LMGetCrsrThresh	ENDIF	IF GENERATING68K THEN		Macro		LMSetCrsrThresh			move.W (sp)+,$08EC		EndM	ELSE		IMPORT	LMSetCrsrThresh	ENDIF	IF GENERATING68K THEN		Macro		LMGetJFetch			move.L $08F4,(sp)		EndM	ELSE		IMPORT	LMGetJFetch	ENDIF	IF GENERATING68K THEN		Macro		LMSetJFetch			move.L (sp)+,$08F4		EndM	ELSE		IMPORT	LMSetJFetch	ENDIF	IF GENERATING68K THEN		Macro		LMGetJStash			move.L $08F8,(sp)		EndM	ELSE		IMPORT	LMGetJStash	ENDIF	IF GENERATING68K THEN		Macro		LMSetJStash			move.L (sp)+,$08F8		EndM	ELSE		IMPORT	LMSetJStash	ENDIF	IF GENERATING68K THEN		Macro		LMGetJIODone			move.L $08FC,(sp)		EndM	ELSE		IMPORT	LMGetJIODone	ENDIF	IF GENERATING68K THEN		Macro		LMSetJIODone			move.L (sp)+,$08FC		EndM	ELSE		IMPORT	LMSetJIODone	ENDIF	IF GENERATING68K THEN		Macro		LMGetCurApRefNum			move.W $0900,(sp)		EndM	ELSE		IMPORT	LMGetCurApRefNum	ENDIF	IF GENERATING68K THEN		Macro		LMSetCurApRefNum			move.W (sp)+,$0900		EndM	ELSE		IMPORT	LMSetCurApRefNum	ENDIF	IF GENERATING68K THEN		Macro		LMGetCurrentA5			move.L $0904,(sp)		EndM	ELSE		IMPORT	LMGetCurrentA5	ENDIF	IF GENERATING68K THEN		Macro		LMSetCurrentA5			move.L (sp)+,$0904		EndM	ELSE		IMPORT	LMSetCurrentA5	ENDIF	IF GENERATING68K THEN		Macro		LMGetCurStackBase			move.L $0908,(sp)		EndM	ELSE		IMPORT	LMGetCurStackBase	ENDIF	IF GENERATING68K THEN		Macro		LMSetCurStackBase			move.L (sp)+,$0908		EndM	ELSE		IMPORT	LMSetCurStackBase	ENDIF	IF GENERATING68K THEN		Macro		LMGetCurJTOffset			move.W $0934,(sp)		EndM	ELSE		IMPORT	LMGetCurJTOffset	ENDIF	IF GENERATING68K THEN		Macro		LMSetCurJTOffset			move.W (sp)+,$0934		EndM	ELSE		IMPORT	LMSetCurJTOffset	ENDIF	IF GENERATING68K THEN		Macro		LMGetCurPageOption			move.W $0936,(sp)		EndM	ELSE		IMPORT	LMGetCurPageOption	ENDIF	IF GENERATING68K THEN		Macro		LMSetCurPageOption			move.W (sp)+,$0936		EndM	ELSE		IMPORT	LMSetCurPageOption	ENDIF	IF GENERATING68K THEN		Macro		LMGetHiliteMode			move.B $0938,(sp)		EndM	ELSE		IMPORT	LMGetHiliteMode	ENDIF	IF GENERATING68K THEN		Macro		LMSetHiliteMode			move.B (sp)+,$0938		EndM	ELSE		IMPORT	LMSetHiliteMode	ENDIF	IF GENERATING68K THEN		Macro		LMGetPrintErr			move.W $0944,(sp)		EndM	ELSE		IMPORT	LMGetPrintErr	ENDIF	IF GENERATING68K THEN		Macro		LMSetPrintErr			move.W (sp)+,$0944		EndM	ELSE		IMPORT	LMSetPrintErr	ENDIF	IF GENERATING68K THEN		Macro		LMGetScrapSize			move.L $0960,(sp)		EndM	ELSE		IMPORT	LMGetScrapSize	ENDIF	IF GENERATING68K THEN		Macro		LMSetScrapSize			move.L (sp)+,$0960		EndM	ELSE		IMPORT	LMSetScrapSize	ENDIF	IF GENERATING68K THEN		Macro		LMGetScrapHandle			move.L $0964,(sp)		EndM	ELSE		IMPORT	LMGetScrapHandle	ENDIF	IF GENERATING68K THEN		Macro		LMSetScrapHandle			move.L (sp)+,$0964		EndM	ELSE		IMPORT	LMSetScrapHandle	ENDIF	IF GENERATING68K THEN		Macro		LMGetScrapCount			move.W $0968,(sp)		EndM	ELSE		IMPORT	LMGetScrapCount	ENDIF	IF GENERATING68K THEN		Macro		LMSetScrapCount			move.W (sp)+,$0968		EndM	ELSE		IMPORT	LMSetScrapCount	ENDIF	IF GENERATING68K THEN		Macro		LMGetScrapState			move.W $096A,(sp)		EndM	ELSE		IMPORT	LMGetScrapState	ENDIF	IF GENERATING68K THEN		Macro		LMSetScrapState			move.W (sp)+,$096A		EndM	ELSE		IMPORT	LMSetScrapState	ENDIF	IF GENERATING68K THEN		Macro		LMGetScrapName			move.L $096C,(sp)		EndM	ELSE		IMPORT	LMGetScrapName	ENDIF	IF GENERATING68K THEN		Macro		LMSetScrapName			move.L (sp)+,$096C		EndM	ELSE		IMPORT	LMSetScrapName	ENDIF	IF GENERATING68K THEN		Macro		LMGetROMFont0			move.L $0980,(sp)		EndM	ELSE		IMPORT	LMGetROMFont0	ENDIF	IF GENERATING68K THEN		Macro		LMSetROMFont0			move.L (sp)+,$0980		EndM	ELSE		IMPORT	LMSetROMFont0	ENDIF	IF GENERATING68K THEN		Macro		LMGetApFontID			move.W $0984,(sp)		EndM	ELSE		IMPORT	LMGetApFontID	ENDIF	IF GENERATING68K THEN		Macro		LMSetApFontID			move.W (sp)+,$0984		EndM	ELSE		IMPORT	LMSetApFontID	ENDIF	IF GENERATING68K THEN		Macro		LMGetWindowList			move.L $09D6,(sp)		EndM	ELSE		IMPORT	LMGetWindowList	ENDIF	IF GENERATING68K THEN		Macro		LMGetSaveUpdate			move.W $09DA,(sp)		EndM	ELSE		IMPORT	LMGetSaveUpdate	ENDIF	IF GENERATING68K THEN		Macro		LMSetSaveUpdate			move.W (sp)+,$09DA		EndM	ELSE		IMPORT	LMSetSaveUpdate	ENDIF	IF GENERATING68K THEN		Macro		LMGetPaintWhite			move.W $09DC,(sp)		EndM	ELSE		IMPORT	LMGetPaintWhite	ENDIF	IF GENERATING68K THEN		Macro		LMSetPaintWhite			move.W (sp)+,$09DC		EndM	ELSE		IMPORT	LMSetPaintWhite	ENDIF	IF GENERATING68K THEN		Macro		LMGetWMgrPort			move.L $09DE,(sp)		EndM	ELSE		IMPORT	LMGetWMgrPort	ENDIF	IF GENERATING68K THEN		Macro		LMSetWMgrPort			move.L (sp)+,$09DE		EndM	ELSE		IMPORT	LMSetWMgrPort	ENDIF	IF GENERATING68K THEN		Macro		LMGetGrayRgn			move.L $09EE,(sp)		EndM	ELSE		IMPORT	LMGetGrayRgn	ENDIF	IF GENERATING68K THEN		Macro		LMGetDragHook			move.L $09F6,(sp)		EndM	ELSE		IMPORT	LMGetDragHook	ENDIF	IF GENERATING68K THEN		Macro		LMSetDragHook			move.L (sp)+,$09F6		EndM	ELSE		IMPORT	LMSetDragHook	ENDIF;; To best work with future versions of the window manager,; avoid using anything not defined with STRICT_WINDOWS; set to true.  Most, if not all of these will still; be supported in the next major version of the window manager; but will trigger non-optimal compatibility code paths that; should be avoided if possible.;	IF Â STRICT_WINDOWS  THEN;; There is no reason to set the window list directly.; Use BringToFront and SendBehind.;; If you need to do floating windows, avoid using GhostWindow ; and especially avoid patching the window manager.;; See Dean Yu's article in Develop 15 about how to implement floating; windows using low-level window manager calls.  The next generation; Macintosh Window Manager will have built-in support for floating; and modal windows.;	IF GENERATING68K THEN		Macro		LMSetWindowList			move.L (sp)+,$09D6		EndM	ELSE		IMPORT	LMSetWindowList	ENDIF	IF GENERATING68K THEN		Macro		LMGetGhostWindow			move.L $0A84,(sp)		EndM	ELSE		IMPORT	LMGetGhostWindow	ENDIF	IF GENERATING68K THEN		Macro		LMSetGhostWindow			move.L (sp)+,$0A84		EndM	ELSE		IMPORT	LMSetGhostWindow	ENDIF;; The auxiliary window record list will be empty in future; versions of the window manager.  There is no reason to ; walk it or change it. ;	IF GENERATING68K THEN		Macro		LMGetAuxWinHead			move.L $0CD0,(sp)		EndM	ELSE		IMPORT	LMGetAuxWinHead	ENDIF	IF GENERATING68K THEN		Macro		LMSetAuxWinHead			move.L (sp)+,$0CD0		EndM	ELSE		IMPORT	LMSetAuxWinHead	ENDIF;; Please rely on the event manager to deliver activate and ; deactivate events and on the window manager to generate them.;; The next generation window manager will queue these events; rather than just slamming these lowmems with the latest; generated event, so it pays to rely on the event manager.;	IF GENERATING68K THEN		Macro		LMGetCurActivate			move.L $0A64,(sp)		EndM	ELSE		IMPORT	LMGetCurActivate	ENDIF	IF GENERATING68K THEN		Macro		LMSetCurActivate			move.L (sp)+,$0A64		EndM	ELSE		IMPORT	LMSetCurActivate	ENDIF	IF GENERATING68K THEN		Macro		LMGetCurDeactive			move.L $0A68,(sp)		EndM	ELSE		IMPORT	LMGetCurDeactive	ENDIF	IF GENERATING68K THEN		Macro		LMSetCurDeactive			move.L (sp)+,$0A68		EndM	ELSE		IMPORT	LMSetCurDeactive	ENDIF	IF GENERATING68K THEN		Macro		LMGetOldStructure			move.L $09E6,(sp)		EndM	ELSE		IMPORT	LMGetOldStructure	ENDIF	IF GENERATING68K THEN		Macro		LMSetOldStructure			move.L (sp)+,$09E6		EndM	ELSE		IMPORT	LMSetOldStructure	ENDIF	IF GENERATING68K THEN		Macro		LMGetOldContent			move.L $09EA,(sp)		EndM	ELSE		IMPORT	LMGetOldContent	ENDIF	IF GENERATING68K THEN		Macro		LMSetOldContent			move.L (sp)+,$09EA		EndM	ELSE		IMPORT	LMSetOldContent	ENDIF;; Please don't mess with the gray region.  There has; to be a better way.  If not, please manipulate the; existing region, don't change the value of the lowmem.;	IF GENERATING68K THEN		Macro		LMSetGrayRgn			move.L (sp)+,$09EE		EndM	ELSE		IMPORT	LMSetGrayRgn	ENDIF	IF GENERATING68K THEN		Macro		LMGetSaveVisRgn			move.L $09F2,(sp)		EndM	ELSE		IMPORT	LMGetSaveVisRgn	ENDIF	IF GENERATING68K THEN		Macro		LMSetSaveVisRgn			move.L (sp)+,$09F2		EndM	ELSE		IMPORT	LMSetSaveVisRgn	ENDIF	ENDIF	IF GENERATING68K THEN		Macro		LMGetOneOne			move.L $0A02,(sp)		EndM	ELSE		IMPORT	LMGetOneOne	ENDIF	IF GENERATING68K THEN		Macro		LMSetOneOne			move.L (sp)+,$0A02		EndM	ELSE		IMPORT	LMSetOneOne	ENDIF	IF GENERATING68K THEN		Macro		LMGetMinusOne			move.L $0A06,(sp)		EndM	ELSE		IMPORT	LMGetMinusOne	ENDIF	IF GENERATING68K THEN		Macro		LMSetMinusOne			move.L (sp)+,$0A06		EndM	ELSE		IMPORT	LMSetMinusOne	ENDIF	IF GENERATING68K THEN		Macro		LMGetTopMenuItem			move.W $0A0A,(sp)		EndM	ELSE		IMPORT	LMGetTopMenuItem	ENDIF	IF GENERATING68K THEN		Macro		LMSetTopMenuItem			move.W (sp)+,$0A0A		EndM	ELSE		IMPORT	LMSetTopMenuItem	ENDIF	IF GENERATING68K THEN		Macro		LMGetAtMenuBottom			move.W $0A0C,(sp)		EndM	ELSE		IMPORT	LMGetAtMenuBottom	ENDIF	IF GENERATING68K THEN		Macro		LMSetAtMenuBottom			move.W (sp)+,$0A0C		EndM	ELSE		IMPORT	LMSetAtMenuBottom	ENDIF	IF GENERATING68K THEN		Macro		LMGetMenuList			move.L $0A1C,(sp)		EndM	ELSE		IMPORT	LMGetMenuList	ENDIF	IF GENERATING68K THEN		Macro		LMSetMenuList			move.L (sp)+,$0A1C		EndM	ELSE		IMPORT	LMSetMenuList	ENDIF	IF GENERATING68K THEN		Macro		LMGetMBarEnable			move.W $0A20,(sp)		EndM	ELSE		IMPORT	LMGetMBarEnable	ENDIF	IF GENERATING68K THEN		Macro		LMSetMBarEnable			move.W (sp)+,$0A20		EndM	ELSE		IMPORT	LMSetMBarEnable	ENDIF	IF GENERATING68K THEN		Macro		LMGetMenuFlash			move.W $0A24,(sp)		EndM	ELSE		IMPORT	LMGetMenuFlash	ENDIF	IF GENERATING68K THEN		Macro		LMSetMenuFlash			move.W (sp)+,$0A24		EndM	ELSE		IMPORT	LMSetMenuFlash	ENDIF	IF GENERATING68K THEN		Macro		LMGetTheMenu			move.W $0A26,(sp)		EndM	ELSE		IMPORT	LMGetTheMenu	ENDIF	IF GENERATING68K THEN		Macro		LMSetTheMenu			move.W (sp)+,$0A26		EndM	ELSE		IMPORT	LMSetTheMenu	ENDIF	IF GENERATING68K THEN		Macro		LMGetMBarHook			move.L $0A2C,(sp)		EndM	ELSE		IMPORT	LMGetMBarHook	ENDIF	IF GENERATING68K THEN		Macro		LMSetMBarHook			move.L (sp)+,$0A2C		EndM	ELSE		IMPORT	LMSetMBarHook	ENDIF	IF GENERATING68K THEN		Macro		LMGetMenuHook			move.L $0A30,(sp)		EndM	ELSE		IMPORT	LMGetMenuHook	ENDIF	IF GENERATING68K THEN		Macro		LMSetMenuHook			move.L (sp)+,$0A30		EndM	ELSE		IMPORT	LMSetMenuHook	ENDIF	IF GENERATING68K THEN		Macro		LMGetTopMapHndl			move.L $0A50,(sp)		EndM	ELSE		IMPORT	LMGetTopMapHndl	ENDIF	IF GENERATING68K THEN		Macro		LMSetTopMapHndl			move.L (sp)+,$0A50		EndM	ELSE		IMPORT	LMSetTopMapHndl	ENDIF	IF GENERATING68K THEN		Macro		LMGetSysMapHndl			move.L $0A54,(sp)		EndM	ELSE		IMPORT	LMGetSysMapHndl	ENDIF	IF GENERATING68K THEN		Macro		LMSetSysMapHndl			move.L (sp)+,$0A54		EndM	ELSE		IMPORT	LMSetSysMapHndl	ENDIF	IF GENERATING68K THEN		Macro		LMGetSysMap			move.W $0A58,(sp)		EndM	ELSE		IMPORT	LMGetSysMap	ENDIF	IF GENERATING68K THEN		Macro		LMSetSysMap			move.W (sp)+,$0A58		EndM	ELSE		IMPORT	LMSetSysMap	ENDIF	IF GENERATING68K THEN		Macro		LMGetCurMap			move.W $0A5A,(sp)		EndM	ELSE		IMPORT	LMGetCurMap	ENDIF	IF GENERATING68K THEN		Macro		LMSetCurMap			move.W (sp)+,$0A5A		EndM	ELSE		IMPORT	LMSetCurMap	ENDIF	IF GENERATING68K THEN		Macro		LMGetResLoad			move.B $0A5E,(sp)		EndM	ELSE		IMPORT	LMGetResLoad	ENDIF	IF GENERATING68K THEN		Macro		LMSetResLoad			move.B (sp)+,$0A5E		EndM	ELSE		IMPORT	LMSetResLoad	ENDIF	IF GENERATING68K THEN		Macro		LMGetResErr			move.W $0A60,(sp)		EndM	ELSE		IMPORT	LMGetResErr	ENDIF	IF GENERATING68K THEN		Macro		LMSetResErr			move.W (sp)+,$0A60		EndM	ELSE		IMPORT	LMSetResErr	ENDIF	IF GENERATING68K THEN		Macro		LMGetFScaleDisable			move.B $0A63,(sp)		EndM	ELSE		IMPORT	LMGetFScaleDisable	ENDIF	IF GENERATING68K THEN		Macro		LMSetFScaleDisable			move.B (sp)+,$0A63		EndM	ELSE		IMPORT	LMSetFScaleDisable	ENDIF	IF GENERATING68K THEN		Macro		LMGetDeskHook			move.L $0A6C,(sp)		EndM	ELSE		IMPORT	LMGetDeskHook	ENDIF	IF GENERATING68K THEN		Macro		LMSetDeskHook			move.L (sp)+,$0A6C		EndM	ELSE		IMPORT	LMSetDeskHook	ENDIF	IF GENERATING68K THEN		Macro		LMGetTEDoText			move.L $0A70,(sp)		EndM	ELSE		IMPORT	LMGetTEDoText	ENDIF	IF GENERATING68K THEN		Macro		LMSetTEDoText			move.L (sp)+,$0A70		EndM	ELSE		IMPORT	LMSetTEDoText	ENDIF	IF GENERATING68K THEN		Macro		LMGetTERecal			move.L $0A74,(sp)		EndM	ELSE		IMPORT	LMGetTERecal	ENDIF	IF GENERATING68K THEN		Macro		LMSetTERecal			move.L (sp)+,$0A74		EndM	ELSE		IMPORT	LMSetTERecal	ENDIF	IF GENERATING68K THEN		Macro		LMGetResumeProc			move.L $0A8C,(sp)		EndM	ELSE		IMPORT	LMGetResumeProc	ENDIF	IF GENERATING68K THEN		Macro		LMSetResumeProc			move.L (sp)+,$0A8C		EndM	ELSE		IMPORT	LMSetResumeProc	ENDIF	IF GENERATING68K THEN		Macro		LMGetANumber			move.W $0A98,(sp)		EndM	ELSE		IMPORT	LMGetANumber	ENDIF	IF GENERATING68K THEN		Macro		LMSetANumber			move.W (sp)+,$0A98		EndM	ELSE		IMPORT	LMSetANumber	ENDIF	IF GENERATING68K THEN		Macro		LMGetACount			move.W $0A9A,(sp)		EndM	ELSE		IMPORT	LMGetACount	ENDIF	IF GENERATING68K THEN		Macro		LMSetACount			move.W (sp)+,$0A9A		EndM	ELSE		IMPORT	LMSetACount	ENDIF	IF GENERATING68K THEN		Macro		LMGetDABeeper			move.L $0A9C,(sp)		EndM	ELSE		IMPORT	LMGetDABeeper	ENDIF	IF GENERATING68K THEN		Macro		LMSetDABeeper			move.L (sp)+,$0A9C		EndM	ELSE		IMPORT	LMSetDABeeper	ENDIF	IF GENERATING68K THEN		Macro		LMGetTEScrpLength			move.W $0AB0,(sp)		EndM	ELSE		IMPORT	LMGetTEScrpLength	ENDIF	IF GENERATING68K THEN		Macro		LMSetTEScrpLength			move.W (sp)+,$0AB0		EndM	ELSE		IMPORT	LMSetTEScrpLength	ENDIF	IF GENERATING68K THEN		Macro		LMGetTEScrpHandle			move.L $0AB4,(sp)		EndM	ELSE		IMPORT	LMGetTEScrpHandle	ENDIF	IF GENERATING68K THEN		Macro		LMSetTEScrpHandle			move.L (sp)+,$0AB4		EndM	ELSE		IMPORT	LMSetTEScrpHandle	ENDIF	IF GENERATING68K THEN		Macro		LMGetAppParmHandle			move.L $0AEC,(sp)		EndM	ELSE		IMPORT	LMGetAppParmHandle	ENDIF	IF GENERATING68K THEN		Macro		LMSetAppParmHandle			move.L (sp)+,$0AEC		EndM	ELSE		IMPORT	LMSetAppParmHandle	ENDIF	IF GENERATING68K THEN		Macro		LMGetDSErrCode			move.W $0AF0,(sp)		EndM	ELSE		IMPORT	LMGetDSErrCode	ENDIF	IF GENERATING68K THEN		Macro		LMSetDSErrCode			move.W (sp)+,$0AF0		EndM	ELSE		IMPORT	LMSetDSErrCode	ENDIF	IF GENERATING68K THEN		Macro		LMGetResErrProc			move.L $0AF2,(sp)		EndM	ELSE		IMPORT	LMGetResErrProc	ENDIF	IF GENERATING68K THEN		Macro		LMSetResErrProc			move.L (sp)+,$0AF2		EndM	ELSE		IMPORT	LMSetResErrProc	ENDIF	IF GENERATING68K THEN		Macro		LMGetDlgFont			move.W $0AFA,(sp)		EndM	ELSE		IMPORT	LMGetDlgFont	ENDIF	IF GENERATING68K THEN		Macro		LMSetDlgFont			move.W (sp)+,$0AFA		EndM	ELSE		IMPORT	LMSetDlgFont	ENDIF	IF GENERATING68K THEN		Macro		LMGetROMMapHandle			move.L $0B06,(sp)		EndM	ELSE		IMPORT	LMGetROMMapHandle	ENDIF	IF GENERATING68K THEN		Macro		LMSetROMMapHandle			move.L (sp)+,$0B06		EndM	ELSE		IMPORT	LMSetROMMapHandle	ENDIF	IF GENERATING68K THEN		Macro		LMGetWidthPtr			move.L $0B10,(sp)		EndM	ELSE		IMPORT	LMGetWidthPtr	ENDIF	IF GENERATING68K THEN		Macro		LMSetWidthPtr			move.L (sp)+,$0B10		EndM	ELSE		IMPORT	LMSetWidthPtr	ENDIF	IF GENERATING68K THEN		Macro		LMGetATalkHk2			move.L $0B18,(sp)		EndM	ELSE		IMPORT	LMGetATalkHk2	ENDIF	IF GENERATING68K THEN		Macro		LMSetATalkHk2			move.L (sp)+,$0B18		EndM	ELSE		IMPORT	LMSetATalkHk2	ENDIF	IF GENERATING68K THEN		Macro		LMGetHWCfgFlags			move.W $0B22,(sp)		EndM	ELSE		IMPORT	LMGetHWCfgFlags	ENDIF	IF GENERATING68K THEN		Macro		LMSetHWCfgFlags			move.W (sp)+,$0B22		EndM	ELSE		IMPORT	LMSetHWCfgFlags	ENDIF	IF GENERATING68K THEN		Macro		LMGetWidthTabHandle			move.L $0B2A,(sp)		EndM	ELSE		IMPORT	LMGetWidthTabHandle	ENDIF	IF GENERATING68K THEN		Macro		LMSetWidthTabHandle			move.L (sp)+,$0B2A		EndM	ELSE		IMPORT	LMSetWidthTabHandle	ENDIF	IF GENERATING68K THEN		Macro		LMGetLastSPExtra			move.L $0B4C,(sp)		EndM	ELSE		IMPORT	LMGetLastSPExtra	ENDIF	IF GENERATING68K THEN		Macro		LMSetLastSPExtra			move.L (sp)+,$0B4C		EndM	ELSE		IMPORT	LMSetLastSPExtra	ENDIF	IF GENERATING68K THEN		Macro		LMGetMenuDisable			move.L $0B54,(sp)		EndM	ELSE		IMPORT	LMGetMenuDisable	ENDIF	IF GENERATING68K THEN		Macro		LMSetMenuDisable			move.L (sp)+,$0B54		EndM	ELSE		IMPORT	LMSetMenuDisable	ENDIF	IF GENERATING68K THEN		Macro		LMGetROMMapInsert			move.B $0B9E,(sp)		EndM	ELSE		IMPORT	LMGetROMMapInsert	ENDIF	IF GENERATING68K THEN		Macro		LMSetROMMapInsert			move.B (sp)+,$0B9E		EndM	ELSE		IMPORT	LMSetROMMapInsert	ENDIF	IF GENERATING68K THEN		Macro		LMGetTmpResLoad			move.B $0B9F,(sp)		EndM	ELSE		IMPORT	LMGetTmpResLoad	ENDIF	IF GENERATING68K THEN		Macro		LMSetTmpResLoad			move.B (sp)+,$0B9F		EndM	ELSE		IMPORT	LMSetTmpResLoad	ENDIF	IF GENERATING68K THEN		Macro		LMGetIntlSpec			move.L $0BA0,(sp)		EndM	ELSE		IMPORT	LMGetIntlSpec	ENDIF	IF GENERATING68K THEN		Macro		LMSetIntlSpec			move.L (sp)+,$0BA0		EndM	ELSE		IMPORT	LMSetIntlSpec	ENDIF	IF GENERATING68K THEN		Macro		LMGetWordRedraw			move.B $0BA5,(sp)		EndM	ELSE		IMPORT	LMGetWordRedraw	ENDIF	IF GENERATING68K THEN		Macro		LMSetWordRedraw			move.B (sp)+,$0BA5		EndM	ELSE		IMPORT	LMSetWordRedraw	ENDIF	IF GENERATING68K THEN		Macro		LMGetSysFontFam			move.W $0BA6,(sp)		EndM	ELSE		IMPORT	LMGetSysFontFam	ENDIF	IF GENERATING68K THEN		Macro		LMSetSysFontFam			move.W (sp)+,$0BA6		EndM	ELSE		IMPORT	LMSetSysFontFam	ENDIF	IF GENERATING68K THEN		Macro		LMGetSysFontSize			move.W $0BA8,(sp)		EndM	ELSE		IMPORT	LMGetSysFontSize	ENDIF	IF GENERATING68K THEN		Macro		LMSetSysFontSize			move.W (sp)+,$0BA8		EndM	ELSE		IMPORT	LMSetSysFontSize	ENDIF	IF GENERATING68K THEN		Macro		LMGetMBarHeight			move.W $0BAA,(sp)		EndM	ELSE		IMPORT	LMGetMBarHeight	ENDIF	IF GENERATING68K THEN		Macro		LMSetMBarHeight			move.W (sp)+,$0BAA		EndM	ELSE		IMPORT	LMSetMBarHeight	ENDIF	IF GENERATING68K THEN		Macro		LMGetTESysJust			move.W $0BAC,(sp)		EndM	ELSE		IMPORT	LMGetTESysJust	ENDIF	IF GENERATING68K THEN		Macro		LMSetTESysJust			move.W (sp)+,$0BAC		EndM	ELSE		IMPORT	LMSetTESysJust	ENDIF	IF GENERATING68K THEN		Macro		LMGetHighHeapMark			move.L $0BAE,(sp)		EndM	ELSE		IMPORT	LMGetHighHeapMark	ENDIF	IF GENERATING68K THEN		Macro		LMSetHighHeapMark			move.L (sp)+,$0BAE		EndM	ELSE		IMPORT	LMSetHighHeapMark	ENDIF	IF GENERATING68K THEN		Macro		LMGetLastFOND			move.L $0BC2,(sp)		EndM	ELSE		IMPORT	LMGetLastFOND	ENDIF	IF GENERATING68K THEN		Macro		LMSetLastFOND			move.L (sp)+,$0BC2		EndM	ELSE		IMPORT	LMSetLastFOND	ENDIF	IF GENERATING68K THEN		Macro		LMGetFractEnable			move.B $0BF4,(sp)		EndM	ELSE		IMPORT	LMGetFractEnable	ENDIF	IF GENERATING68K THEN		Macro		LMSetFractEnable			move.B (sp)+,$0BF4		EndM	ELSE		IMPORT	LMSetFractEnable	ENDIF	IF GENERATING68K THEN		Macro		LMGetMMU32Bit			move.B $0CB2,(sp)		EndM	ELSE		IMPORT	LMGetMMU32Bit	ENDIF	IF GENERATING68K THEN		Macro		LMSetMMU32Bit			move.B (sp)+,$0CB2		EndM	ELSE		IMPORT	LMSetMMU32Bit	ENDIF	IF GENERATING68K THEN		Macro		LMGetTheGDevice			move.L $0CC8,(sp)		EndM	ELSE		IMPORT	LMGetTheGDevice	ENDIF	IF GENERATING68K THEN		Macro		LMSetTheGDevice			move.L (sp)+,$0CC8		EndM	ELSE		IMPORT	LMSetTheGDevice	ENDIF	IF GENERATING68K THEN		Macro		LMGetDeskCPat			move.L $0CD8,(sp)		EndM	ELSE		IMPORT	LMGetDeskCPat	ENDIF	IF GENERATING68K THEN		Macro		LMSetDeskCPat			move.L (sp)+,$0CD8		EndM	ELSE		IMPORT	LMSetDeskCPat	ENDIF	IF GENERATING68K THEN		Macro		LMGetTimeDBRA			move.W $0D00,(sp)		EndM	ELSE		IMPORT	LMGetTimeDBRA	ENDIF	IF GENERATING68K THEN		Macro		LMSetTimeDBRA			move.W (sp)+,$0D00		EndM	ELSE		IMPORT	LMSetTimeDBRA	ENDIF	IF GENERATING68K THEN		Macro		LMGetTimeSCCDB			move.W $0D02,(sp)		EndM	ELSE		IMPORT	LMGetTimeSCCDB	ENDIF	IF GENERATING68K THEN		Macro		LMSetTimeSCCDB			move.W (sp)+,$0D02		EndM	ELSE		IMPORT	LMSetTimeSCCDB	ENDIF	IF GENERATING68K THEN		Macro		LMGetJVBLTask			move.L $0D28,(sp)		EndM	ELSE		IMPORT	LMGetJVBLTask	ENDIF	IF GENERATING68K THEN		Macro		LMSetJVBLTask			move.L (sp)+,$0D28		EndM	ELSE		IMPORT	LMSetJVBLTask	ENDIF	IF GENERATING68K THEN		Macro		LMGetSynListHandle			move.L $0D32,(sp)		EndM	ELSE		IMPORT	LMGetSynListHandle	ENDIF	IF GENERATING68K THEN		Macro		LMSetSynListHandle			move.L (sp)+,$0D32		EndM	ELSE		IMPORT	LMSetSynListHandle	ENDIF	IF GENERATING68K THEN		Macro		LMGetMenuCInfo			move.L $0D50,(sp)		EndM	ELSE		IMPORT	LMGetMenuCInfo	ENDIF	IF GENERATING68K THEN		Macro		LMSetMenuCInfo			move.L (sp)+,$0D50		EndM	ELSE		IMPORT	LMSetMenuCInfo	ENDIF	IF GENERATING68K THEN		Macro		LMGetDTQueue			move.L $0D92,(sp)		EndM	ELSE		IMPORT	LMGetDTQueue	ENDIF	IF GENERATING68K THEN		Macro		LMSetDTQueue			move.L (sp)+,$0D92		EndM	ELSE		IMPORT	LMSetDTQueue	ENDIF	IF GENERATING68K THEN		Macro		LMGetJDTInstall			move.L $0D9C,(sp)		EndM	ELSE		IMPORT	LMGetJDTInstall	ENDIF	IF GENERATING68K THEN		Macro		LMSetJDTInstall			move.L (sp)+,$0D9C		EndM	ELSE		IMPORT	LMSetJDTInstall	ENDIF	IF GENERATING68K THEN		Macro		LMGetTimeSCSIDB			move.W $0B24,(sp)		EndM	ELSE		IMPORT	LMGetTimeSCSIDB	ENDIF	IF GENERATING68K THEN		Macro		LMSetTimeSCSIDB			move.W (sp)+,$0B24		EndM	ELSE		IMPORT	LMSetTimeSCSIDB	ENDIF	IF GENERATING68K THEN		Macro		LMGetFSQHdr			move.L $0360,(sp)		EndM	ELSE		IMPORT	LMGetFSQHdr	ENDIF;*************************************************************************************;;	MORE COMPLEX LOWMEM ACCESSORS;;*************************************************************************************	IF CFMSYSTEMCALLS  THEN;*************************************************************************************;	"BLOCKMOVE ACCESSORS";	;		These lowmem accessors use the BlockMove trap;*************************************************************************************;*************************************************************************************;	"INDEXED ACCESSORS";	;		These lowmem accessors take an index parameter to get/set an indexed;		lowmem global.;*************************************************************************************	ENDIF	ENDIF ; __LOWMEM__