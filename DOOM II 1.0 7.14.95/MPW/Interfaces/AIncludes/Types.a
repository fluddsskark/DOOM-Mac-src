;;	File:		Types.a;;	Copyright:	© 1984-1994 by Apple Computer, Inc.;				All rights reserved.;;	Version:	Universal Interfaces 2.0a3  ETO #16, MPW prerelease.  Friday, November 11, 1994. ;;	Bugs?:		If you find a problem with this file, send the file and version;				information (from above) and the problem description to:;;					Internet:	apple.bugs@applelink.apple.com;					AppleLink:	APPLE.BUGS;;	IF &TYPE('__TYPES__') = 'UNDEFINED' THEN__TYPES__ SET 1	IF &TYPE('__CONDITIONALMACROS__') = 'UNDEFINED' THEN	include 'ConditionalMacros.a'	ENDIFnoErr							EQU		0;  pointer to a master pointer _extended80 			RECORD	0exp						 ds.w	1man						 ds.w	4sizeof					 EQU	10						ENDR_extended96 			RECORD	0exp						 ds.w	2man						 ds.w	4sizeof					 EQU	12						ENDR	IF GENERATING68K  THEN	ENDIF;;Note: float_t and double_t are "natural" computational types;      (i.e.the compiler/processor can most easily do floating point;	  operations with that type.) ;	IF GENERATINGPOWERPC  THEN; on PowerPC, double = 64-bit which is fastest.  float = 32-bit 	ELSE; on 68K, long double (a.k.a. extended) is always the fastest.  It is 80 or 96-bits 	ENDIFwide 					RECORD	0hi						 ds.l	1lo						 ds.l	1sizeof					 EQU	8						ENDRUnsignedWide 			RECORD	0hi						 ds.l	1lo						 ds.l	1sizeof					 EQU	8						ENDRfalse							EQU		0true							EQU		1v								EQU		0h								EQU		1normal							EQU		0bold							EQU		1italic							EQU		2underline						EQU		4outline							EQU		8shadow							EQU		$10condense						EQU		$20extend							EQU		$40Point 					RECORD	0v						 ds.w	1h						 ds.w	1sizeof					 EQU	4						ENDRRect 					RECORD	0top						 ds.w	1left					 ds.w	1bottom					 ds.w	1right					 ds.w	1sizeof					 EQU	8						ENDR; Numeric version part of 'vers' resource NumVersion 				RECORD	0majorRev				 ds.b	1									;1st part of version number in BCDminorAndBugRev			 ds.b	1									;2nd & 3rd part of version number share a bytestage					 ds.b	1									;stage code: dev, alpha, beta, finalnonRelRev				 ds.b	1									;revision level of non-released versionsizeof					 EQU	4						ENDR; 'vers' resource format VersRec 				RECORD	0numericVersion			 ds		NumVersion							;encoded version numbercountryCode				 ds.w	1									;country code from intl utilitiesshortVersion			 ds.l	64								;version number string - worst casereserved				 ds.l	64								;longMessage string packed after shortVersionsizeof					 EQU	518						ENDR	IF GENERATING68K THEN		_Debugger:	OPWORD	$A9FF	ELSE		IMPORT	Debugger	ENDIF	IF GENERATING68K THEN		_DebugStr:	OPWORD	$ABFF	ELSE		IMPORT	DebugStr	ENDIF	IF GENERATING68K THEN		_Debugger68k:	OPWORD	$A9FF	ELSE		IMPORT	Debugger68k	ENDIF	IF GENERATING68K THEN		_DebugStr68k:	OPWORD	$ABFF	ELSE		IMPORT	DebugStr68k	ENDIF	IF GENERATING68K THEN		Macro		_SysBreak			move.w	#$FE16,d0			dc.w 	$A9C9		EndM	ELSE		IMPORT	SysBreak	ENDIF	IF GENERATING68K THEN		Macro		_SysBreakStr			move.w	#$FE15,d0			dc.w 	$A9C9		EndM	ELSE		IMPORT	SysBreakStr	ENDIF	IF GENERATING68K THEN		Macro		_SysBreakFunc			move.w	#$FE14,d0			dc.w 	$A9C9		EndM	ELSE		IMPORT	SysBreakFunc	ENDIF	ENDIF ; __TYPES__