;;	File:		DatabaseAccess.a;;	Copyright:	© 1984-1994 by Apple Computer, Inc.;				All rights reserved.;;	Version:	Universal Interfaces 2.0a3  ETO #16, MPW prerelease.  Friday, November 11, 1994. ;;	Bugs?:		If you find a problem with this file, send the file and version;				information (from above) and the problem description to:;;					Internet:	apple.bugs@applelink.apple.com;					AppleLink:	APPLE.BUGS;;	IF &TYPE('__DATABASEACCESS__') = 'UNDEFINED' THEN__DATABASEACCESS__ SET 1	IF &TYPE('__RESOURCES__') = 'UNDEFINED' THEN	include 'Resources.a'	ENDIF;		include 'Types.a'											;;			include 'ConditionalMacros.a'							;;		include 'MixedMode.a'										;;		include 'Files.a'											;;			include 'OSUtils.a'									;;				include 'Memory.a'									;typeNone						EQU		'none'typeDate						EQU		'date'typeTime						EQU		'time'typeTimeStamp					EQU		'tims'typeDecimal						EQU		'deci'typeMoney						EQU		'mone'typeVChar						EQU		'vcha'typeVBin						EQU		'vbin'typeLChar						EQU		'lcha'typeLBin						EQU		'lbin'typeDiscard						EQU		'disc'; "dummy" types for DBResultsToText typeUnknown						EQU		'unkn'typeColBreak					EQU		'colb'typeRowBreak					EQU		'rowb'; pass this in to DBGetItem for any data type typeAnyType						EQU		0; infinite timeout value for DBGetItem ; messages for status functions for DBStartQuery kDBUpdateWind					EQU		0kDBAboutToInit					EQU		1kDBInitComplete					EQU		2kDBSendComplete					EQU		3kDBExecComplete					EQU		4kDBStartQueryComplete			EQU		5; messages for status functions for DBGetQueryResults kDBGetItemComplete				EQU		6kDBGetQueryResultsComplete		EQU		7kDBWaitForever					EQU		-1;  flags for DBGetItem  kDBLastColFlag					EQU		$0001kDBNullFlag						EQU		$0004DBAsyncParamBlockRec 	RECORD	0completionProc			 ds.l	1									; pointer to completion routine result					 ds.w	1									; result of call userRef					 ds.l	1									; for application's use ddevRef					 ds.l	1									; for ddev's use reserved				 ds.l	1									; for internal use sizeof					 EQU	18						ENDRResListElem 			RECORD	0theType					 ds.l	1									; resource type id						 ds.w	1									; resource id sizeof					 EQU	6						ENDR; structure for query list in QueryRecord QueryRecord 			RECORD	0version					 ds.w	1									; version id						 ds.w	1									; id of 'qrsc' this came from queryProc				 ds.l	1									; handle to query def proc ddevName				 ds.l	16								; ddev name host					 ds.l	64								; host name user					 ds.l	64								; user name password				 ds.l	64								; password connStr					 ds.l	64								; connection string currQuery				 ds.w	1									; index of current query numQueries				 ds.w	1									; number of queries in list queryList				 ds.l	1									; handle to array of handles to text numRes					 ds.w	1									; number of resources in list resList					 ds.l	1									; handle to array of resource list elements dataHandle				 ds.l	1									; for use by query def proc refCon					 ds.l	1									; for use by application sizeof					 EQU	1118						ENDR; structure of column types array in ResultsRecord DBColInfoRecord 		RECORD	0len						 ds.w	1places					 ds.w	1flags					 ds.w	1sizeof					 EQU	6						ENDRResultsRecord 			RECORD	0numRows					 ds.w	1									; number of rows in result numCols					 ds.w	1									; number of columns per row colTypes				 ds.l	1									; data type array colData					 ds.l	1									; actual results colInfo					 ds.l	1									; DBColInfoRecord array sizeof					 EQU	16						ENDR	IF GENERATING68K THEN		Macro		_InitDBPack			move.w	#$0004,-(sp)			move.w	#$0100,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	InitDBPack	ENDIF	IF GENERATING68K THEN		Macro		_DBInit			move.w	#$0E02,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBInit	ENDIF	IF GENERATING68K THEN		Macro		_DBEnd			move.w	#$0403,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBEnd	ENDIF	IF GENERATING68K THEN		Macro		_DBGetConnInfo			move.w	#$1704,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBGetConnInfo	ENDIF	IF GENERATING68K THEN		Macro		_DBGetSessionNum			move.w	#$0605,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBGetSessionNum	ENDIF	IF GENERATING68K THEN		Macro		_DBSend			move.w	#$0706,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBSend	ENDIF	IF GENERATING68K THEN		Macro		_DBSendItem			move.w	#$0B07,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBSendItem	ENDIF	IF GENERATING68K THEN		Macro		_DBExec			move.w	#$0408,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBExec	ENDIF	IF GENERATING68K THEN		Macro		_DBState			move.w	#$0409,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBState	ENDIF	IF GENERATING68K THEN		Macro		_DBGetErr			move.w	#$0E0A,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBGetErr	ENDIF	IF GENERATING68K THEN		Macro		_DBBreak			move.w	#$050B,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBBreak	ENDIF	IF GENERATING68K THEN		Macro		_DBGetItem			move.w	#$100C,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBGetItem	ENDIF	IF GENERATING68K THEN		Macro		_DBUnGetItem			move.w	#$040D,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBUnGetItem	ENDIF	IF GENERATING68K THEN		Macro		_DBKill			move.w	#$020E,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBKill	ENDIF	IF GENERATING68K THEN		Macro		_DBGetNewQuery			move.w	#$030F,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBGetNewQuery	ENDIF	IF GENERATING68K THEN		Macro		_DBDisposeQuery			move.w	#$0210,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBDisposeQuery	ENDIF	IF GENERATING68K THEN		Macro		_DBStartQuery			move.w	#$0811,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBStartQuery	ENDIF	IF GENERATING68K THEN		Macro		_DBGetQueryResults			move.w	#$0A12,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBGetQueryResults	ENDIF	IF GENERATING68K THEN		Macro		_DBResultsToText			move.w	#$0413,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBResultsToText	ENDIF	IF GENERATING68K THEN		Macro		_DBInstallResultHandler			move.w	#$0514,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBInstallResultHandler	ENDIF	IF GENERATING68K THEN		Macro		_DBRemoveResultHandler			move.w	#$0215,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBRemoveResultHandler	ENDIF	IF GENERATING68K THEN		Macro		_DBGetResultHandler			move.w	#$0516,d0			dc.w 	$A82F		EndM	ELSE		IMPORT	DBGetResultHandler	ENDIF	ENDIF ; __DATABASEACCESS__