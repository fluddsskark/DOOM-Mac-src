;;	File:		MoviesFormat.a;;	Copyright:	© 1984-1994 by Apple Computer, Inc.;				All rights reserved.;;	Version:	Universal Interfaces 2.0a3  ETO #16, MPW prerelease.  Friday, November 11, 1994. ;;	Bugs?:		If you find a problem with this file, send the file and version;				information (from above) and the problem description to:;;					Internet:	apple.bugs@applelink.apple.com;					AppleLink:	APPLE.BUGS;;	IF &TYPE('__MOVIESFORMAT__') = 'UNDEFINED' THEN__MOVIESFORMAT__ SET 1	IF &TYPE('__TYPES__') = 'UNDEFINED' THEN	include 'Types.a'	ENDIF;		include 'ConditionalMacros.a'								;	IF &TYPE('__WINDOWS__') = 'UNDEFINED' THEN	include 'Windows.a'	ENDIF;		include 'Memory.a'											;;			include 'MixedMode.a'									;;		include 'Quickdraw.a'										;;			include 'QuickdrawText.a'								;;		include 'Events.a'											;;			include 'OSUtils.a'									;;		include 'Controls.a'										;;			include 'Menus.a'										;	IF &TYPE('__IMAGECOMPRESSION__') = 'UNDEFINED' THEN	include 'ImageCompression.a'	ENDIF;		include 'QDOffscreen.a'									;;			include 'Errors.a'										;;		include 'Components.a'										;;		include 'StandardFile.a'									;;			include 'Dialogs.a'									;;				include 'TextEdit.a'								;;			include 'Files.a'										;	IF &TYPE('__MOVIES__') = 'UNDEFINED' THEN	include 'Movies.a'	ENDIF;		include 'Aliases.a'										;;			include 'AppleTalk.a'									;kMovieVersion					EQU		0					; version number of the format here described MoviesUserData 			RECORD	0size					 ds.l	1									; size of this user data udType					 ds.l	1									; type of user data data					 ds.b	1									; the user data sizeof					 EQU	10						ENDRUserDataAtom 			RECORD	0size					 ds.l	1atomType				 ds.l	1userData				 ds		MoviesUserDatasizeof					 EQU	18						ENDR; MoviesDataDescription tells us where the data for the movie or track lives.;   The data can follow the directory, be in the datafork of the same file as the directory resource,;   be in the resource fork of the same file as the directory resource, be in another file in the;   data fork or resource fork, or require a specific bottleneck to fetch the data. ;***************************************;*;*   MediaDirectory information -;*		The MediaDirectory is tightly coupled to the data.;*;***************************************SampleDescriptionAtom 	RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'stsd' flags					 ds.l	1									; 1 byte of version / 3 bytes of flags numEntries				 ds.l	1sampleDescTable			 ds		SampleDescriptionsizeof					 EQU	32						ENDR; TimeToSampleNum maps physical sample time to physical sample number. TimeToSampleNum 		RECORD	0sampleCount				 ds.l	1sampleDuration			 ds.l	1sizeof					 EQU	8						ENDRTimeToSampleNumAtom 	RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'stts' flags					 ds.l	1									; 1 byte of version / 3 bytes of flags numEntries				 ds.l	1timeToSampleNumTable	 ds		TimeToSampleNumsizeof					 EQU	24						ENDR; SyncSamples is a list of the physical samples which are self contained. SyncSampleAtom 			RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'stss' flags					 ds.l	1									; 1 byte of version / 3 bytes of flags numEntries				 ds.l	1syncSampleTable			 ds.l	1sizeof					 EQU	20						ENDR; SampleToChunk maps physical sample number to chunk number. ; same as SampleToChunk, but redundant first sample is removed SampleToChunk 			RECORD	0firstChunk				 ds.l	1samplesPerChunk			 ds.l	1sampleDescriptionID		 ds.l	1sizeof					 EQU	12						ENDRSampleToChunkAtom 		RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'stsc' flags					 ds.l	1									; 1 byte of version / 3 bytes of flags numEntries				 ds.l	1sampleToChunkTable		 ds		SampleToChunksizeof					 EQU	28						ENDRChunkOffsetAtom 		RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'stco' flags					 ds.l	1									; 1 byte of version / 3 bytes of flags numEntries				 ds.l	1chunkOffsetTable		 ds.l	1sizeof					 EQU	20						ENDRSampleSizeAtom 			RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'stsz' flags					 ds.l	1									; 1 byte of version / 3 bytes of flags sampleSize				 ds.l	1numEntries				 ds.l	1sampleSizeTable			 ds.l	1sizeof					 EQU	24						ENDRShadowSync 				RECORD	0fdSampleNum				 ds.l	1syncSampleNum			 ds.l	1sizeof					 EQU	8						ENDRShadowSyncAtom 			RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'stsz' flags					 ds.l	1									; 1 byte of version / 3 bytes of flags numEntries				 ds.l	1shadowSyncTable			 ds		ShadowSyncsizeof					 EQU	24						ENDRSampleTableAtom 		RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'stbl' sampleDescription		 ds		SampleDescriptionAtomtimeToSampleNum			 ds		TimeToSampleNumAtomsampleToChunk			 ds		SampleToChunkAtomsyncSample				 ds		SyncSampleAtomsampleSize				 ds		SampleSizeAtomchunkOffset				 ds		ChunkOffsetAtomshadowSync				 ds		ShadowSyncAtomsizeof					 EQU	180						ENDRPublicHandlerInfo 		RECORD	0flags					 ds.l	1									; 1 byte of version / 3 bytes of flags componentType			 ds.l	1componentSubType		 ds.l	1componentManufacturer	 ds.l	1componentFlags			 ds.l	1componentFlagsMask		 ds.l	1componentName			 ds.b	1sizeof					 EQU	26						ENDRHandlerAtom 			RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'hdlr' hInfo					 ds		PublicHandlerInfosizeof					 EQU	34						ENDR; a data reference is a private structure DataInfoAtom 			RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'dinf' dataRef					 ds.l	1sizeof					 EQU	12						ENDRRgnAtom 				RECORD	0size					 ds.l	1atomType				 ds.l	1rgnSize					 ds.w	1rgnBBox					 ds		Rectdata					 ds.b	1sizeof					 EQU	20						ENDRMatteCompressedAtom 	RECORD	0size					 ds.l	1atomType				 ds.l	1flags					 ds.l	1									; 1 byte of version / 3 bytes of flags matteImageDescription	 ds		ImageDescriptionmatteData				 ds.b	1sizeof					 EQU	100						ENDRMatteAtom 				RECORD	0size					 ds.l	1atomType				 ds.l	1aCompressedMatte		 ds		MatteCompressedAtomsizeof					 EQU	108						ENDRClippingAtom 			RECORD	0size					 ds.l	1atomType				 ds.l	1aRgnClip				 ds		RgnAtomsizeof					 EQU	28						ENDR;**********************;* Media Info Example Structures;**********************VideoMediaInfoHeader 	RECORD	0flags					 ds.l	1									; 1 byte of version / 3 bytes of flags graphicsMode			 ds.w	1									; for QD - transfer mode opColorRed				 ds.w	1									; opcolor for transfer mode opColorGreen			 ds.w	1opColorBlue				 ds.w	1sizeof					 EQU	12						ENDRVideoMediaInfoHeaderAtom RECORD	0size					 ds.l	1									; size of Media info atomType				 ds.l	1									; = 'vmhd' vmiHeader				 ds		VideoMediaInfoHeadersizeof					 EQU	20						ENDRVideoMediaInfo 			RECORD	0size					 ds.l	1									; size of Media info atomType				 ds.l	1									; = 'minf' header					 ds		VideoMediaInfoHeaderAtomdataHandler				 ds		HandlerAtomdataInfo				 ds		DataInfoAtomsampleTable				 ds		SampleTableAtomsizeof					 EQU	254						ENDRSoundMediaInfoHeader 	RECORD	0flags					 ds.l	1									; 1 byte of version / 3 bytes of flags balance					 ds.w	1rsrvd					 ds.w	1sizeof					 EQU	8						ENDRSoundMediaInfoHeaderAtom RECORD	0size					 ds.l	1									; size of Media info atomType				 ds.l	1									; = 'vmhd' smiHeader				 ds		SoundMediaInfoHeadersizeof					 EQU	16						ENDRSoundMediaInfo 			RECORD	0size					 ds.l	1									; size of Media info atomType				 ds.l	1									; = 'minf' header					 ds		SoundMediaInfoHeaderAtomdataHandler				 ds		HandlerAtomdataReference			 ds.l	1sampleTable				 ds		SampleTableAtomsizeof					 EQU	242						ENDR; whatever data the media handler needs goes after the atomType MediaInfo 				RECORD	0size					 ds.l	1atomType				 ds.l	1sizeof					 EQU	8						ENDR;**********************;* Media Directory Structures;**********************MediaHeader 			RECORD	0flags					 ds.l	1									; 1 byte of version / 3 bytes of flags creationTime			 ds.l	1									; seconds since Jan 1904 when directory was created modificationTime		 ds.l	1									; seconds since Jan 1904 when directory was appended timeScale				 ds.l	1									; start time for Media (Media time) duration				 ds.l	1									; length of Media (Media time) language				 ds.w	1quality					 ds.w	1sizeof					 EQU	24						ENDRMediaHeaderAtom 		RECORD	0size					 ds.l	1atomType				 ds.l	1header					 ds		MediaHeadersizeof					 EQU	32						ENDRMediaDirectory 			RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'mdia' mediaHeader				 ds		MediaHeaderAtom					; standard Media information mediaHandler			 ds		HandlerAtommediaInfo				 ds		MediaInfosizeof					 EQU	82						ENDR;**********************;* Track Structures;**********************TrackEnable						EQU		1 << 0TrackInMovie					EQU		1 << 1TrackInPreview					EQU		1 << 2TrackInPoster					EQU		1 << 3TrackHeader 			RECORD	0flags					 ds.l	1									; 1 byte of version / 3 bytes of flags creationTime			 ds.l	1									; seconds since Jan 1904 when directory was created modificationTime		 ds.l	1									; seconds since Jan 1904 when directory was appended trackID					 ds.l	1reserved1				 ds.l	1duration				 ds.l	1									; length of track (track time) reserved2				 ds.l	1reserved3				 ds.l	1layer					 ds.w	1alternateGroup			 ds.w	1volume					 ds.w	1reserved4				 ds.w	1matrix					 ds		MatrixRecordtrackWidth				 ds.l	1trackHeight				 ds.l	1sizeof					 EQU	84						ENDRTrackHeaderAtom 		RECORD	0size					 ds.l	1									; size of track header atomType				 ds.l	1									; = 'tkhd' header					 ds		TrackHeadersizeof					 EQU	92						ENDREditListType 			RECORD	0trackDuration			 ds.l	1mediaTime				 ds.l	1mediaRate				 ds.l	1sizeof					 EQU	12						ENDREditListAtom 			RECORD	0size					 ds.l	1atomType				 ds.l	1									; = elst flags					 ds.l	1									; 1 byte of version / 3 bytes of flags numEntries				 ds.l	1editListTable			 ds		EditListTypesizeof					 EQU	28						ENDREditsAtom 				RECORD	0size					 ds.l	1atomType				 ds.l	1									; = edts editList				 ds		EditListAtomsizeof					 EQU	36						ENDRTrackLoadSettings 		RECORD	0preloadStartTime		 ds.l	1preloadDuration			 ds.l	1preloadFlags			 ds.l	1defaultHints			 ds.l	1sizeof					 EQU	16						ENDRTrackLoadSettingsAtom 	RECORD	0size					 ds.l	1atomType				 ds.l	1									; = load settings				 ds		TrackLoadSettingssizeof					 EQU	24						ENDRTrackDirectory 			RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'trak' trackHeader				 ds		TrackHeaderAtom					; standard track information trackClip				 ds		ClippingAtomedits					 ds		EditsAtommedia					 ds		MediaDirectoryuserData				 ds		UserDataAtom						; space for extending with new data types sizeof					 EQU	264						ENDR;***************************************;*;*   MovieDirectory -;*		The MovieDirectory is the top level structure which;*		holds the TrackInstance describing where the;*		TrackDirectories are.;*;***************************************MovieHeader 			RECORD	0flags					 ds.l	1									; 1 byte of version / 3 bytes of flags creationTime			 ds.l	1									; seconds since Jan 1904 when directory was created modificationTime		 ds.l	1									; seconds since Jan 1904 when directory was appended timeScale				 ds.l	1									; Time specifications duration				 ds.l	1preferredRate			 ds.l	1									; rate at which to play this movie preferredVolume			 ds.w	1									; volume to play movie at reserved1				 ds.w	1preferredLong1			 ds.l	1preferredLong2			 ds.l	1matrix					 ds		MatrixRecordpreviewTime				 ds.l	1									; time in track the proxy begins (track time) previewDuration			 ds.l	1									; how long the proxy lasts (track time) posterTime				 ds.l	1									; time in track the proxy begins (track time) selectionTime			 ds.l	1									; time in track the proxy begins (track time) selectionDuration		 ds.l	1									; time in track the proxy begins (track time) currentTime				 ds.l	1									; time in track the proxy begins (track time) nextTrackID				 ds.l	1									; next value to use for a TrackID sizeof					 EQU	100						ENDRMovieHeaderAtom 		RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'mvhd' header					 ds		MovieHeadersizeof					 EQU	108						ENDRMovieDirectory 			RECORD	0size					 ds.l	1atomType				 ds.l	1									; = 'moov' header					 ds		MovieHeaderAtommovieClip				 ds		ClippingAtom; Track Directories trackDirectory			 ds		TrackDirectory						; Track directory information ; User data for Movie userData				 ds		UserDataAtom						; space for user extensions sizeof					 EQU	426						ENDR; some system defined format IDs MOVIE_TYPE						EQU		'moov'TRACK_TYPE						EQU		'trak'MEDIA_TYPE						EQU		'mdia'VIDEO_TYPE						EQU		'vide'SOUND_TYPE						EQU		'soun'; atom id's MovieAID						EQU		'moov'MovieHeaderAID					EQU		'mvhd'ClipAID							EQU		'clip'RgnClipAID						EQU		'crgn'MatteAID						EQU		'matt'MatteCompAID					EQU		'kmat'TrackAID						EQU		'trak'UserDataAID						EQU		'udta'TrackHeaderAID					EQU		'tkhd'EditsAID						EQU		'edts'EditListAID						EQU		'elst'MediaAID						EQU		'mdia'MediaHeaderAID					EQU		'mdhd'MediaInfoAID					EQU		'minf'VideoMediaInfoHeaderAID			EQU		'vmhd'SoundMediaInfoHeaderAID			EQU		'smhd'GenericMediaInfoHeaderAID		EQU		'gmhd'GenericMediaInfoAID				EQU		'gmin'DataInfoAID						EQU		'dinf'DataRefAID						EQU		'dref'SampleTableAID					EQU		'stbl'STSampleDescAID					EQU		'stsd'STTimeToSampAID					EQU		'stts'STSyncSampleAID					EQU		'stss'STSampleToChunkAID				EQU		'stsc'STShadowSyncAID					EQU		'stsh'HandlerAID						EQU		'hdlr'STSampleSizeAID					EQU		'stsz'STChunkOffsetAID				EQU		'stco'DataRefContainerAID				EQU		'drfc'TrackReferenceAID				EQU		'tref'ColorTableAID					EQU		'ctab'LoadSettingsAID					EQU		'load'	ENDIF ; __MOVIESFORMAT__