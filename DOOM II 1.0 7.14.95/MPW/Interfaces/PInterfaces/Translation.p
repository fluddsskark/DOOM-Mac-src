{ 	File:		Translation.p  	Copyright:	© 1984-1994 by Apple Computer, Inc. 				All rights reserved.  	Version:	Universal Interfaces 2.0a1.  ETO #15, MPW prerelease.  Sunday, July 17, 1994.   	Bugs?:		If you find a problem with this file, send the file and version 				information (from above) and the problem description to:  					Internet:	apple.bugs@applelink.apple.com 					AppleLink:	APPLE.BUGS }{$IFC UNDEFINED UsingIncludes}{$SETC UsingIncludes := 0}{$ENDC}{$IFC NOT UsingIncludes} UNIT Translation; INTERFACE{$ENDC}{$IFC UNDEFINED __TRANSLATION__}{$SETC __TRANSLATION__ := 1}{$I+}{$SETC TranslationIncludes := UsingIncludes}{$SETC UsingIncludes := 1}{$PUSH}{$ALIGN MAC68K}{$LibExport+}{$IFC UNDEFINED REZ }{$IFC UNDEFINED __TYPES__}{$I Types.p}{$ENDC}{	ConditionalMacros.p											}{$IFC UNDEFINED __FILES__}{$I Files.p}{$ENDC}{	MixedMode.p													}{	OSUtils.p													}{$IFC UNDEFINED __COMPONENTS__}{$I Components.p}{$ENDC}{$IFC UNDEFINED __TRANSLATIONEXTENSIONS__}{$I TranslationExtensions.p}{$ENDC}{	Memory.p													}{	Quickdraw.p													}{		QuickdrawText.p											}{	Components.p												}	TYPEDocOpenMethod = INTEGER;CONST	domCannot					= 0;	domNative					= 1;	domTranslateFirst			= 2;	domWildcard					= 3;	TYPETypesBlock = ARRAY [0..63] OF OSType;	TypesBlockPtr = ^OSType;CONST	TranslationScrapProgressDialogID = -16555;TYPE	FileTranslationSpec = RECORD		componentSignature:		OSType;		translationSystemInfo:	Ptr;		src:					FileTypeSpec;		dst:					FileTypeSpec;	END;	FileTranslationSpecArrayPtr = ^FileTranslationSpec;FUNCTION GetFileTypesThatAppCanNativelyOpen(appVRefNumHint: INTEGER; appSignature: OSType; VAR nativeTypes: FileType): OSErr;	{$IFC NOT GENERATINGCFM}	INLINE $701C, $ABFC;	{$ENDC}FUNCTION ExtendFileTypeList(originalTypeList: FileType; numberOriginalTypes: INTEGER; VAR extendedTypeList: FileType; VAR numberExtendedTypes: INTEGER): OSErr;	{$IFC NOT GENERATINGCFM}	INLINE $7009, $ABFC;	{$ENDC}FUNCTION CanDocBeOpened(targetDocument: FSSpec; appVRefNumHint: INTEGER; appSignature: OSType; nativeTypes: FileType; onlyNative: BOOLEAN; VAR howToOpen: DocOpenMethod; VAR howToTranslate: FileTranslationSpec): OSErr;	{$IFC NOT GENERATINGCFM}	INLINE $701E, $ABFC;	{$ENDC}FUNCTION GetFileTranslationPaths(VAR srcDocument: FSSpec; dstDocType: FileType; maxResultCount: INTEGER; resultBuffer: FileTranslationSpecArrayPtr): INTEGER;	{$IFC NOT GENERATINGCFM}	INLINE $7038, $ABFC;	{$ENDC}FUNCTION GetPathFromTranslationDialog(theDocument: FSSpec; theApplication: FSSpec; typeList: TypesBlockPtr; VAR howToOpen: DocOpenMethod; VAR howToTranslate: FileTranslationSpec): OSErr;	{$IFC NOT GENERATINGCFM}	INLINE $7037, $ABFC;	{$ENDC}FUNCTION TranslateFile(sourceDocument: FSSpec; destinationDocument: FSSpec; howToTranslate: FileTranslationSpec): OSErr;	{$IFC NOT GENERATINGCFM}	INLINE $700C, $ABFC;	{$ENDC}FUNCTION GetDocumentKindString(docVRefNum: INTEGER; docType: OSType; docCreator: OSType; VAR kindString: Str63): OSErr;	{$IFC NOT GENERATINGCFM}	INLINE $7016, $ABFC;	{$ENDC}FUNCTION GetTranslationExtensionName(translationMethod: FileTranslationSpec; VAR extensionName: Str31): OSErr;	{$IFC NOT GENERATINGCFM}	INLINE $7036, $ABFC;	{$ENDC}TYPE	GetScrapDataProcPtr = ProcPtr;  { FUNCTION (requestedFormat: ScrapType; dataH: Handle; srcDataGetterRefCon: UNIV Ptr): OSErr; }FUNCTION TranslateScrap(sourceDataGetter: GetScrapDataProcPtr; sourceDataGetterRefCon: UNIV Ptr; destinationFormat: ScrapType; destinationData: Handle; progressDialogID: INTEGER): OSErr;	{$IFC NOT GENERATINGCFM}	INLINE $700E, $ABFC;	{$ENDC}{$ENDC}{$ALIGN RESET}{$POP}{$SETC UsingIncludes := TranslationIncludes}{$ENDC} {__TRANSLATION__}{$IFC NOT UsingIncludes} END.{$ENDC}