{ 	File:		ToolUtils.p  	Copyright:	© 1984-1994 by Apple Computer, Inc. 				All rights reserved.  	Version:	Universal Interfaces 2.0a1.  ETO #15, MPW prerelease.  Sunday, July 17, 1994.   	Bugs?:		If you find a problem with this file, send the file and version 				information (from above) and the problem description to:  					Internet:	apple.bugs@applelink.apple.com 					AppleLink:	APPLE.BUGS }{$IFC UNDEFINED UsingIncludes}{$SETC UsingIncludes := 0}{$ENDC}{$IFC NOT UsingIncludes} UNIT ToolUtils; INTERFACE{$ENDC}{$IFC UNDEFINED __TOOLUTILS__}{$SETC __TOOLUTILS__ := 1}{$I+}{$SETC ToolUtilsIncludes := UsingIncludes}{$SETC UsingIncludes := 1}{$IFC UNDEFINED __TYPES__}{$I Types.p}{$ENDC}{	ConditionalMacros.p											}{$IFC UNDEFINED __QUICKDRAW__}{$I Quickdraw.p}{$ENDC}{	MixedMode.p													}{	QuickdrawText.p												}{$IFC UNDEFINED __TEXTUTILS__}{$I TextUtils.p}{$ENDC}{	Script.p													}{		IntlResources.p											}{		Events.p												}{			OSUtils.p											}{$IFC UNDEFINED __FIXMATH__}{$I FixMath.p}{$ENDC}{$PUSH}{$ALIGN MAC68K}{$LibExport+}CONST	sysPatListID				= 0;	iBeamCursor					= 1;	crossCursor					= 2;	plusCursor					= 3;	watchCursor					= 4;TYPE	Int64Bit = RECORD		hiLong:					LONGINT;		loLong:					LONGINT;	END;FUNCTION FixRatio(numer: INTEGER; denom: INTEGER): Fixed;	{$IFC NOT GENERATINGCFM}	INLINE $A869;	{$ENDC}FUNCTION FixMul(a: Fixed; b: Fixed): Fixed;	{$IFC NOT GENERATINGCFM}	INLINE $A868;	{$ENDC}FUNCTION FixRound(x: Fixed): INTEGER;	{$IFC NOT GENERATINGCFM}	INLINE $A86C;	{$ENDC}PROCEDURE PackBits(VAR srcPtr: Ptr; VAR dstPtr: Ptr; srcBytes: INTEGER);	{$IFC NOT GENERATINGCFM}	INLINE $A8CF;	{$ENDC}PROCEDURE UnpackBits(VAR srcPtr: Ptr; VAR dstPtr: Ptr; dstBytes: INTEGER);	{$IFC NOT GENERATINGCFM}	INLINE $A8D0;	{$ENDC}FUNCTION BitTst(bytePtr: UNIV Ptr; bitNum: LONGINT): BOOLEAN;	{$IFC NOT GENERATINGCFM}	INLINE $A85D;	{$ENDC}PROCEDURE BitSet(bytePtr: UNIV Ptr; bitNum: LONGINT);	{$IFC NOT GENERATINGCFM}	INLINE $A85E;	{$ENDC}PROCEDURE BitClr(bytePtr: UNIV Ptr; bitNum: LONGINT);	{$IFC NOT GENERATINGCFM}	INLINE $A85F;	{$ENDC}FUNCTION BitAnd(value1: LONGINT; value2: LONGINT): LONGINT;	{$IFC NOT GENERATINGCFM}	INLINE $A858;	{$ENDC}FUNCTION BitOr(value1: LONGINT; value2: LONGINT): LONGINT;	{$IFC NOT GENERATINGCFM}	INLINE $A85B;	{$ENDC}FUNCTION BitXor(value1: LONGINT; value2: LONGINT): LONGINT;	{$IFC NOT GENERATINGCFM}	INLINE $A859;	{$ENDC}FUNCTION BitNot(value: LONGINT): LONGINT;	{$IFC NOT GENERATINGCFM}	INLINE $A85A;	{$ENDC}FUNCTION BitShift(value: LONGINT; count: INTEGER): LONGINT;	{$IFC NOT GENERATINGCFM}	INLINE $A85C;	{$ENDC}{$IFC GENERATING68K }PROCEDURE LongMul(a: LONGINT; b: LONGINT; VAR result: Int64Bit);	{$IFC NOT GENERATINGCFM}	INLINE $A867;	{$ENDC}{$ENDC}FUNCTION GetIcon(iconID: INTEGER): Handle;	{$IFC NOT GENERATINGCFM}	INLINE $A9BB;	{$ENDC}PROCEDURE PlotIcon(theRect: Rect; theIcon: Handle);	{$IFC NOT GENERATINGCFM}	INLINE $A94B;	{$ENDC}FUNCTION GetPattern(patternID: INTEGER): PatHandle;	{$IFC NOT GENERATINGCFM}	INLINE $A9B8;	{$ENDC}FUNCTION GetCursor(cursorID: INTEGER): CursHandle;	{$IFC NOT GENERATINGCFM}	INLINE $A9B9;	{$ENDC}FUNCTION GetPicture(pictureID: INTEGER): PicHandle;	{$IFC NOT GENERATINGCFM}	INLINE $A9BC;	{$ENDC}FUNCTION SlopeFromAngle(angle: INTEGER): Fixed;	{$IFC NOT GENERATINGCFM}	INLINE $A8BC;	{$ENDC}FUNCTION AngleFromSlope(slope: Fixed): INTEGER;	{$IFC NOT GENERATINGCFM}	INLINE $A8C4;	{$ENDC}FUNCTION DeltaPoint(ptA: Point; ptB: Point): LONGINT;	{$IFC NOT GENERATINGCFM}	INLINE $A94F;	{$ENDC}PROCEDURE ShieldCursor(shieldRect: Rect; offsetPt: Point);	{$IFC NOT GENERATINGCFM}	INLINE $A855;	{$ENDC}PROCEDURE ScreenRes(VAR scrnHRes: INTEGER; VAR scrnVRes: INTEGER);	{$IFC NOT GENERATINGCFM}	INLINE $225F, $32B8, $0102, $225F, $32B8, $0104;	{$ENDC}PROCEDURE GetIndPattern(VAR thePat: Pattern; patternListID: INTEGER; index: INTEGER);FUNCTION HiWord(x: LONGINT): INTEGER;	{$IFC NOT GENERATINGCFM}	INLINE $A86A;	{$ENDC}FUNCTION LoWord(x: LONGINT): INTEGER;	{$IFC NOT GENERATINGCFM}	INLINE $A86B;	{$ENDC}{$ALIGN RESET}{$POP}{$SETC UsingIncludes := ToolUtilsIncludes}{$ENDC} {__TOOLUTILS__}{$IFC NOT UsingIncludes} END.{$ENDC}