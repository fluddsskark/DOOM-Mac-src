;; void BlitLargeAlign(uchar *draw_buffer, int dstRowBytes, void *dstPtr, long w, long h, long modulus);                     r3                  r4               r5            r6       r7       r8;	csect	.BlitLargeAlign[PR]		export	.BlitLargeAlign	.BlitLargeAlign:	stw		r31,-4(SP)				;save non-volatile regs in red zone	stw		r30,-8(SP)	mr			r9,r4#	li			r4,0#	extsh    r0,r5						;r0 = dy	addi     r30,SP,8					;put a copy of SP + 8 into r30#	clrlwi   r10,r4,30				;r10 = dx & 3	clrrwi   r30,r30,3				;ensure r30 is on an 8-byte boundary#	mullw    r5,r0,r9					;r5 = gDrawRowBytes * dy#	add      r10,r6,r10				;r10 = w = (dx & 3) + w	mr			r10,r6		#######	clrrwi   r4,r4,2					;r4 = dx = dx & 0xfffc	addi     r0,r10,3					;r0 = w + 3	rlwinm   r10,r0,0,0,29			;r10 = w = (w + 3) & 0xfffc	mr			r31,r9					;get copy of rowbytes in r31#	extsh    r0,r4						;r0 = dx#	mr			r4,r5#	li			r5,0#	extsh    r10,r10					;r10 = w#	extsh    r6,r8						;r6 = modulus#	add      r5,r5,r0					;r5 = gDrawRowBytes * dy + dx	srawi    r8,r10,2					;r8 = hCount = w >> 2#	add		r5,r5,r5					;r5 = (gDrawRowBytes * dy + dx) * 2	sub      r6,r6,r10				;r6 = sstride = modulus - w	sub      r9,r9,r10				;r9 = dstride = gDrawRowBytes - w#	add      r5,r4,r5					;r5 = dst1 = gDrawStart + gDrawRowBytes * dy + dx	addi     r8,r8,-1					;subtract 1 from width count	addi	 	r3,r3,-4					;subtract 4 from src	addi	 	r5,r5,-8					;subtract 8 from dst	add      r9,r9,r9					;r9 = dstride = 2 * (gDrawRowBytes - w)	add		r31,r5,r31				;r31 = dst2 = gDrawRowBytes + dst1	li		 	r4,-1						;get -1 in r4BlitLargeAlignY:						;y count is in r7	lwzu     r10,4(r3)				;load a long into r10	mr       r0,r10  					;put a copy in r0	mr       r11,r10	inslwi   r0,r10,16,8	insrwi   r11,r10,16,8	rlwimi   r0,r10,16,24,31	stw      r0,0(r30)	rlwimi   r11,r10,16,0,7	stw      r11,4(r30)	mtctr	 r8							;copy x count into the counter	lfd      fp0,0(r30)BlitLargeAlignX:	lwzu     r10,4(r3)					;load a long into r10	stfdu    fp0,8(r5)	mr       r0,r10  					;put a copy in r0	mr       r11,r10	inslwi   r0,r10,16,8	insrwi   r11,r10,16,8	rlwimi   r0,r10,16,24,31	stw      r0,0(r30)	rlwimi   r11,r10,16,0,7	stw      r11,4(r30)	stfdu    fp0,8(r31)	lfd      fp0,0(r30)	bdnz	 BlitLargeAlignX			;loop over all x	stfdu    fp0,8(r5)	add.     r7,r7,r4					;decrement the counter	add      r3,r3,r6					;src += sstride	add      r5,r5,r9					;dst1 += dstride	stfdu    fp0,8(r31)	add      r31,r31,r9					;dst2 += dstride	bne      BlitLargeAlignY            ;loop for all y	lwz		r30,-8(SP)				;restore non-volatile regs	lwz		r31,-4(SP)			blr