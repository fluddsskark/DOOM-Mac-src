(***** start here when you double-click the script *****)copy false to debugtry	-- open the 68K compiled app	copy (choose file with prompt "Compiled 68K application:" of type "APPL") to my68Kapp		-- open the PPC app	copy (choose file with prompt "Compiled PPC application" of type "APPL") to myPPCapp		-- if they opened the same one twice, skip to error	if my68Kapp is equal to myPPCapp then		error "can't do two" number 1624	end if		(******* this is the actual copy call **************)		MakeFatBinary(my68Kapp, myPPCapp)		(*********************************************)		on error number errNum		if errNum is 1624 then		display dialog "You chose Ò" & myPPCapp & "Ó twice.Next time, choose a 68K compiled application and a PPC compiled application" buttons "OK" default button "OK"	end if		end tryquit-- end standard double-click open(** come here when you drag some files onto the script icon **)on open (docList)		copy "" to my68Kapp	copy "" to myPPCapp	copy number of items in docList to numFiles	copy item 1 of docList to file1	set debug to false		try -- need to quit applet if the user cancels.		-- I can't tell what to do with more than two files, so bail.		if (numFiles ² 0) or (numFiles ³ 3) then			display dialog Â				"This script can only convert two files.  Please try again." buttons "OK" default button 1			error number 1626					else -- 1 or 2 files						-- warn users that they are responsible for typechecking.			display dialog Â				"Metrowerks Fat Binary Maker		Warning: AppleScript doesn't have a lot of typechecking.		We assume that youÕve dropped just-compiled application(s), so if you havenÕt, cancel now." buttons {"Cancel", "Continue"} default button 2						-- if they dropped one file, ask for the other						if numFiles = 1 then -- decide if it's 68K or PPC and prompt for the other								copy (count resources of type "CODE" in file1) to numC -- assume that files with CODE resources are 68K								if numC > 0 then					copy file1 to my68Kapp					copy (choose file with prompt "Compiled PPC application" of type "APPL") to myPPCapp				else					copy file1 to myPPCapp					copy (choose file with prompt "Compiled 68K application:" of type "APPL") to my68Kapp				end if							else -- if they dropped two, try to figure out which oneÕs which								--			if numFiles = 2 then -- if two, check to see which one is 68K								copy item 2 of docList to file2								copy (count resources of type "CODE" in file1) to numC1				copy (count resources of type "CODE" in file2) to numC2								if (numC1 > 0 and numC2 > 0) then					display dialog Â						"Both files have ÒCODEÓ resources already.   Please try again." buttons "OK" default button 1					error number 1628									else -- hooray, we have a probable good set!										if numC1 > 0 then						copy file1 to my68Kapp						copy file2 to myPPCapp					else						copy file1 to myPPCapp						copy file2 to my68Kapp					end if				end if -- only 1 with code resources								--			end if -- end else must be 2 files							end if -- must be two files								end if -- end else ³ 1 and ² 2				if my68Kapp ­ "" and myPPCapp ­ "" then			if debug = true then				display dialog "Debug: Got good files" buttons "OK" default button 1			end if						(******* this is the actual copy call **************)						MakeFatBinary(my68Kapp, myPPCapp)						(*********************************************)					end if			on error		if debug = true then			display dialog "Debug: Got errors.  Quitting Now." buttons "Bleah" default button 1		end if		quit	end try		quit	end open(******** do the copy from here ********)on MakeFatBinary(my68Kapp, myPPCapp)		set keepGoing to true	copy (count resources of type "CODE" in myPPCapp) to numCppc -- check for existing resources	copy (count resources of type "DATA" in myPPCapp) to numDppc	copy (count resources of type "XREF" in myPPCapp) to numXppc		if (numCppc > 0 or numDppc > 0 or numXppc > 0) then				set keepGoing to (RemakeProject(myPPCapp)) -- remake project just returns false these days.  Too fragile.			end if -- if something > 0		if keepGoing is true then				set allWorked to false -- code written before I discovered try and on error				if (CopyMyResources("CODE", my68Kapp, myPPCapp)) then			if CopyMyResources("DATA", my68Kapp, myPPCapp) then				if CopyMyResources("XREF", my68Kapp, myPPCapp) then					set allWorked to true				end if			end if		end if				if allWorked is true then			display dialog "Congratulations!  			Ò" & myPPCapp & "Ó is now a Fat Binary." buttons "OK" default button 1					else			display dialog Â				"Sorry, error copying resources.  Please use CodeWarrior to re-make the applications and try again." buttons "OK" default button 1		end if			end if -- keepGoing is true	end MakeFatBinaryon CopyMyResources(resType, source, target) -- this subroutine actually works!		-- count the total number of code resources (requires ResMover)	copy (count resources of type resType in source) to numCODEs		-- copy resource number 0 fails, so we do that one first	try				copy resource with id 0 of type resType from source to target	on error		return false	end try		-- repeat for the number of code resources (IDs may not be sequential)	repeat with countVar from 1 to numCODEs - 1		try			copy resource number countVar of type resType from source to target					on error errorText number errNum			return false		end try	end repeat		return true	end CopyMyResourceson GetFiles(my68Kapp, myPPCapp) -- this only works sometimes, I think it has to do with aliases being weird.	-- open the 68K compiled app	copy (choose file with prompt "Compiled 68K application:" of type "APPL") to my68Kapp		-- open the PPC app	copy (choose file with prompt "Compiled PPC application" of type "APPL") to myPPCapp	end GetFileson RemakeProject(myPPCapp) -- stub until I improve the interaction with CW		display dialog "Found some 68K resources in your Ò" & myPPCapp & "Ó target file.	Have CodeWarrior Make your application fresh, then try this script again." buttons "OK" default button 1	return false		-- following code is not stable and doesn't return the correct value.  Too complex, anyway.		(*	try		display dialog Â			"Found some CODE, DATA, and/or XREF resources in Ò" & myPPCapp & "Ó target file.  Tell CodeWarrior to rebuild it?"		copy (choose file with prompt "PPC Project " of type "MMPR") to PPCproj		copy (choose file with prompt "File To Touch" of type "TEXT") to PPCFile				try			tell application "MW C/C++ PPC 1.0.1"				open PPCproj				error number (Touch PPCFile)				error number (Make Project)			end tell					on error			display dialog Â				"Error opening or making in CodeWarrior.  Please rebuild manually" buttons "OK" default button 1			set keepGoing to false			return false		end try			on error		display dialog "Button returned is" & the button returned		set keepGoing to false		return false	end try		return true	*)end RemakeProject