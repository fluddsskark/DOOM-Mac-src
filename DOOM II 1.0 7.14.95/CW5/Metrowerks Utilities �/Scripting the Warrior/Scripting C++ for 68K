(* This sample script shows you how to script the Metrowerks compilers.	Before using this sample script, you need:		1. AppleScript software installed on your hard drive.		2.  Metrowerks CodeWarrior (Bronze or Gold) installed on your hard drive, or run directly from your CD.	To use this script, you need to:		1. Copy the PBDTGetAppl sample project folder from the CodeWarrior CD to your hard drive.		2. Set the PATHNAME variable to the pathname of the PBDTGetAppl folder on your hard drive.		3. If you want the script to print source code, set the PRINTING variable to "YES".*)set PATHNAME to "CW5 Gold:CodeWarrior Examples Ä:C/C++ on 68K Mac:PBDTGetAppl Ä:"set PRINTING to "NO"with timeout of 60000 seconds	tell application "MW C/C++ 68K 1.2"				activate		(* Create a project, add files, and create a segment *)				Create Project {PATHNAME & "MWPBDTGetAppl.µ"}		Add Files {"Drawing.c", "ErrMsg.c", "EventLoop.c", "GetCreator.c", "InitMac.c", "MenuDispatch.c", "PrintLoop.c", "SlimFunctions.c", "SlimMain.c"}		Add Files {"MacOS.lib"} To Segment 2				(* Set every preference available for the C/C++ 68K compiler. *)		(* The compiler ignores preferences that do not apply to it. *)		(* For more details, see the "C/C++ Language", "Common Language", "68K Linker", "Common Linker", 		   and "Common" section of the "C/C++ 68K" AppleEvent dictionnary. *)		(* An unlimited number of preferences can be adjusted in a 		   "set preferences to" statement. They are set one panel per statement for readability. *)				Set Preferences To {Activate CPlusPlus:false, ARM Conformance:false, ANSI Keywords Only:false, Require Function Prototypes:false, Expand Trigraph Sequences:false, Enums Always Ints:false, MPW Pointer Type Rules:false, Prefix File:"MacHeaders68K"}		Set Preferences To {Illegal Pragmas:false, Empty Declarations:false, Possible Errors:false, Unused Variables:false, Unused Arguments:false, Extra Commas:false, Extended Error Checking:false}		Set Preferences To {Code Model:1, Struct Alignment:0, MC68020 CodeGen:false, MC68881 CodeGen:false, Four Bytes Ints:false, Eight Byte Double:false, Peephole Optimizer:true, CSE Optimizer:true, Optimize For Size:true, Far Data:false, Use Profiler:false, Far Virtual Function Tables:false, Far String Constants:false}		Set Preferences To {MacsBug Symbols:2, Generate SYM File:true, Full Path In Sym Files:true, Generate Link Map:false, Generate A6 Stack Frames:true, The Debugger Aware:false, Link Single Segment:false, Fast Link:true}		Set Preferences To {Project Type:0, File Name:"MWPBDTGetAppl", File Creator:"????", File Type:"APPL", Minimun Size:384, Preferred Size:512, SIZE Flags:23008}		Set Preferences To {User Paths:{PATHNAME & "Source"}, Always Full Search:false}				(* Resets file paths to make sure the compiler will use files from the new project folder. *)				Reset File Paths				(* Open a source code file, go to a line number, go to a function definition, check its syntax, 			and close its window. *)		(* The "check syntax" statement requires its file parameter to be open. *)				open {PATHNAME & "Source:SlimFunctions.c"}		Goto Line 1		Goto Function "DisplayStuff"		Check Syntax {"SlimFunctions.c"}		Close Window {PATHNAME & "Source:SlimFunctions.c"} Saving no						(* Compile a file in the project, build the project, touch a file, update the project,			remove object code from the project, and run it. *)				Compile {"EventLoop.c"}		Make Project		Touch {"EventLoop.c"}		Update Project		Remove Binaries		Run Project				(* Print a file without bringing up a print dialog box *)				if PRINTING is "YES" then			print {PATHNAME & "Source:SlimMain.c"}		end if				(* Empty the project, close it, and quit the compiler. *)				Remove Files {"Drawing.c", "ErrMsg.c", "EventLoop.c", "GetCreator.c", "InitMac.c", "MenuDispatch.c", "PrintLoop.c", "SlimFunctions.c", "SlimMain.c", "MacOS.lib"}		Close Project		quit			end tellend timeout