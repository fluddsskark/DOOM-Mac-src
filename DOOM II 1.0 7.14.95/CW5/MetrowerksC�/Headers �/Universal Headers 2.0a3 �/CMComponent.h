/* 	File:		CMComponent.h  	Copyright:	© 1984-1994 by Apple Computer, Inc. 				All rights reserved.  	Version:	Universal Interfaces 2.0a3  ETO #16, MPW prerelease.  Friday, November 11, 1994.   	Bugs?:		If you find a problem with this file, send the file and version 				information (from above) and the problem description to:  					Internet:	apple.bugs@applelink.apple.com 					AppleLink:	APPLE.BUGS */#ifndef __CMCOMPONENT__#define __CMCOMPONENT__#ifndef __TYPES__#include <Types.h>#endif/*	#include <ConditionalMacros.h>								*/#ifndef __QUICKDRAW__#include <Quickdraw.h>#endif/*	#include <MixedMode.h>										*//*	#include <QuickdrawText.h>									*/#ifndef __COMPONENTS__#include <Components.h>#endif#ifndef __WINDOWS__#include <Windows.h>#endif/*	#include <Memory.h>											*//*	#include <Events.h>											*//*		#include <OSUtils.h>									*//*	#include <Controls.h>										*//*		#include <Menus.h>										*/#ifndef __CMAPPLICATION__#include <CMApplication.h>#endif/*	#include <Printing.h>										*//*		#include <Errors.h>										*//*		#include <Dialogs.h>									*//*			#include <TextEdit.h>								*/#ifdef __cplusplusextern "C" {#endif#if GENERATINGPOWERPC#pragma options align=mac68k#endif#ifdef __CFM68K__#pragma lib_export on#endifenum {	CMInterfaceVersion			= 0};/* CMM Component function selectors */enum {	kCMInit						= 0,	kCMMatchColors				= 1,	kCMGamutTest				= 2,	kCMMatchPixMap				= 3,	kCMCheckPixMap				= 4,	kCMConcatenateProfiles		= 5};/* Profile Responder Components */enum {	ProfileResponderInterfaceRev = 0};/* ProfileResponder Component function selectors */enum {	kCMGetProfile				= 0,	kCMSetProfile				= 1,	kCMSetProfileDescription	= 2,	kCMGetIndexedProfile		= 3,	kCMDeleteDeviceProfile		= 4,	kProfileResponderMaxSelector = kCMDeleteDeviceProfile};typedef ComponentInstance ProfileResponder;/* Required CMM Component routines */extern pascal CMError CMInit(ComponentInstance CMSession, CMProfileHandle srcProfile, CMProfileHandle dstProfile) FIVEWORDINLINE(0x2F3C, 0x0008, 0, 0x7000, 0xA82A);extern pascal CMError CMMatchColors(ComponentInstance CMSession, CMColorList myColors, long count) FIVEWORDINLINE(0x2F3C, 0x0008, 1, 0x7000, 0xA82A);extern pascal CMError CMCheckColors(ComponentInstance CMSession, CMColorList myColors, long count, CMGamutResult result) FIVEWORDINLINE(0x2F3C, 0x000C, 2, 0x7000, 0xA82A);/* Optional CMM Component routines */extern pascal CMError CMMatchPixMap(ComponentInstance CMSession, PixMap *myPixMap, PixMapCallBackUPP progressProc, long refCon) FIVEWORDINLINE(0x2F3C, 0x000c, 3, 0x7000, 0xA82A);extern pascal CMError CMCheckPixMap(ComponentInstance CMSession, PixMap *myPixMap, PixMapCallBackUPP progressProc, BitMap *myBitMap, long refCon) FIVEWORDINLINE(0x2F3C, 0x0010, 4, 0x7000, 0xA82A);extern pascal CMError CMConcatenateProfiles(ComponentInstance CMSession, CMProfileHandle thru, CMProfileHandle dst, CMProfileHandle *newDst) FIVEWORDINLINE(0x2F3C, 0x000C, 5, 0x7000, 0xA82A);/* ProfileResponder Component routines */extern pascal CMError CMGetProfile(ProfileResponder myProfileResponder, CMProfileHandle aProfile, CMProfileHandle *returnedProfile) FIVEWORDINLINE(0x2F3C, 0x0008, 0, 0x7000, 0xA82A);extern pascal CMError CMSetProfile(ProfileResponder myProfileResponder, CMProfileHandle newProfile) FIVEWORDINLINE(0x2F3C, 0x0004, 1, 0x7000, 0xA82A);extern pascal CMError CMSetProfileDescription(ProfileResponder myProfileResponder, long DeviceData, CMProfileHandle hProfile) FIVEWORDINLINE(0x2F3C, 0x0008, 2, 0x7000, 0xA82A);extern pascal CMError CMGetIndexedProfile(ProfileResponder myProfileResponder, CMProfileSearchRecordHandle search, CMProfileHandle *returnProfile, long *index) FIVEWORDINLINE(0x2F3C, 0x000C, 3, 0x7000, 0xA82A);extern pascal CMError CMDeleteDeviceProfile(ProfileResponder myProfileResponder, CMProfileHandle deleteMe) FIVEWORDINLINE(0x2F3C, 0x0004, 4, 0x7000, 0xA82A);#ifdef __CFM68K__#pragma lib_export off#endif#if GENERATINGPOWERPC#pragma options align=reset#endif#ifdef __cplusplus}#endif#endif /* __CMCOMPONENT__ */