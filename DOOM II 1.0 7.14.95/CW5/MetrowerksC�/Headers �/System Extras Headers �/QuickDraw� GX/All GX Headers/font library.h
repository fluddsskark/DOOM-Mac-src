/*	File:		font library.h	Copyright:	© 1984-1994 by Apple Computer, Inc., all rights reserved.	WARNING	This file was auto generated by the interfacer tool. Modifications	must be made to the master file.*/#ifndef fontLibraryIncludes#define fontLibraryIncludes	#ifndef fontTypesIncludes#include "font types.h"/*	#include "math types.h"										*//*		#include <Types.h>										*//*			#include <ConditionalMacros.h>						*//*			#include <MixedMode.h>								*//*				#include <Traps.h>								*/	#endif	#ifndef graphicsTypesIncludes#include "graphics types.h"	#endif	#ifndef fontRoutinesIncludes#include "font routines.h"/*	#include "graphics linkage.h"								*/	#endif	#ifdef __cplusplusextern "C" {	#endif#define weightVariationTag 0x77676874#define widthVariationTag 0x77647468#define slantVariationTag 0x736c6e74#define opticalScaleVariationTag 0x6f70737a#define prefwghtweighting 0x00010000#define prefwdthweighting 0x00020000#define prefslntweighting 0x00010000#define prefcontweighting 0x00040000enum commonFonts {	firstCommonFont,	chicagoFont					= firstCommonFont,	courierFont,	genevaFont,	helveticaFont,	monacoFont,	newyorkFont,	symbolFont,	timesFont,	lastCommonFont				= timesFont};typedef long commonFont;enum matchingStyles {	noMatching					= 0,	useStyleMatching,	useVariationsMatching,	useTextFaceMatching			= 4};typedef long matchingStyle;extern gxFont GetCommonFont(commonFont font);extern void SetShapeCommonFont(gxShape target, commonFont font);extern void SetStyleCommonFont(gxStyle target, commonFont font);extern gxFont FindCNameFont(gxFontName meaning, const char name[]);extern gxFont FindPNameFont(gxFontName meaning, const unsigned char name[]);extern long FindFontCName(gxFont fontID, gxFontName meaning, char name[]);extern long FindFontPName(gxFont fontID, gxFontName meaning, unsigned char name[]);extern long FindStyleFontCName(gxStyle source, gxFontName meaning, char name[]);extern long FindStyleFontPName(gxStyle source, gxFontName meaning, unsigned char name[]);extern void SetStylePNamedFont(gxStyle target, const unsigned char name[]);extern void SetStyleCNamedFont(gxStyle target, const char *name);extern long CountFontFamilies(void);extern gxFont FindFontFamily(long index, gxFontPlatform platform, gxFontScript script, gxFontLanguage language, long nameLength, const unsigned char *name);extern long CountFontStyles(gxFont family);extern gxFont FindFontStyle(gxFont family, long index, gxFontPlatform platform, gxFontScript script, gxFontLanguage language, long nameLength, const unsigned char *name);extern void SetMatchingStyle(gxFont targetFamily, gxStyle theStyle, matchingStyle matchInfo);extern gxStyle ReturnMatchingStyle(gxFont targetFamily, gxStyle theStyle, matchingStyle matchInfo);	#ifdef __cplusplus}	#endif#endif