/*	File:		font menu library.h	Copyright:	© 1984-1994 by Apple Computer, Inc., all rights reserved.	WARNING	This file was auto generated by the interfacer tool. Modifications	must be made to the master file.*/	#ifndef fontMenuLibraryIncludes#define fontMenuLibraryIncludes	#ifndef __Menus__#include <Menus.h>/*	#include <Quickdraw.h>										*//*		#include <Types.h>										*//*			#include <ConditionalMacros.h>						*//*			#include <MixedMode.h>								*//*				#include <Traps.h>								*//*		#include <QuickdrawText.h>								*//*			#include <IntlResources.h>							*/	#endif	#ifndef fontTypesIncludes#include "font types.h"/*	#include "math types.h"										*/	#endif	#ifndef graphicsTypesIncludes#include "graphics types.h"	#endif	#ifndef layoutRoutinesIncludes#include "layout routines.h"/*	#include "layout types.h"									*//*	#include "graphics linkage.h"								*/	#endif	#ifndef fontRoutinesIncludes#include "font routines.h"	#endif	#ifdef __cplusplusextern "C" {	#endifenum fontMenuAttributes {	noInstancesFontMenu			= 1};typedef long fontMenuAttribute;typedef boolean (*fontFilterProc)(gxFont fontID);extern void SortMenu(MenuHandle menu);extern void DeleteMenuItems(MenuHandle menuH);extern long FontMenu(MenuHandle menu);extern long FontPlatformMenu(MenuHandle menu, gxFontPlatform platform, gxFontScript script, gxFontLanguage language);extern long FontFamilyMenu(MenuHandle menu);extern long FontFamilyPlatformMenu(MenuHandle menu, gxFontPlatform platform, gxFontScript script, gxFontLanguage language);extern MenuHandle FontStyleMenu(short menuID, gxFont family);extern short HierFontMenu(MenuHandle theMenu, short firstHierMenuID, fontFilterProc proc, fontMenuAttribute attr);extern gxFont DoHierFontMenuCommand(long menuResult, short hierFontMenuID, long *instanceIndex);extern boolean DoHierFontMenuCommandStyle(long menuResult, short hierFontMenuID, gxStyle aStyle, long matchInfo);extern short DoHierFontMenuCommandShape(long menuResult, short hierFontMenuID, gxShape aShape);extern long FontToQD(gxFont fontID, long *styleBits);extern long GetMenuRunFeatures(MenuHandle menu, gxFont fontID, gxRunFeature feature[]);extern void SetMenuRunFeatures(MenuHandle menu, gxFont fontID, long count, const gxRunFeature feature[]);extern void FontFeatureMenu(MenuHandle menu, gxFont fontID);extern void ToggleFeatureMenuItem(MenuHandle menuH, gxFont fontID, int item);extern void ToggleFeatureMenuFeature(MenuHandle menuH, gxFont fontID, gxRunFeature feature);extern void StyleFeatureMenu(MenuHandle menuH, const gxStyle style);extern long GetDefaultFontFeatures(gxFont fontID, gxRunFeature features[]);extern void SetShapeDefaultFeatures(gxShape dst, gxFont fontID);extern void SetStyleDefaultFeatures(gxStyle dst, gxFont fontID);	#ifdef __cplusplus}	#endif#endif