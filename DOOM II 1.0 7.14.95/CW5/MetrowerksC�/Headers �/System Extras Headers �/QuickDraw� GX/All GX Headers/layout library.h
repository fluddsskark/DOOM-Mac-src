/*	File:		layout library.h	Copyright:	© 1984-1994 by Apple Computer, Inc., all rights reserved.	WARNING	This file was auto generated by the interfacer tool. Modifications	must be made to the master file.*/#ifndef layoutLibraryIncludes#define layoutLibraryIncludes	#ifndef graphicsRoutinesIncludes#include "graphics routines.h"/*	#include "graphics types.h"									*//*		#include "math types.h"									*//*			#include <Types.h>									*//*				#include <ConditionalMacros.h>					*//*				#include <MixedMode.h>							*//*					#include <Traps.h>							*//*	#include "graphics errors.h"								*//*		#include "Types.h"										*//*	#include "font types.h"										*//*	#include "graphics linkage.h"								*/	#endif	#ifndef layoutTypesIncludes#include "layout types.h"	#endif	#ifdef __cplusplusextern "C" {	#endif#if defined(powerc) || defined (__powerc)#pragma options align=mac68k#endifstruct StyleRunOverrides {	gxPriorityJustificationOverride *priorityJustOverride;	gxGlyphJustificationOverride *glyphJustOverrides;	long						glyphJustOverridesCount;	gxGlyphSubstitution			*glyphSubstitutions;	long						glyphSubstitutionsCount;	gxKerningAdjustment			*kerningAdjustments;	long						kerningAdjustmentsCount;};#if defined(powerc) || defined(__powerc)#pragma options align=reset#endif#if defined(powerc) || defined (__powerc)#pragma options align=mac68k#endifstruct ParagraphRecord {	short						nLayouts;	Fixed						totalHeight;	gxShape						layouts[1];};#if defined(powerc) || defined(__powerc)#pragma options align=reset#endiftypedef struct ParagraphRecord **ParagraphRecordHandle;#if defined(powerc) || defined (__powerc)#pragma options align=mac68k#endifstruct RunFeatureTypeName {	gxRunFeatureType			featureType;	unsigned short				nSelectors;	unsigned short				selectorTableOffset;	short						nameIndex;};#if defined(powerc) || defined(__powerc)#pragma options align=reset#endif#if defined(powerc) || defined (__powerc)#pragma options align=mac68k#endifstruct RunFeatureSelectorName {	gxRunFeatureSelector		featureSelector;	short						nameIndex;};#if defined(powerc) || defined(__powerc)#pragma options align=reset#endif	#ifndef __cplusplustypedef struct StyleRunOverrides StyleRunOverrides;typedef struct ParagraphRecord ParagraphRecord;typedef struct RunFeatureTypeName RunFeatureTypeName;typedef struct RunFeatureSelectorName RunFeatureSelectorName;	#endifextern void InitializeRunControls(gxRunControls *runControls);extern void InitializeLayoutOptions(gxLayoutOptions *layoutOptions);extern void InitializeStyleRunOverrides(StyleRunOverrides *overrides);extern void SetDefaultPriorityJustOverride(gxPriorityJustificationOverride *override);extern void SetLayoutStyle(gxStyle s, char *gxFontName, Fixed textSize, gxTextAttribute attr, gxRunControls *runControls, gxRunFeature runFeatures[], long runFeaturesCount, StyleRunOverrides *overrides);extern gxStyle NewLayoutStyle(char *gxFontName, Fixed textSize, gxTextAttribute attr, gxRunControls *runControls, gxRunFeature runFeatures[], long runFeaturesCount, StyleRunOverrides *overrides);extern gxShape NewSingleLayout(char *text, char *gxFontName, Fixed textSize, gxLayoutOptions *options, gxPoint *position, gxTextAttribute attr, gxRunControls *runControls, gxRunFeature runFeatures[], long runFeaturesCount, StyleRunOverrides *overrides);extern ParagraphRecordHandle NewParagraph(char *text, gxStyle baseStyle, Fixed width, long justified, Fixed lineHeight, gxPoint *firstOrigin);extern ParagraphRecordHandle NewStyledParagraph(long textRunCount, const void *text[], const short textRunLengths[], long styleRunCount, const gxStyle styles[], const short styleRunLengths[], long levelRunCount, const short levels[], const short levelRunLengths[], long totalByteCount, const gxLayoutOptions *layoutOptions, Fixed lineHeight, const gxPoint *firstOrigin);extern void DisposeParagraph(ParagraphRecordHandle paraRec);extern gxShape GetLayoutBounds(gxShape layout);	#ifdef __cplusplus}	#endif#endif