// typeinfo standard header#ifndef _TYPEINFO_#define _TYPEINFO_#include <exception>#if __MWERKS__#pragma options align=mac68k#endif		// class badtypeidclass badtypeid : public xlogic {public:	badtypeid(const char * = 0, const char * = 0,		const char * = 0);	virtual ~badtypeid();protected:	virtual void do_raise();	};		// class typeinfoclass typeinfo {public:	virtual ~typeinfo();	_Bool operator==(const typeinfo&) const;	_Bool operator!=(const typeinfo& _Rop) const		{return (!(*this == _Rop)); }	_Bool before(const typeinfo&) const;	const char *name() const		{return (_Name); }private:	const char *_Name;	_Typedesc _Desc;	typeinfo(const typeinfo&);	typeinfo& operator=(const typeinfo&);	};#if __MWERKS__#pragma options align=reset#endif#endif/* * Copyright (c) 1994 by P.J. Plauger.  ALL RIGHTS RESERVED.  * Consult your license regarding permissions and restrictions. *//* Change log: *94June04 PlumHall baseline *94Oct07 Inserted MW changes. */