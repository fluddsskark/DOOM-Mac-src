Installing ToolServer---------------------(1)	Copy the "ToolServer 1.1.1" folder from the CD to your hard	drive. The ToolServer folder is inside the "Apple Development Products"	folder.	(2)	Open the "MPW 3.3.1" folder from the CD. The MPW folder is also	inside the "Apple Development Products" folder.	(3)	Copy the following files from the "Tools" folder inside the MPW	folder to the "Tools" folder inside the ToolServer folder on your	hard drive:		Commando, DeRez, Rez, GetFileName, GetListItem			Note: You may wish to copy additional tools.	(4)	Create a folder called "Interfaces" inside the ToolServer folder	on your hard drive.	(5)	Open the "Interfaces" folder in the MPW folder and copy the folder	"RIncludes" into the "Interfaces" folder created above.(6)	Delete the "MWStartup¥411" file from the ToolServer folder on	your hard drive.At this point, the ToolServer install is complete. The ToolServer folderon your hard drive should contain the following files:	Help Folder	Interfaces		RIncludes			AERegistry.r			BalloonTypes.r			Cmdo.r			CTBTypes.r			ImageCodec.r			InstallerTypes.r			MPWTypes.r			Pict.r			SIOW.h			siow.r			SysTypes.r			Types.r	MWShutDown	MWStartup	QuitTS	Scripts		File		Line	StartupTS	StartupTS.err	Tools		Commando		DeRez		GetFileName		GetListItem		Rez		RMetrowerks	ToolServer	ToolServer Documentation		ToolServer Reference		ToolServer Reference.idx	ToolServer.Log	UserStartupTSUsing ToolServer----------------You run ToolServer by choosing "Start ToolServer" from the "Tools"menu in the CodeWarrior environment. This will launch the ToolServerprogram and display a "ToolServer WorkSheet" window within CodeWarrior.ToolServer has a command line interface. You type commands intothe ToolServer Worksheet. To execute a command (or several commands)select the lines containing the command(s) and hit the "Enter" keyor "Command-Return". Just hitting "Return" creates a new line (justas with a normal text editing window).Alternatively, you can create a text file that contains ToolServercommands. Then you can execute all those commands by opening thattext file in CodeWarrior and choosing "Execute as a Script" fromthe "ToolServer" menu.Rez---Rez is a tool which compiles text representations of resource datainto actual resources.A typical Rez command line is the following:	Rez -o "HD:Projects:MyProgram.µ.rsrc" -a "HD:Projects:MyProgram.r"	In this command, -o "HD:Projects:MyProgram.µ.rsrc" specifies theoutput file for the Rez operation. The -a option means to appendor merge the resources into an existing file. Without the -a option,Rez will overwrite the output file. Finally, "HD:Projects:MyProgram.r"is the input file containing the text defining the resources.By convention, files containing Rez resource definitions have a .rextension.You will normally use Rez only for resources which have convenienttext representations. This includes all resources whose data isprimarily strings or numbers. Graphical resources, such as iconsand pictures, are best edited with visual tools.The above command line does not specify the files which definethe format of the resource types, such as Types.r.It is assumed that the necessary definition files are #include'dat the top of the MyProgram.r file. For example,#define	SystemSevenOrLater	1#include $$Shell("RIncludes") "Types.r"#include $$Shell("RIncludes") "SysTypes.r"inside MyProgram.r will include the proper files. ToolServer definesthe Shell variable "RIncludes" to be the full path name to thefolder containing the Rez interfacee files. See the file "StartupTS"in the ToolServer folder to see how it defines its Shell variables.Defining the symbol SystemSevenOrLater lets you use certain System 7specific resource formats.The file "Rez Script" contains a simple script which uses theGetFileName tools to prompt the user for the input and outputfiles for Rez (as opposed to having to specify the full pathnames as in the above example).DeRez-----DeRez is the inverse of Rez. DeRez decompiles resources into textrepresentations of the resource data.A typical DeRez command line is:	DeRez "HD:Projects:MyProgram.µ.rsrc" -only 'PPob' "PowerPlant.r" > "HD:Projects:MyDeRez.r"	This command DeRez's resources of type 'PPob' in the"HD:Projects:MyProgram.µ.rsrc" resource file. It uses the resourcedefinitions in PowerPlant.r to interpret the resource data andplaces the output text data in the file "HD:Projects:MyDeRez.r".If the output file does not exists, it is created. If the output filealready exists, it is overwritten.The -only 'PPob' option specifies that only 'PPob' resources in theinput file get DeRez'd. You can specify as many -only options andresource definition files as you want. For example,	DeRez "ResFile" -only 'vers' -only 'MENU' "Types.r" "SysTypes.r" > "MyDerezFile.r"If you don't include any -only parameters, then all resource types in theinput file are DeRez'd.