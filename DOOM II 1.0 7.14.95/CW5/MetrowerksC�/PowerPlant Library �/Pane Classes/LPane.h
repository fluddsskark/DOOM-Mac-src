// ===========================================================================//	LPane.h							©1993 Metrowerks Inc. All rights reserved.// ===========================================================================#pragma once#include <LAttachable.h>#ifndef __EVENTS__#include <Events.h>#endifclass	LView;class	LStream;struct	SDimension16	{	Int16	width;	Int16	height;};struct	SDimension32	{	Int32	width;	Int32	height;};typedef Point	SPoint16;struct	SPoint32	{	Int32	h;	Int32	v;};	struct	SMouseDownEvent	{	Point		wherePort;	Point		whereLocal;	EventRecord	macEvent;	Boolean		delaySelect;};struct PanelSpec {	Uint32	horizIndex;	Uint32	vertIndex;	Uint32	pageNumber;};struct PanePlace {	SDimension16	frameSize;	SPoint32		frameLocation;};#if defined(powerc) || defined (__powerc)#pragma options align=mac68k#endifstruct	SBooleanRect	{	Boolean	left;	Boolean	top;	Boolean	right;	Boolean	bottom;};struct SPaneInfo {	PaneIDT			paneID;	Int16			width;	Int16			height;	Boolean			visible;	Boolean			enabled;	SBooleanRect	bindings;	Int32			left;	Int32			top;	Int32			userCon;	LView*			superView;};#if defined(powerc) || defined(__powerc)#pragma options align=reset#endifconst Int16		min_QDCoord	= -32768;const Int16		max_QDCoord = 32767;#define		Default_SuperView		((LView*) -1)class LPane : public virtual LAttachable {	friend class LView;public:	enum { class_ID = 'pane' };	static LPane*	CreatePaneStream(LStream *inStream);						LPane();					LPane(const LPane &inOriginal);							LPane(const SPaneInfo &inPaneInfo);					LPane(LStream *inStream);		virtual			~LPane();	virtual void	FinishCreate();	PaneIDT			GetPaneID() const;	void			SetPaneID(PaneIDT inPaneID);	virtual LPane*	FindPaneByID(PaneIDT inPaneID);		static LView*	GetDefaultView();	static void		SetDefaultView(LView *inView);		virtual GrafPtr	GetMacPort() const;		virtual Int32	GetValue() const;	virtual void	SetValue(Int32 inValue);		virtual StringPtr	GetDescriptor(Str255 outDescriptor) const;	virtual void		SetDescriptor(ConstStr255Param inDescriptor);		virtual Int32	GetUserCon() const;	virtual void	SetUserCon(Int32 inUserCon);			// ¥ Frame Management		void			GetFrameSize(SDimension16 &outSize) const;	void			GetFrameLocation(SPoint32 &outLocation) const;		void			SetFrameBinding(const SBooleanRect &inFrameBinding);	void			GetFrameBinding(SBooleanRect &outFrameBinding);		virtual Boolean	CalcPortFrameRect(Rect& outRect) const;	virtual Boolean	CalcLocalFrameRect(Rect& outRect) const;		void			ResizeFrameTo(Int16 inWidth, Int16 inHeight,									Boolean inRefresh);	virtual void	ResizeFrameBy(Int16 inWidthDelta, Int16 inHeightDelta,									Boolean inRefresh);		virtual void	MoveBy(Int32 inHorizDelta, Int32 inVertDelta,									Boolean inRefresh);		void			PlaceInSuperFrameAt(Int32 inHorizOffset,									Int32 inVertOffset, Boolean inRefresh);	virtual void	PlaceInSuperImageAt(Int32 inHorizOffset,									Int32 inVertOffset, Boolean inRefresh);										virtual void	SavePlace(LStream *outPlace);	virtual void	RestorePlace(LStream *inPlace);		void			PutInside(LView *inView);	LView*			GetSuperView();			// ¥ Adapting to changes in SuperView	virtual void	AdaptToNewSurroundings();	virtual void	AdaptToSuperFrameSize(Int32 inSurrWidthDelta,									Int32 inSurrHeightDelta,									Boolean inRefresh);	virtual void	AdaptToSuperScroll(Int32 inHorizScroll,									Int32 inVertScroll);			// ¥ Mousing	virtual Boolean	PointIsInFrame(Int32 inHorizPort, Int32 inVertPort) const;	virtual Boolean	IsHitBy(Int32 inHorizPort, Int32 inVertPort);	virtual LPane*	FindSubPaneHitBy(Int32 inHorizPort, Int32 inVertPort);	virtual void	Click(SMouseDownEvent &inMouseDown);	virtual void	ClickSelf(const SMouseDownEvent &inMouseDown);	virtual void	EventMouseUp(const EventRecord &inMacEvent);	virtual void	UpdateClickCount(const SMouseDownEvent &inMouseDown);	virtual void	AdjustCursor(Point inPortPt,									const EventRecord &inMacEvent);	virtual void	AdjustCursorSelf(Point inPortPt,									const EventRecord &inMacEvent);		virtual Boolean	PointsAreClose(Point inFirstPt, Point inSecondPt);		virtual Boolean	ClickTimesAreClose(Uint32 inLastClickTime);							static LPane*	GetLastPaneClicked();				// ¥ Showing		Boolean			IsVisible() const;	virtual void	Show();	virtual void	Hide();			// ¥ Activating		Boolean			IsActive() const;	virtual void	Activate();	virtual void	Deactivate();			// ¥ Enabling		Boolean			IsEnabled() const;	virtual void	Enable();	virtual void	Disable();			// ¥ Drawing		virtual void	Refresh();	virtual void	InvalPortRect(const Rect *inRect);	virtual void	InvalPortRgn(RgnHandle inRgnH);	virtual void	ValidPortRect(const Rect *inRect);	virtual void	ValidPortRgn(RgnHandle inRgnH);	virtual RgnHandle	GetLocalUpdateRgn();		virtual void	UpdatePort();	virtual Boolean	FocusDraw();	virtual void	Draw(RgnHandle inSuperDrawRgnH);	virtual void	DrawSelf();				// ¥ Printing			virtual void	CountPanels(Uint32 &outHorizPanels,									Uint32 &outVertPanels);	virtual Boolean	ScrollToPanel(const PanelSpec &inPanel);	virtual void	PrintPanel(const PanelSpec &inPanel,									RgnHandle inSuperPrintRgnH);	virtual void	SuperPrintPanel(const PanelSpec &inSuperPanel,									RgnHandle inSuperPrintRgnH);	virtual void	PrintPanelSelf(const PanelSpec &inPanel);			// ¥ Coordinate Transformations		virtual void	PortToLocalPoint(Point &ioPoint) const;	virtual void	LocalToPortPoint(Point &ioPoint) const;		virtual void	GlobalToPortPoint(Point &ioPoint) const;	virtual void	PortToGlobalPoint(Point &ioPoint) const;		static Boolean	IsAreaInQDSpace(Int32 inLeft, Int32 inTop,									Int16 inWidth, Int16 inHeight);										static Int16	GetClickCount();									protected:	static LView	*sDefaultView;	static LPane	*sLastPaneClicked;	static Uint32	sWhenLastMouseUp;	static Uint32	sWhenLastMouseDown;	static Point	sWhereLastMouseDown;	static Int16	sClickCount;	PaneIDT			mPaneID;	SDimension16	mFrameSize;	SPoint32		mFrameLocation;	SBooleanRect	mFrameBinding;	Int32			mUserCon;	LView			*mSuperView;	ETriState		mVisible;	ETriState		mActive;	ETriState		mEnabled;		virtual void	FinishCreateSelf();		virtual void	ShowSelf();	virtual void	SuperShow();	virtual void	HideSelf();	virtual void	SuperHide();		virtual void	ActivateSelf();	virtual void	SuperActivate();	virtual void	DeactivateSelf();	virtual void	SuperDeactivate();	virtual void	EnableSelf();	virtual void	SuperEnable();	virtual void	DisableSelf();	virtual void	SuperDisable();	private:	void			InitPane(const SPaneInfo &inPaneInfo);};