// ===========================================================================//	LEditField.h					©1993 Metrowerks Inc. All rights reserved.// ===========================================================================#pragma once#include <LPane.h>#include <LCommander.h>#include <LPeriodical.h>#include <LUndoer.h>#include <UKeyFilters.h>#ifndef __TEXTEDIT__#include <TextEdit.h>#endiftypedef struct	SEditFieldUndo {	Handle	textH;	Int16	selStart;	Int16	selEnd;} SEditFieldUndo, **SEditFieldUndoH;class LEditField : public LPane,				   public LCommander,				   public LPeriodical,				   public LUndoer {public:	enum { class_ID = 'edit' };	static LEditField*	CreateEditFieldStream(LStream *inStream);						LEditField();						LEditField(const LEditField &inOriginal);						LEditField(const SPaneInfo &inPaneInfo,							Str255 inString, ResIDT inTextTraitsID,							Int16 inMaxChars, Boolean inHasBox,							Boolean inHasWordWrap, KeyFilterFunc inKeyFilter,							LCommander *inSuper);						LEditField(LStream *inStream);	virtual				~LEditField();		virtual Int32		GetValue() const;	virtual void		SetValue(Int32 inValue);		virtual StringPtr	GetDescriptor(Str255 outDescriptor) const;	virtual void		SetDescriptor(ConstStr255Param inDescriptor);		TEHandle			GetMacTEH();		virtual void		SetMaxChars(Int16 inMaxChars);	virtual void		SetTextTraitsID(ResIDT inTextTraitsID);	virtual void		UseWordWrap(Boolean inSetting);	virtual Boolean		ObeyCommand(CommandT inCommand, void *ioParam);	virtual void		FindCommandStatus(CommandT inCommand,							Boolean &outEnabled, Boolean &outUsesMark,							Char16 &outMark, Str255 outName);	virtual	void		SpendTime(const EventRecord &inMacEvent);		virtual void		SetKeyFilter(KeyFilterFunc inKeyFilter);	virtual Boolean		HandleKeyPress(const EventRecord& inKeyEvent);		virtual void		ResizeFrameBy(Int16 inWidthDelta, Int16 inHeightDelta,									Boolean inRefresh);		virtual void		MoveBy(Int32 inHorizDelta, Int32 inVertDelta,									Boolean inRefresh);	virtual Boolean		FocusDraw();	virtual void		SelectAll();	virtual void		UserChangedText();		virtual void	UndoAction(ActionIDT inActionID, void *inUndoData);	virtual void	FinalizeAction(ActionIDT inActionID, void *inUndoData);		virtual void	SavePlace(LStream *outPlace);	virtual void	RestorePlace(LStream *inPlace);				protected:	TEHandle			mTextEditH;	KeyFilterFunc		mKeyFilter;	Int16				mMaxChars;	ResIDT				mTextTraitsID;	Boolean				mHasBox;	Boolean				mHasWordWrap;	virtual void		DrawSelf();			virtual void		ClickSelf(const SMouseDownEvent &inMouseDown);	virtual void		AdjustCursorSelf(Point inPortPt,									const EventRecord &inMacEvent);		virtual void		HideSelf();	virtual void		BeTarget();	virtual void		DontBeTarget();		virtual void		AlignTextEditRects();		virtual Boolean		TooManyCharacters(Int16 inCharsToAdd);		virtual SEditFieldUndoH		SaveStateForUndo();	private:	void				InitEditField();};