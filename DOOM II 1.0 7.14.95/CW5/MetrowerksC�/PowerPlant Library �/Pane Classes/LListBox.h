// ===========================================================================//	LListBox.h						©1993 Metrowerks Inc. All rights reserved.// ===========================================================================#pragma once#include <LPane.h>#include <LCommander.h>#include <LBroadcaster.h>#ifndef __LISTS__#include <Lists.h>#endifclass	LFocusBox;#if defined(powerc) || defined (__powerc)#pragma options align=mac68k#endiftypedef struct {	Int8		hasHorizScroll;	Int8		hasVertScroll;	Int8		hasGrow;	Int8		hasFocusBox;	MessageT	doubleClickMessage;	Int16		textTraitsID;	Int16		LDEFid;	Int16		numberOfItems;} SListBoxInfo;#if defined(powerc) || defined(__powerc)#pragma options align=reset#endifclass LListBox : public LPane,				 public LCommander,				 public LBroadcaster {public:	enum { class_ID = 'lbox' };	static LListBox*	CreateListBoxStream(LStream *inStream);					LListBox();					LListBox(const LListBox &inOriginal);					LListBox(const SPaneInfo &inPaneInfo,						Boolean inHasHorizScroll, Boolean inHasVertScroll,						Boolean inHasGrow, Boolean inHasFocusBox,						MessageT inDoubleClickMessage, Int16 inTextTraitsID,						Int16 inLDEFid, LCommander *inSuper);					LListBox(LStream *inStream);	virtual			~LListBox();					ListHandle		GetMacListH() const;	LFocusBox*		GetFocusBox();		virtual Int32	GetValue() const;	virtual void	SetValue(Int32 inValue);		virtual StringPtr	GetDescriptor(Str255 outDescriptor) const;	virtual void		SetDescriptor(ConstStr255Param inDescriptor);		MessageT		GetDoubleClickMessage() const;	void			SetDoubleClickMessage(MessageT inMessage);		virtual Boolean	FocusDraw();	virtual Boolean	ObeyCommand(CommandT inCommand, void *ioParam = nil);	virtual Boolean	HandleKeyPress(const EventRecord& inKeyEvent);		virtual void	ResizeFrameBy(Int16 inWidthDelta, Int16 inHeightDelta,									Boolean inRefresh);		virtual void	MoveBy(Int32 inHorizDelta, Int32 inVertDelta,									Boolean inRefresh);										virtual void	SelectOneCell(Cell inCell);	virtual Boolean	GetLastSelectedCell(Cell &outCell);	virtual void	MakeCellVisible(Cell inCell);protected:	ListHandle		mMacListH;	MessageT		mDoubleClickMessage;	LFocusBox		*mFocusBox;	ResIDT			mTextTraitsID;	Boolean			mHasGrow;	virtual void	DrawSelf();		virtual void	ClickSelf(const SMouseDownEvent &inMouseDown);		virtual void	BeTarget();	virtual void	DontBeTarget();		virtual void	ActivateSelf();	virtual void	DeactivateSelf();		virtual void	DoNavigationKey(const EventRecord &inKeyEvent);	virtual void	DoTypeSelection(const EventRecord &inKeyEvent);	private:	void			InitListBox(Boolean inHasHorizScroll,						Boolean inHasVertScroll, Boolean inHasGrow,						Boolean inHasFocusBox, MessageT inDoubleClickMessage,						Int16 inTextTraitsID, Int16 inLDEFid);};