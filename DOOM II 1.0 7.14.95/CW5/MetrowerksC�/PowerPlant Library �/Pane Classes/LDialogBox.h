// ===========================================================================//	LDialogBox.h				 	©1993 Metrowerks Inc. All rights reserved.// ===========================================================================#pragma once#include <LWindow.h>#include <LListener.h>class	LStdButton;class	LDefaultOutline;class	LAction;class	LDialogBox : public LWindow,					 public LListener {public:	enum { class_ID = 'dlog' };	static LDialogBox*	CreateDialogBoxStream(LStream *inStream);					LDialogBox();					LDialogBox(SWindowInfo &inWindowInfo);					LDialogBox(ResIDT inWINDid, Uint32 inAttributes,								LCommander *inSuperCommander);					LDialogBox(LStream *inStream);	virtual			~LDialogBox();						virtual Boolean	HandleKeyPress(const EventRecord &inKeyEvent);	virtual void	ListenToMessage(MessageT inMessage, void *ioParam);		virtual void	SetDefaultButton(PaneIDT inButtonID);	virtual void	SetCancelButton(PaneIDT inButtonID);		virtual Boolean		ObeyCommand(CommandT inCommand, void *ioParam = nil);	virtual void		FindCommandStatus(CommandT inCommand,							Boolean &outEnabled, Boolean &outUsesMark,							Char16 &outMark, Str255 outName);protected:	PaneIDT			mDefaultButtonID;	PaneIDT			mCancelButtonID;	LDefaultOutline	*mDefaultOutline;	LAction			*mLastAction;		virtual void	FinishCreateSelf();};struct SDialogResponse {	LDialogBox	*dialogBox;	void		*messageParam;};