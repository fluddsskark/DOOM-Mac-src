// ===========================================================================//	LTextEdit.h						©1994 Metrowerks Inc. All rights reserved.// ===========================================================================#pragma once#include <LView.h>#include <LCommander.h>#include <LPeriodical.h>#include <LUndoer.h>#ifndef __TEXTEDIT__#include <TextEdit.h>#endifenum {	textAttr_MultiStyle		= 0x8000,	textAttr_Editable		= 0x4000,	textAttr_Selectable		= 0x2000,	textAttr_WordWrap		= 0x1000};typedef struct	STextEditUndo {	Handle	textH;	Int16	selStart;	Int16	selEnd;} STextEditUndo, **STextEditUndoH;class LTextEdit : public LView,				  public LCommander,				  public LPeriodical,				  public LUndoer {public:	enum { class_ID = 'text' };	static LTextEdit*	CreateTextEditStream(LStream *inStream);						LTextEdit();						LTextEdit(const SPaneInfo &inPaneInfo,								const SViewInfo &inViewInfo,								Uint16 inTextAttributes,								ResIDT inTextTraitsID);						LTextEdit(LStream *inStream);	virtual				~LTextEdit();		virtual void		SetTextHandle(Handle inTextH);	virtual void		SetTextPtr(Ptr inTextP, Int32 inTextLen);	virtual Handle		GetTextHandle();	TEHandle			GetMacTEH();		virtual void		SetTextTraitsID(ResIDT inTextTraitsID);	Boolean				HasAttribute(Uint16 inAttribute);	virtual Boolean		ObeyCommand(CommandT inCommand, void *ioParam);	virtual void		FindCommandStatus(CommandT inCommand,							Boolean &outEnabled, Boolean &outUsesMark,							Char16 &outMark, Str255 outName);	virtual	void		SpendTime(const EventRecord &inMacEvent);		virtual Boolean		HandleKeyPress(const EventRecord& inKeyEvent);		virtual void		ResizeFrameBy(Int16 inWidthDelta, Int16 inHeightDelta,									Boolean inRefresh);		virtual void		MoveBy(Int32 inHorizDelta, Int32 inVertDelta,									Boolean inRefresh);	virtual void		ScrollImageBy(Int32 inLeftDelta, Int32 inTopDelta,									Boolean inRefresh);	virtual Boolean		FocusDraw();	virtual void		SelectAll();	virtual void		UserChangedText();		virtual void		UndoAction(ActionIDT inActionID, void *inUndoData);	virtual void		FinalizeAction(ActionIDT inActionID, void *inUndoData);		virtual void		SavePlace(LStream *outPlace);	virtual void		RestorePlace(LStream *inPlace);				protected:	TEHandle			mTextEditH;	ResIDT				mTextTraitsID;	Uint16				mTextAttributes;	virtual void		DrawSelf();			virtual void		ClickSelf(const SMouseDownEvent &inMouseDown);	virtual void		AdjustCursorSelf(Point inPortPt,									const EventRecord &inMacEvent);		virtual void		BeTarget();	virtual void		DontBeTarget();		virtual void		AlignTextEditRects();	virtual void		AdjustImageToText();		virtual STextEditUndoH		SaveStateForUndo();	private:	void				InitTextEdit(ResIDT inTextTraitsID);};