// ===========================================================================//	UAttachments.h					©1994 Metrowerks Inc. All rights reserved.// ===========================================================================#pragma once#include <LAttachment.h>#include <LCommander.h>#include <LPane.h>class	LStream;class	LView;// ===========================================================================// ¥ LCommanderPane											  LCommanderPane ¥// ===========================================================================class	LCommanderPane : public LCommander,						 public LPane {public:	enum { class_ID = 'cmpn' };	static LCommanderPane*	CreateCommanderPaneStream(LStream *inStream);			LCommanderPane(SPaneInfo &inPaneInfo, LCommander *inSuper);			LCommanderPane(LStream *inStream);};// ===========================================================================// ¥ LBeepAttachment										 LBeepAttachment ¥// ===========================================================================class	LBeepAttachment : public LAttachment {public:			LBeepAttachment(MessageT inMessage = msg_AnyMessage,							Boolean inExecuteHost = true);protected:	virtual void	ExecuteSelf(MessageT inMessage, void *ioParam);};// ===========================================================================// ¥ LEraseAttachment										LEraseAttachment ¥// ===========================================================================class	LEraseAttachment : public LAttachment {public:			LEraseAttachment(Boolean inExecuteHost = true);protected:	virtual void	ExecuteSelf(MessageT inMessage, void *ioParam);};// ===========================================================================// ¥ LBorderAttachment									   LBorderAttachment ¥// ===========================================================================class	LBorderAttachment : public LAttachment {public:			LBorderAttachment(PenState *inPenState,					RGBColor *inForeColor = nil, RGBColor *inBackColor = nil,					Boolean inExecuteHost = true);protected:	PenState		mPenState;	RGBColor		mForeColor;	RGBColor		mBackColor;	virtual void	ExecuteSelf(MessageT inMessage, void *ioParam);};// ===========================================================================// ¥ LPaintAttachment										LPaintAttachment ¥// ===========================================================================class	LPaintAttachment : public LAttachment {public:			LPaintAttachment(PenState *inPenState,					RGBColor *inForeColor = nil, RGBColor *inBackColor = nil,					Boolean inExecuteHost = true);protected:	PenState		mPenState;	RGBColor		mForeColor;	RGBColor		mBackColor;	virtual void	ExecuteSelf(MessageT inMessage, void *ioParam);};// ===========================================================================// ¥ LCmdEnablerAttachment							   LCmdEnablerAttachment ¥// ===========================================================================class	LCmdEnablerAttachment : public LAttachment {public:			LCmdEnablerAttachment(CommandT inCmdToEnable);protected:	CommandT	mCmdToEnable;	virtual void	ExecuteSelf(MessageT inMessage, void *ioParam);};// ===========================================================================// ¥ LKeyScrollAttachment								LKeyScrollAttachment ¥// ===========================================================================class	LKeyScrollAttachment : public LAttachment {public:			LKeyScrollAttachment(LView *inViewToScroll);protected:	LView		*mViewToScroll;		virtual void	ExecuteSelf(MessageT inMessage, void *ioParam);};	