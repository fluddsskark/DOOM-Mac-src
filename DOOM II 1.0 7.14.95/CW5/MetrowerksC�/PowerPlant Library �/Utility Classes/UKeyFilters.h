// ===========================================================================//	UKeyFilters.h					©1993 Metrowerks Inc. All rights reserved.// ===========================================================================#pragma once#include <PP_Prefix.h>#ifndef __EVENTS__#include <Events.h>#endifenum	EKeyStatus {	keyStatus_Input,			// Input character	keyStatus_TEDelete,			// TextEdit Delete key	keyStatus_TECursor,			// TextEdit Cursor movement key	keyStatus_ExtraEdit,		// Edit key not supported by TE	keyStatus_Ignore,			// Do nothing with the keystroke	keyStatus_Reject,			// Invalid keystroke	keyStatus_PassUp			// Pass keystroke to next handler};enum EKeyFilter {	keyFilter_None = 0,	keyFilter_Integer = 1,	keyFilter_AlphaNumeric = 2,	keyFilter_PrintingChar = 3};typedef EKeyStatus	(*KeyFilterFunc)(const EventRecord&);class UKeyFilters {public:	static EKeyStatus	IntegerField(const EventRecord	&inKeyEvent);	static EKeyStatus	AlphaNumericField(const EventRecord	&inKeyEvent);	static EKeyStatus	PrintingCharField(const EventRecord	&inKeyEvent);		static Boolean		IsTEDeleteKey(Char16 inKey);	static Boolean		IsTECursorKey(Char16 inKey);	static Boolean		IsExtraEditKey(Char16 inKey);		static Boolean		IsNavigationKey(Char16 inKey);	static Boolean		IsActionKey(Char16 inKey);		static Boolean		IsNonprintingChar(Char16 inChar);	static Boolean		IsPrintingChar(Char16 inChar);	static Boolean		IsNumberChar(Char16 inChar);	static Boolean		IsLetterChar(Char16 inChar);		static Boolean		IsCmdPeriod(const EventRecord &inKeyEvent);};