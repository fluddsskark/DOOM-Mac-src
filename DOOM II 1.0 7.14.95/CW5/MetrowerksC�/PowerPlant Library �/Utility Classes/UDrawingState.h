// ===========================================================================//	UDrawingState.h					©1993 Metrowerks Inc. All rights reserved.// ===========================================================================#pragma once#include <PP_Prefix.h>#ifndef __QUICKDRAW__#include <QuickDraw.h>#endifclass	UQDGlobals {public:	static void			InitializeToolbox(QDGlobals *inQDGlobals);	static QDGlobals*	GetQDGlobals();	static void			SetQDGlobals(QDGlobals *inQDGlobals);	static GrafPtr		GetCurrentPort();private:	static QDGlobals	*sQDGlobals;};class	StColorState {public:				StColorState();				~StColorState();					void		Save();	void		Restore();		static void	Normalize();private:	RGBColor	mForegroundColor;	RGBColor	mBackgroundColor;};class	StColorPenState {public:				StColorPenState();				~StColorPenState();					void		Save();	void		Restore();					static void	Normalize();private:	StColorState	mColorState;	PenState		mPenState;};class	StTextState {public:				StTextState();				~StTextState();					void		Save();	void		Restore();					static void	Normalize();private:	Int16		mFontNumber;	Int16		mSize;	Int16		mStyle;	Int16		mMode;};class	StClipRgnState {public:				StClipRgnState();				StClipRgnState(const Rect &inClipRect);				~StClipRgnState();					void		Save();	void		Restore();					static void	Normalize();	private:	RgnHandle	mClipRgn;};class	StPortOriginState {public:				StPortOriginState(GrafPtr inGrafPtr);				~StPortOriginState();					void		Save(GrafPtr inGrafPtr);	void		Restore();					static void	Normalize();	private:	GrafPtr		mGrafPtr;	Point		mOrigin;};class	StColorPortState {public:				StColorPortState(GrafPtr inGrafPtr);				~StColorPortState();					void		Save(GrafPtr inGrafPtr);	void		Restore();					static void	Normalize();	private:	StPortOriginState	mPortOriginState;	StColorPenState		mColorPenState;	StTextState			mTextState;	StClipRgnState		mClipRgnState;};