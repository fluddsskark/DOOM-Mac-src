// ===========================================================================//	LAttachment.cp					©1994 Metrowerks Inc. All rights reserved.// ===========================================================================////	An Attachment executes in response to a message number and an optional//	parameter.////	Usually, an Attachment is associated with a host Attachable object as a//	means of altering the runtime behavior its host.////	In most cases, subclasses of LAttachment only need to override the//	ExecuteSelf() function and have a constructor.#include <LAttachment.h>#include <LAttachable.h>// ---------------------------------------------------------------------------//		¥ LAttachment// ---------------------------------------------------------------------------//	ConstructorLAttachment::LAttachment(	MessageT	inMessage,	Boolean		inExecuteHost){	mMessage = inMessage;	mExecuteHost = inExecuteHost;}// ---------------------------------------------------------------------------//		¥ ~LAttachment// ---------------------------------------------------------------------------//	DestructorLAttachment::~LAttachment(){	if (mOwnerHost != nil) {		mOwnerHost->RemoveAttachment(this);	}}// ---------------------------------------------------------------------------//		¥ GetMessage// ---------------------------------------------------------------------------//	Return the message for which an Attachment is executedMessageTLAttachment::GetMessage() const{	return mMessage;}// ---------------------------------------------------------------------------//		¥ SetMessage// ---------------------------------------------------------------------------//	Specify the message for which an Attachment is executedvoidLAttachment::SetMessage(	MessageT	inMessage){	mMessage = inMessage;}// ---------------------------------------------------------------------------//		¥ GetExecuteHost// ---------------------------------------------------------------------------//	Return whether the host action should execute (after executing all//	Attachments)BooleanLAttachment::GetExecuteHost() const{	return mExecuteHost;}// ---------------------------------------------------------------------------//		¥ SetExecuteHost// ---------------------------------------------------------------------------//	Specify whether the host action should execute (after executing all//	Attachments)voidLAttachment::SetExecuteHost(	Boolean	inExecuteHost){	mExecuteHost = inExecuteHost;}// ---------------------------------------------------------------------------//		¥ SetOwnerHost// ---------------------------------------------------------------------------//	Specify the host Attachable object that owns an Attachment.////	An Attachment is automatically deleted when its owner host is deleted.//	The owner host may be nil.voidLAttachment::SetOwnerHost(	LAttachable	*inHost){	mOwnerHost = inHost;}// ---------------------------------------------------------------------------//		¥ GetOwnerHost// ---------------------------------------------------------------------------//	Return the host Attachable object that owns an AttachmentLAttachable*LAttachment::GetOwnerHost() const{	return mOwnerHost;}// ---------------------------------------------------------------------------//		¥ Execute// ---------------------------------------------------------------------------//	Execute an Attachment and return whether or not to execute the host//	action (after executing all Attachments)BooleanLAttachment::Execute(	MessageT	inMessage,	void		*ioParam){	Boolean	executeHost = true;		if ((inMessage == mMessage) || (mMessage == msg_AnyMessage)) {		ExecuteSelf(inMessage, ioParam);		executeHost = mExecuteHost;	}		return executeHost;}// ---------------------------------------------------------------------------//		¥ ExecuteSelf// ---------------------------------------------------------------------------//	Perform the action of an Attachment////	Override this function to do something when the Attachment is executed.//	You can set mExecuteHost in this function if whether or not to execute//	the host action depends on the current runtime conditions.////	This function is called only when inMessage matches mMessage (or if//	mMessage is msg_AnyMessage). The data pointed to by ioParam depends//	on the message.voidLAttachment::ExecuteSelf(	MessageT	inMessage,	void		*ioParam){}