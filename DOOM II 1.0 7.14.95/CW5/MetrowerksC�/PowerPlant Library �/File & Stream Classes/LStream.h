// ===========================================================================//	LStream.h						©1993 Metrowerks Inc. All rights reserved.// ===========================================================================#pragma once#include <PP_Prefix.h>#ifdef qNeoAccess#include "CNeoStream.h"const OSType	kNeoFileStreamType	= 'PPst';#endifenum EStreamFrom {	streamFrom_Start = 1,	streamFrom_End,	streamFrom_Marker};class	LStream#ifdef qNeoAccess	: public CNeoStream#endif{public:					LStream();	virtual			~LStream();		virtual void	SetMarker(Int32 inOffset, EStreamFrom inFromWhere);	virtual Int32	GetMarker() const;		virtual void	SetLength(Int32 inLength);	virtual Int32	GetLength() const;		virtual Int32	WriteData(const void *inBuffer, Int32 inByteCount);	virtual Int32	ReadData(void *outBuffer, Int32 inByteCount);	Int32			PeekData(void *outButter, Int32 inByteCount);		Int32			WritePtr(Ptr inPtr);	Int32			ReadPtr(Ptr &outPtr);		Int32			WriteHandle(Handle inHandle);	Int32			ReadHandle(Handle &outHandle);		Int32			WritePString(ConstStr255Param inString);	Int32			ReadPString(Str255 outString);	#ifdef qNeoAccess	virtual OSType	getStreamType(void) const;	virtual void	readChunk(void *aBuffer, const long aLength, const NeoTag aTag = kNeoNoTag);	virtual void	writeChunk(const void *aBuffer, const long aLength, const NeoTag aTag = kNeoNoTag);#endif	protected:#ifndef qNeoAccess	Int32			mMarker;	Int32			mLength;#endif};