// ===========================================================================//	UAppleEventsMgr.h				©1993 Metrowerks Inc. All rights reserved.// ===========================================================================#pragma once#include <PP_Prefix.h>#ifndef __APPLEEVENTS__#include <AppleEvents.h>#endifclass UAppleEventsMgr {public:	static void		Initialize();	static void		InstallAEHandlers(AEEventHandlerUPP inHandler);	static void		CheckForMissedParams(const AppleEvent& inAppleEvent);	static void		MakeAppleEvent(AEEventClass inEventClass,								   AEEventID inEventID,								   AppleEvent& outAppleEvent);	static void		SendAppleEvent(AppleEvent& inAppleEvent,								   Boolean inExecute = true);								   	static Boolean	CompareDescriptors(const AEDesc &inLeftDesc,									DescType inComparisonOperator,									const AEDesc &inRightDesc);										static Boolean	CompareAsNumbers(const AEDesc &inLeftDesc,									DescType inComparisonOperator,									const AEDesc &inRightDesc);										static Boolean	CompareAsStrings(const AEDesc &inLeftDesc,									DescType inComparisonOperator,									const AEDesc &inRightDesc);							   private:	static AEAddressDesc	sSelfTargetAddr;	static Boolean			sDontExecuteWorks;	static void		MakeSelfTargetAddr(AEAddressDesc& outSelfTargetAddr);};class	StAEDescriptor {public:	AEDesc	mDesc;			//	These operators sometimes let you appear to pass			//	the StAEDescriptor object rather than having to pass the			//	object.mDesc.			operator	AEDesc*() { return &mDesc; }			operator	AEDesc&() { return mDesc; }				StAEDescriptor();			StAEDescriptor(DescType inType, const void *inData, Int32 inSize);			StAEDescriptor(Boolean inValue);			StAEDescriptor(Int16 inValue);			StAEDescriptor(Int32 inValue);			StAEDescriptor(OSType inValue);			StAEDescriptor(const StringPtr inString);			~StAEDescriptor();				void	GetParamDesc(const AppleEvent& inAppleEvent, AEKeyword inKeyword,							DescType inDesiredType);	void	GetOptionalParamDesc(const AppleEvent& inAppleEvent,							AEKeyword inKeyword, DescType inDesiredType);};// === AppleEvent Numbers ===										// Required Suiteconst long	ae_OpenApp			= 1001;const long	ae_OpenDoc			= 1002;const long	ae_PrintDoc			= 1003;const long	ae_Quit				= 1004;										// Core Suiteconst long	ae_Clone			= 2001;const long	ae_Close			= 2002;const long	ae_CountElements	= 2003;const long	ae_CreateElement	= 2004;const long	ae_Delete			= 2005;const long	ae_DoObjectsExist	= 2006;const long	ae_GetClassInfo		= 2007;const long	ae_GetData			= 2008;const long	ae_GetDataSize		= 2009;const long	ae_GetEventInfo		= 2010;const long	ae_Move				= 2011;const long	ae_Open				= 1002;		// Same as ae_OpenDocconst long	ae_Print			= 1003;		// Same as ae_PrintDocconst long	ae_Save				= 2012;const long	ae_SetData			= 2013;										// Miscellaneous Standardsconst long	ae_ApplicationDied	= 3001;const long	ae_BeginTransaction	= 3002;const long	ae_Copy				= 3003;const long	ae_CreatePublisher	= 3004;const long	ae_Cut				= 3005;const long	ae_DoScript			= 3006;const long	ae_EditGraphic		= 3007;const long	ae_EndTransaction	= 3008;const long	ae_ImageGraphic		= 3009;const long	ae_IsUniform		= 3010;const long	ae_MakeObjVisible	= 3011;const long	ae_Paste			= 3012;const long	ae_Redo				= 3013;const long	ae_Revert			= 3014;const long	ae_TransactionTerm	= 3015;const long	ae_Undo				= 3016;const long	ae_Select			= 3017;