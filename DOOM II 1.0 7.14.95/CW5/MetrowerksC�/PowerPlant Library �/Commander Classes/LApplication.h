// ===========================================================================//	LApplication.h					й1993 Metrowerks Inc. All rights reserved.// ===========================================================================#pragma once#include <LCommander.h>#include <LModelObject.h>#ifndef __AEREGISTRY__#include <AERegistry.h>#endifenum	EProgramState {	programState_StartingUp,	programState_ProcessingEvents,	programState_Quitting};class	LApplication :	public LCommander,					 	public LModelObject {public:					LApplication();	virtual			~LApplication();	EProgramState	GetState();	void			SetSleepTime(const Int32 inSleepTime);		virtual void	Run();		virtual void	ProcessNextEvent();	virtual void	DispatchEvent(const EventRecord &inMacEvent);	virtual void	UseIdleTime(const EventRecord &inMacEvent);		virtual void	ShowAboutBox();	virtual Boolean	ObeyCommand(CommandT inCommand, void* ioParam);	virtual void	FindCommandStatus(CommandT inCommand,							Boolean &outEnabled, Boolean &outUsesMark,							Char16 &outMark, Str255 outName);	virtual void	UpdateMenus();			// ее Actions		virtual void	SendAEQuit();	virtual void	DoQuit(Int32 inSaveOption = kAEAsk);			// ее Apple Events			// е Handle AppleEvents				virtual void			HandleAppleEvent(									const AppleEvent	&inAppleEvent,									AppleEvent			&outAEReply,									AEDesc				&outResult,									Int32				inAENumber);	virtual Int32			CountSubModels(DescType inModelID) const;											virtual void			GetSubModelByPosition(									DescType		inModelID,									Int32			inPosition,									AEDesc			&outToken) const;										virtual void			GetSubModelByName(									DescType		inModelID,									Str255			inName,									AEDesc			&outToken) const;										virtual Int32			GetPositionOfSubModel(									DescType			inModelID,									const LModelObject	*inSubModel) const;protected:	EProgramState	mState;	long			mSleepTime;	RgnHandle		mMouseRgnH;		virtual void	StartUp();			virtual void	EventMouseDown	(const EventRecord &inMacEvent);	virtual void	EventMouseUp	(const EventRecord &inMacEvent);	virtual void	EventKeyDown	(const EventRecord &inMacEvent);	virtual void	EventAutoKey	(const EventRecord &inMacEvent);	virtual void	EventKeyUp		(const EventRecord &inMacEvent);	virtual void	EventDisk		(const EventRecord &inMacEvent);	virtual void	EventUpdate		(const EventRecord &inMacEvent);	virtual void	EventActivate	(const EventRecord &inMacEvent);	virtual void	EventOS			(const EventRecord &inMacEvent);	virtual void	EventHighLevel	(const EventRecord &inMacEvent);		virtual void	ClickMenuBar	(const EventRecord &inMacEvent);		virtual void	EventSuspend	(const EventRecord &inMacEvent);	virtual void	EventResume		(const EventRecord &inMacEvent);		virtual void	AdjustCursor	(const EventRecord &inMacEvent);		virtual void	MakeSelfSpecifier(									AEDesc		&inSuperSpecifier,									AEDesc		&outSelfSpecifier) const;};