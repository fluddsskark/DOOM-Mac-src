//	===========================================================================//	LSelection.h					©1994 Metrowerks Inc. All rights reserved.//	===========================================================================#pragma	once#include	<LModelProperty.h>#include	<LManipulator.h>#include	<LTubeableItem.h>#include	<LList.h>#include	<Drag.h>class	LSelectableItem;class	LDataPipe;class	LSelection			:	public	LModelProperty			,	public	LManipulator			,	public	LTubeableItem{public:				//	Maintenance						LSelection(LModelObject *inSuperModel);	virtual				~LSelection(void);protected:	virtual void		Release(void);public:	virtual void		FixSelection(void);					//	Linkage (call these)	virtual void		Activate(void);	virtual void		Deactivate(void);	virtual void		Idle(void);				//	New features	virtual void		SelectSimple(LSelectableItem *inItem);	virtual void		SelectContinuous(LSelectableItem *inItem);	virtual void		SelectDiscontinuous(LSelectableItem *inItem);	virtual void		RecordPresentSelection(void);					//	Visual	virtual void		Draw(void);	virtual void		DrawContent(void);	//	seldom used.				//	Implementation	virtual void		DrawSelected(void);	virtual void		DrawLatent(void);	virtual void		UnDrawSelected(void);	virtual void		UnDrawLatent(void);	virtual	Boolean		IsActive(void);					//	Implementation -- manipulator	virtual ManipT		ItemType(void) {return kSelection;}	virtual Boolean		EquivalentTo(const LSelectableItem *inItem);	virtual	Boolean		IndependentFrom(const LSelectableItem *inItem);	virtual Boolean		PointInRepresentation(Point inWhere);	virtual void		DrawSelf(void);	virtual void		UnDrawSelf(void);				//	More manipulator support	virtual void		DragStart(Point inStart);	virtual void		DragStop(Point inEnd);	virtual void		DrawDragFeedback(Point inWhere);	virtual RgnHandle	FindDragOutline(Point inOrigin);	virtual RgnHandle	MakeRegion(Point inOrigin);				//	Data tubing implementation:	virtual void		AddFlavorTypesTo(LDataTube *inTube);	virtual Boolean		SendFlavorTo(FlavorType inFlavor, LDataTube *inTube);	virtual FlavorType	PickFlavorFrom(const LDataTube *inTube);	virtual void		ReceiveDataFrom(LDataTube *inTube);				//	Query	virtual	Boolean		IsSubstantive(void);	virtual LSelectableItem *	ListEquivalentItem(const LSelectableItem *inItem);	virtual LSelectableItem *	ListDependentItem(const LSelectableItem *inItem);				//	AEOM support	virtual Boolean		IsLazy(void)  const {return false;};	virtual void		GetAEProperty(									DescType		inProperty,									const AEDesc	&inRequestedType,									AEDesc			&outPropertyDesc) const;	virtual void		SetAEProperty(									DescType		inProperty,									const AEDesc	&inValue,									AEDesc			&outAEReply);	virtual	void		GetImportantAEProperties(AERecord &outKeyDescList);	virtual	void		GetContentAEKinds(AEDesc &outKindList);	virtual void		HandleGetData(									const AppleEvent	&inAppleEvent,									AEDesc				&outResult,									Int32				inAENumber);	virtual void		HandleSetData(									const AppleEvent	&inAppleEvent,									AppleEvent			&outAEReply);	virtual void		GetAEValue(									const AEDesc	&inRequestedType,									AEDesc			&outPropertyDesc) const;	virtual void		SetAEValue(									const AEDesc	&inValue,									AEDesc			&outAEReply);	virtual void		HandleDelete(									AppleEvent			&outAEReply,									AEDesc				&outResult);//	WARNING!	All of the following will become hidden or entirely go away.	virtual void		ListClear(void);	virtual Int32		ListCount(void);	virtual LSelectableItem *	ListNthItem(Int32 inIndex);protected:	Boolean				mActive;	RgnHandle			mDragOutline;	Boolean				mShowAllSelections;protected:	virtual Boolean		ListContains(const LSelectableItem *inItem);	virtual void		ListAddItem(LSelectableItem *inItem);	virtual void		ListRemoveItem(LSelectableItem *inItem);	LList				mItems;};