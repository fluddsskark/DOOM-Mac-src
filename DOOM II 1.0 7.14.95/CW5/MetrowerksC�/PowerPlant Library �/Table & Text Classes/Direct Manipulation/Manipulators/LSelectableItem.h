//	===========================================================================//	LSelectableItem.h					©1994 Metrowerks Inc. All rights reserved.//	===========================================================================#pragma	once#include	<LManipulator.h>#include	<LCoreAEOM.h>#include	<LTubeableItem.h>#include	<Drag.h>class	LDataTube;class	LSelectableItem			:	public	LManipulator			,	public	LCoreAEOM			,	public	LTubeableItem{private:						LSelectableItem();	//	Parameters requiredpublic:				//	Maintenance						LSelectableItem(LModelObject *inSuperModel, DescType inKind);	virtual				~LSelectableItem();protected:	virtual void		Release(void);public:	virtual ManipT		ItemType(void) {return kSelectableItem;};				//	Query (override)	virtual Boolean		EquivalentTo(const LSelectableItem *inItem);	virtual	Boolean		IndependentFrom(const LSelectableItem *inItem);				//	Visual (override)	virtual void		DrawSelfSelected(void);	virtual void		UnDrawSelfSelected(void);	virtual void		DrawSelfLatent(void);	virtual void		UnDrawSelfLatent(void);	virtual void		DrawSelfReceiver(void);	virtual void		UnDrawSelfReceiver(void);	virtual void		DrawSelfReceiverTick(void);						//	Data tubing:	virtual void		AddFlavorTypesTo(LDataTube *inTube);	virtual Boolean		SendFlavorTo(FlavorType inFlavor, LDataTube *inTube);protected:	static	Int32		sReceiverTicker;	static	Boolean		sReceiverOn;};