//	===========================================================================//	LManipulator.h					©1994 Metrowerks Inc. All rights reserved.//	===========================================================================#pragma	once#include	<LSharedObject.h>//	The following indicate object w/ similar properties but the object types//	shouldn't be considered subclasses of one another.//	C++ RTTI would be a better solution.typedef enum {	kManipulator,	kSelectableItem,	kSelection} ManipT;class	LManipulator			:	public LSharedObject{public:				//	Maintenance						LManipulator();	virtual				~LManipulator();	virtual ManipT		ItemType(void) {return kManipulator;}				//	Query (override)	virtual Boolean		PointInRepresentation(Point inWhere);					//	Visual (override)	virtual void		DrawSelf(void);	virtual void		UnDrawSelf(void);					//	Manipulation behavior (likely override)	virtual	void		DragStart(Point inStart);	virtual void		DragMove(Point inOld, Point inNew);	virtual void		DragStop(Point inEnd);	virtual void		DrawDragFeedback(Point inWhere);	virtual void		UnDrawDragFeedback(Point inWhere);};#ifndef		__LOWMEM__#include	<LowMem.h>#endif#define PrimeHiliteMode_()  ( LMSetHiliteMode(LMGetHiliteMode() & !(1 << hiliteBit)) )