//	===========================================================================//	LSelectHandlerView.h					©1994 Metrowerks Inc. All rights reserved.//	===========================================================================#pragma once#include	<LView.h>#include	<LPeriodical.h>#include	<LMiscAEOM.h>#include	<LSemanticUndoer.h>#include	<LListener.h>class	LSelectionEventHandler;class	LSelection;class	LAESemanticAction;class	LEventHandler;class	LSelectableItem;class	LSelection;class	LManipulator;class	LTargeter;class	LSelectHandlerView			:	public LView			,	public LPeriodical			,	public LMiscAEOM			,	public LSemanticUndoer{public:				//	Maintenance						LSelectHandlerView();						LSelectHandlerView(LModelObject *inSuperModel, DescType inModelKind);						LSelectHandlerView(LStream *inStream);	virtual				~LSelectHandlerView();	virtual void		SetImageLocation(const SPoint32 &inLocation);	virtual void		SetFocusBox(LTargeter *inFocusBox);public:				//	Query	virtual	LSelection *	GetSelection(void);	virtual LEventHandler *	GetEventHandler(void);					//	Called by mEventHandler (override)	virtual void				NoteOverNewThing(LManipulator *inThing);	virtual	LManipulator *		OverManipulator(Point inWhere);	virtual	LSelectableItem *	OverItem(Point inWhere);	virtual	LSelection *		OverSelection(Point inWhere);				//	Clipboard actions (override as necessary)	virtual void		HandleCut(AppleEvent &outAEReply);	virtual void		HandleCopy(AppleEvent &outAEReply);	virtual void		HandlePaste(AppleEvent &outAEReply);	virtual void		HandleUndo(AppleEvent &outAEReply);	virtual void		HandleRedo(AppleEvent &outAEReply);	virtual	LSemanticAction *	MakeCutAction(void);	virtual	LSemanticAction *	MakeClearAction(void);	virtual	LSemanticAction *	MakePasteAction(void);					//	Implementation	virtual	void		Click(SMouseDownEvent &inMouseDown);	virtual void		ResizeFrameBy(Int16 inWidthDelta, Int16 inHeightDelta,									Boolean inRefresh);	virtual void		ScrollImageBy(Int32 inLeftDelta, Int32 inTopDelta,									Boolean inRefresh);	virtual LModelProperty*						GetModelProperty(DescType inProperty);						//	Linkage to mEventHandler	virtual void		ClickSelf(const SMouseDownEvent &inMouseDown);	virtual void		EventMouseUp(const EventRecord &inMacEvent);	virtual	void		SpendTime(const EventRecord &inMacEvent);	virtual Boolean		HandleKeyPress(const EventRecord &inKeyEvent);	virtual void		AdjustCursorSelf(Point inPortPt, const EventRecord &inMacEvent);						//	LCommander features	virtual Boolean		ObeyCommand(CommandT inCommand, void *ioParam = nil);	virtual void		FindCommandStatus(CommandT inCommand,							Boolean &outEnabled, Boolean &outUsesMark,							Char16 &outMark, Str255 outName);protected:	virtual void		Draw(RgnHandle inSuperDrawRgnH);	virtual void		ActivateSelf(void);	virtual void		DeactivateSelf(void);	virtual void		BeTarget(void);	virtual void		DontBeTarget(void);						//	Implementation help	virtual void		DrawSelfSelection(void);	virtual void		FixHandlerFrame(void);	virtual void		UndoAddOldData(LAESemanticAction *inAction);						//	LView						//	AEOM				//	Data members				//		"Owned" by deriving class	LSelectionEventHandler	*mEventHandler;	LSelection				*mSelection;		LTargeter				*mFocusBox;};