//	===========================================================================//	LDragEventHandler.h					©1994 Metrowerks Inc. All rights reserved.//	===========================================================================#pragma	once#include	<LSelectionEventHandler.h>class	LSemanticUndoer;class	LManipulator;//	===========================================================================//	Constants:enum {	evtl_DragEventHandlerNextState = evtl_SelectionEventHandlerNextState};typedef enum {	dragType_Manipulator,	dragType_Selecting,	dragType_Data} DragTypeT;//	===========================================================================//	Class:class	LDragEventHandler			:	public LSelectionEventHandler{private:						LDragEventHandler(void);	//	parameters requiredpublic:				//	Maintenance						LDragEventHandler(LSelection *inSelection, LSemanticUndoer *inUndoer);	virtual				~LDragEventHandler();	virtual	void		Reset(void);					protected:				//	New features	virtual void		NoteSelectingDragStart(void);	virtual void		NoteSelectingDragStop(void);	virtual void		NoteSelectingDragMove(void);	virtual void		NoteMoveDragStart(void);	virtual void		NoteMoveDragStop(void);	virtual void		NoteMoveDragMove(void);				//	Implementation	virtual void		NoteDragStart(void);	virtual void		NoteDragStop(void);	virtual void		NoteDragMove(void);	virtual void		SetEvtState(Int32 inState);				//	New data members	LManipulator		*mDragItem;	DragTypeT			mDragType;};