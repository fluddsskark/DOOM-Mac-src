//	===========================================================================//	LDebugApp.h					©1994 Metrowerks Inc. All rights reserved.//	===========================================================================#pragma	once#include	<LDocApplication.h>typedef enum {	profiler_Off,	profiler_On,	profiler_Include_WNE,	profiler_Source_Controlled} TProfilerState;class LDebugApp		: public LDocApplication{public:						LDebugApp();	virtual				~LDebugApp();							virtual void		HandleAppleEvent(									const AppleEvent	&inAppleEvent,									AppleEvent			&outAEReply,									AEDesc				&outResult,									Int32				inAENumber);	virtual void		GetAEProperty(									DescType			inProperty,									const AEDesc		&inRequestedType,									AEDesc				&outPropertyDesc) const;	virtual void		SetAEProperty(									DescType			inProperty,									const AEDesc		&inValue,									AEDesc				&outAEReply);		static	Boolean		SetProfiler(Boolean inState);									#ifdef	__profile__	static	Boolean		SetProfiler_(Boolean inState);	static	Boolean		WaitNextEvent(									short 		inEventMask,									EventRecord	*outEvent,									long		inSleep,									RgnHandle	inMouseRgn);	virtual	void		ProcessNextEvent(void);protected:	static	TProfilerState	sProfilerState;	static	Int16			sProfilerOn;	static	Int32			sProfilerTimeUnit;	static	Int32			sProfilerMethod;	static	Int32			sProfilerMaxFunctions;	static	Int32			sProfilerMaxStack;	static	Str255			sProfilerDumpFile;	//	Member should be protected.#endif};