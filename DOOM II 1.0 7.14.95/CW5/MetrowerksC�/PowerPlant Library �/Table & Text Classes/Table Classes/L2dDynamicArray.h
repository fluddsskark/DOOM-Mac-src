//	===========================================================================//	L2dDymanicArray.h					©1994 Metrowerks Inc. All rights reserved.//	===========================================================================#pragma once/*	A class for objects containing 2d arrays of records.		Initial implementation is for a non-sparse internal representation.	However, the public access functions do not prevent a sparse matrix	implmentation.  The default record size (4 bytes) works for a 2d array	of object pointers.  */#include	<LList.h>class	L2dDynamicArray {public:				//	Maintenance					L2dDynamicArray(Int32 inItemSize = 4);	virtual			~L2dDynamicArray();					//	Queries	virtual Int32		GetItemSize(void);	virtual void		GetDimensions(Int32 &outRowCount, Int32 &outColCount);					//	Access functions	virtual Boolean		FetchItemAt2d(Int32 inColumn, Int32 inRow, void *outItem);	virtual void		SetItemAt2d(Int32 inColumn, Int32 inRow, void *inItem);					//	Manipulation	virtual void		InsertRow(Int32 inRow);	virtual void		InsertColumn(Int32 inColumn);	virtual void		DeleteRow(Int32 inRow);	virtual void		DeleteColumn(Int32 inColumn);	protected:				//	Implementation	virtual void		CheckSizes(void);	virtual	LDynamicArray *	MakeNewRow(void);protected:				//	Data members	Int32				mElementSize;	LList				mRows;		//	implemented as a list of rows of elements.		Int32				mRowCount;	//	number of rows in 2d array	Int32				mColCount;	//	number of columns in 2d array									//	The above could be considered the corresponding									//	virtual number for a sparse array -- if implemented									//	as a sparse array.};		