//	===========================================================================//	LTextHandler.h					©1994 Metrowerks Inc. All rights reserved.//	===========================================================================#pragma	once#include	<LDataDragEventHandler.h>#ifndef		__TEXTEDIT__#include	<TextEdit.h>#endifclass	LNTextEdit;class	LTextEngine;class	LTextEditHandler			:	public LDataDragEventHandler{private:						LTextEditHandler();	//	Must provide parameterspublic:				//	Maintenance						LTextEditHandler(								LNTextEdit			*inTextFlow,								LSelection			*inSelection,								LSemanticUndoer		*inUndoer);	virtual				~LTextEditHandler();					protected:				//	Implementation					//	LEventHandler	virtual Boolean		DoEvent(const EventRecord &inEvent);	virtual void		Activate(void);	virtual void		Deactivate(void);	virtual void		KeyDown(void);	virtual void		Idle(void);	virtual void		NoteNthClick(Int16 inClickCount, Point inWhere);	virtual Boolean		DragIsAcceptable(DragReference inDragRef);					//	New data members	LNTextEdit				*mTextFlow;//	TEHandle				mTextEditH;		//	Loaded from mTextFlow for convenience.	LTextEngine				*mText;		//	Only valid after DoEvent has started!};enum {	evtl_Typing = evtl_DataDragEventHandlerNextState,	evtl_TextHandlerNextState};