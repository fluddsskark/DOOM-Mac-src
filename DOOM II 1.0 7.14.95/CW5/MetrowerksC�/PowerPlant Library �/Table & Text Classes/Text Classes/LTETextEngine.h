#pragma	once//	===========================================================================//	LTETextEngine.h				©1994 Metrowerks Inc. All rights reserved.//	===========================================================================#include	<LTextEngine.h>#include	<TextEdit.h>class	LTETextEngine			:	public	LTextEngine{public:						LTETextEngine();	virtual				~LTETextEngine();				//	Linkage	virtual void		Activate(void);	virtual void		Deactivate(void);	virtual void		Idle(void);	virtual Boolean		DoKey(EventRecord &inEventRecord);	virtual void		Click(SPoint32 inWhere, EventRecord &inEventRecord, Int16 inClickCount = 1);				//	Appearance	virtual	void		SetAttributes(Uint16 inAttributes);	virtual	void		SetTextTraits(const TextTraitsRecord &inTraits);	virtual void		GetImageSize(SDimension32 *outSize) const;	virtual void		SetImageSize(const SDimension32 &inSize);	virtual void		GetViewRect(								SPoint32		*outLocation,								SDimension32	*outSize) const;	virtual void		SetViewRect(								const SPoint32		&inLocation,								const SDimension32	&inSize);	virtual void		ScrollView(								Int32			inLeftDelta,								Int32			inTopDelta,								Boolean			inRefresh);	virtual	void		ScrollToSelection(Boolean inBottom = true);	virtual void		DrawArea(								const SPoint32		&inLocation,								const SDimension32	&inSize);				//	Important ranges	virtual void		GetTotalRange(TextRangeT *outRange) const;	virtual void		SetSelectionRange(const TextRangeT &inRange);	virtual void		GetSelectionRange(TextRangeT *inRange) const;				//	Text query and editing	virtual void		TextDelete(const TextRangeT &inRange);						//	Favor tube functions instead (see LTextEngine.h for note)...	virtual void		TextGetThruPtr(const TextRangeT &inRange, Ptr outBuffer);	virtual void		TextReplaceByPtr(const TextRangeT &inRange, const Ptr inSrcText, Int32 inSrcLength);					//	Support for data tubes...	virtual	FlavorType	PickFlavorFrom(							const TextRangeT	&inRange,							const LDataTube		*inTube);	virtual void		AddFlavorTypesTo(							const TextRangeT	&inRange,							LDataTube			*inTube);	virtual Boolean		SendFlavorTo(							FlavorType			inFlavor,							const TextRangeT	&inRange,							LDataTube			*inTube);	virtual void		ReceiveDataFrom(							const	TextRangeT	&inRange,							LDataTube			*inTube);				//	Presentation//	virtual void		Hilite(TextRangeT &inRange);//	virtual void		LatentHilite(TextRangeT &inRange);					//	Presentation query	virtual	Int32		GetRangeHeight(const TextRangeT &inRange) const;	virtual	Boolean		Range2Image( 								TextRangeT			&inRange,								Boolean				inLeadingEdge,								SPoint32			*outWhere) const;	virtual Boolean		Image2Range(								SPoint32			inLocation,								Boolean				*outLeadingEdge,								TextRangeT			*outRange) const;	virtual Boolean		DoClickLoop(void);		virtual Int16		ThisChar(Int32 inInsertionLocation) const;		//	----------------------------------------------------------------------//	Implementation details...protected:				//	General implementation help	virtual Boolean		SpaceForBytes(Int32 inAdditionalBytes);	virtual	void		RefreshText(Int32 inAfterOffset = 0);	virtual	void		RecalcSelf(void);	virtual void		FixImageRect(void);		virtual void		Focus(void);				//	Hiliting implementation uglyness	virtual RgnHandle	GetHiliteRgn(void);				//	Glue specifically for Text Edit		virtual Int16		TEGetLine(Int16 inOffset) const;	virtual Boolean 	TEIsFrontOfLine(Int32 inCharacterOffset) const;	virtual Int32		TEGetCorrectOffset(Point inWhere) const;	TEHandle			mTEH;	static	TEClickLoopUPP	sClickUPP;	protected:				//	Text part implementation support	virtual	DescType	FindPara(								const TextRangeT	&inQueryRange,								TextRangeT			*ioRange,								Int32				*outEndOffset) const;	virtual	DescType	FindLine(								const TextRangeT	&inQueryRange,								TextRangeT			*ioRange,								Int32				*outEndOffset) const;	virtual	DescType	FindWord(								const TextRangeT	&inQueryRange,								TextRangeT			*ioRange,								Int32				*outEndOffset) const;};