//	===========================================================================//	LDragTube.h						©1994 Metrowerks Inc. All rights reserved.//	===========================================================================#pragma	once#include	<LDataTube.h>class	LList;class	LDragTube			:	public	LDataTube{private:						LDragTube();	//	Parameters requiredprotected://						LDragTube(DragReference inDragRef, ItemReference inDragItem);public:				//	Maintenance						LDragTube(DragReference inDragRef);						LDragTube(							DragReference		inDragRef,							const LTubeableItem	*inTubeableItem,							Boolean				inReqdFlavorsOnly = false);	virtual				~LDragTube();	virtual FlavorForT	GetFlavorForType(void)			{return flavorForDrag;}				//	Implementation	virtual void		AddFlavor(FlavorType inFlavor);	virtual	Boolean		FlavorExists(FlavorType inFlavor) const;	virtual	Int32		GetFlavorSize(FlavorType inFlavor);	virtual void *		GetFlavorData(							FlavorType	inFlavor,							void		*outFlavorData,							Int32		inOffset = 0,							Int32		inAmount = max_Int32);	virtual void		SetFlavorData(							FlavorType	inFlavor,							void		*inFlavorData,							Int32		inFlavorSize,							Int32		inOffset = 0,							Int32		inAmount = max_Int32);						//	Hierarchical tubes	virtual void		AddSubTube(LDataTube *inTube);	virtual LDataTube *	GetSubTube(Int32 inTubeIndex);	virtual	Int32		GetSubTubeCount(void);	virtual LDataTube *	MakeNewSubTubeFor(LTubeableItem *inItem);protected:	LList				*mSubTubes;	DragReference		mDragRef;	ItemReference		mItemRef;	//	Sometimes the same as mTubeableItem};