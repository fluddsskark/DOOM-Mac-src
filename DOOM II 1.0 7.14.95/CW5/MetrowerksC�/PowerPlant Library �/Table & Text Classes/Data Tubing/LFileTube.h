//	===========================================================================//	LFileTube.h						©1994 Metrowerks Inc. All rights reserved.//	===========================================================================#pragma	once#include	<LDataTube.h>class	LFile;class	LFileTube			:	public	LDataTube{private:						LFileTube();	//	Parameters requiredpublic:				//	Maintenance						LFileTube(LFile *inFile, Int16 inPrivileges = fsRdPerm);						LFileTube(							LFile				*inFile,							const LTubeableItem	*inTubeableItem,							Int16				inPrivileges = fsRdWrPerm,							Boolean				inReqdFlavorsOnly = true);	virtual				~LFileTube();	virtual FlavorForT	GetFlavorForType(void) 		{return flavorForFile;}				//	Implementation	virtual void		AddFlavor(FlavorType inFlavor);	virtual	Boolean		FlavorExists(FlavorType inFlavor) const;	virtual	Int32		GetFlavorSize(FlavorType inFlavor);	virtual void *		GetFlavorData(							FlavorType	inFlavor,							void		*outFlavorData,							Int32		inOffset = 0,							Int32		inAmount = max_Int32);	virtual void		SetFlavorData(							FlavorType	inFlavor,							void		*inFlavorData,							Int32		inFlavorSize,							Int32		inOffset = 0,							Int32		inAmount = max_Int32);protected:	virtual	Boolean		IsDataForkFlavor(FlavorType inFlavor);	virtual	void		CheckFlavor(FlavorType inFlavor);	virtual	Boolean	 	HasResourceFork(void);	virtual	void		AddResourceFork(void);	virtual	void		MakeResourceForkCurrent(void);	LFile				*mFile;	Int16				mPrivileges;	FlavorType			mFileType;};