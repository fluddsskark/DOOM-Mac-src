	typedef struct {			short								format;		short								numModifiers;		unsigned short			modNumber;		long								modInit;		short								numCommands;		unsigned short			cmd;		short								param1;		long								param2;		// Sampled sound header		Ptr									samplePtr;						/*if nil then samples are in sample area*/		unsigned long				numChannels;					/*number of channels,  ie mono = 1*/		Fixed								sampleRate;						/*sample rate in Apples Fixed point representation*/		unsigned long				loopStart;						/*same meaning as regular SoundHeader*/		unsigned long				loopEnd;							/*same meaning as regular SoundHeader*/		unsigned char				encode;								/*data structure used , stdSH, extSH, or cmpSH*/		unsigned char				baseFrequency;				/*same meaning as regular SoundHeader*/		unsigned long				numFrames;						/*length in total number of frames*/		extended80					AIFFSampleRate;				/*IEEE sample rate*/		Ptr									markerChunk;					/*sync track*/		Ptr									instrumentChunks;			/*AIFF instrument chunks*/		Ptr									AESRecording;		unsigned short			sampleSize;						/*number of bits in sample*/		unsigned short			futureUse1;						/*reserved by Apple*/		unsigned long				futureUse2;						/*reserved by Apple*/		unsigned long				futureUse3;						/*reserved by Apple*/		unsigned long				futureUse4;						/*reserved by Apple*/		unsigned char				sampleArea[1];				/*space for when samples follow directly*/	} tExtSndResourceHdr, *tExtSndResourceHdrPtr, **tExtSndResourceHdrHndl;		typedef struct {			short								format;		short								numModifiers;		unsigned short			modNumber;		long								modInit;		short								numCommands;		unsigned short			cmd;		short								param1;		long								param2;		Ptr									samplePtr;						/*if nil then samples are in sample area*/		unsigned long				numFrames;						/*length in total number of frames*/		Fixed								sampleRate;						/*sample rate in Apples Fixed point representation*/		unsigned long				loopStart;						/*same meaning as regular SoundHeader*/		unsigned long				loopEnd;							/*same meaning as regular SoundHeader*/		unsigned char				encode;								/*data structure used , stdSH, extSH, or cmpSH*/		unsigned char				baseFrequency;				/*same meaning as regular SoundHeader*/		unsigned char				sndData[1];				} tStdSndResourceHdr, *tStdSndResourceHdrPtr, **tStdSndResourceHdrHndl;